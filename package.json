{
	"name": "gitlens",
	"displayName": "GitLens — Git 超级增强",
	"description": "在 VS Code 内增强 Git 功能 — 通过 Git 责任归属注释和 CodeLens 一目了然地可视化代码作者，轻松导航和探索 Git 仓库，通过丰富的可视化和强大的对比命令获得有价值的洞察，还有更多功能",
	"version": "17.0.3",
	"engines": {
		"node": ">= 22.12.0",
		"pnpm": ">= 10.0.0",
		"vscode": "^1.92.0"
	},
	"license": "SEE LICENSE IN LICENSE",
	"publisher": "eamodio",
	"author": {
		"name": "Eric Amodio",
		"email": "eamodio@gmail.com"
	},
	"homepage": "https://gitkraken.com/gitlens",
	"bugs": {
		"url": "https://github.com/gitkraken/vscode-gitlens/issues"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/gitkraken/vscode-gitlens.git"
	},
	"main": "./dist/gitlens.js",
	"browser": "./dist/browser/gitlens.js",
	"icon": "images/gitlens-icon.png",
	"preview": false,
	"badges": [
		{
			"url": "https://img.shields.io/badge/gitkraken--community-gitlens-blue.svg?logo=slack&labelColor=555555",
			"href": "https://slack.gitkraken.com/",
			"description": "加入我们 #gitlens 频道"
		}
	],
	"categories": [
		"Other",
		"SCM Providers"
	],
	"galleryBanner": {
		"color": "#8647ae",
		"theme": "dark"
	},
	"keywords": [
		"gitlens",
		"git",
		"责任归属",
		"日志",
		"注释",
		"多根目录支持"
	],
	"activationEvents": [
		"onFileSystem:gitlens",
		"onUri",
		"onWebviewPanel:gitlens.graph",
		"onWebviewPanel:gitlens.patchDetails",
		"onWebviewPanel:gitlens.settings",
		"onWebviewPanel:gitlens.timeline",
		"onStartupFinished"
	],
	"capabilities": {
		"virtualWorkspaces": true,
		"untrustedWorkspaces": {
			"supported": "limited"
		}
	},
	"contributes": {
		"configuration": [
			{
				"id": "current-line-blame",
				"title": "行内责任归属",
				"order": 10,
				"properties": {
					"gitlens.currentLine.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否默认为当前行提供行内责任归属注释。使用 `切换行责任归属注释` 命令（`gitlens.toggleLineBlame`）可在当前窗口切换注释的显示与隐藏",
						"scope": "window",
						"order": 10
					},
					"gitlens.currentLine.pullRequests.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在行内责任归属注释中提供引入该提交的拉取请求（如有）信息。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 20
					},
					"gitlens.currentLine.format": {
						"type": "string",
						"default": "${author, }${agoOrDate}${' via  'pullRequest}${ • message|50?}",
						"markdownDescription": "指定行内责任归属注释的格式。详见 GitLens 文档中的 [_提交令牌_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens)。日期格式由 `#gitlens.currentLine.dateFormat#` 设置控制",
						"scope": "window",
						"order": 30
					},
					"gitlens.currentLine.uncommittedChangesFormat": {
						"type": "string",
						"default": null,
						"markdownDescription": "指定行内责任归属注释的未提交更改格式。详见 GitLens 文档中的 [_提交令牌_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens)。日期格式由 `#gitlens.currentLine.dateFormat#` 设置控制。\n\n**注意**：将此设置为空字符串将禁用未提交更改的行内责任归属注释。",
						"scope": "window",
						"order": 31
					},
					"gitlens.currentLine.fontFamily": {
						"type": "string",
						"default": "",
						"markdownDescription": "指定行内责任归属注释的字体系列",
						"scope": "window",
						"order": 33
					},
					"gitlens.currentLine.fontSize": {
						"type": "number",
						"default": 0,
						"markdownDescription": "指定行内责任归属注释的字体大小",
						"scope": "window",
						"order": 34
					},
					"gitlens.currentLine.fontStyle": {
						"type": "string",
						"default": "normal",
						"markdownDescription": "指定行内责任归属注释的字体样式",
						"scope": "window",
						"order": 35
					},
					"gitlens.currentLine.fontWeight": {
						"type": "string",
						"default": "normal",
						"markdownDescription": "指定行内责任归属注释的字体粗细",
						"scope": "window",
						"order": 36
					},
					"gitlens.currentLine.scrollable": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定行内责任归属注释是否可以滚动到视图中，当它超出视口时。**注意**：将此设置为 `false` 将抑制悬停显示在注释上的效果；将 `#gitlens.hovers.currentLine.over#` 设置为 `line` 以启用悬停在行上的任何位置显示。",
						"scope": "window",
						"order": 40
					},
					"gitlens.currentLine.dateFormat": {
						"type": [
							"string",
							"null"
						],
						"default": null,
						"markdownDescription": "指定如何格式化行内责任归属注释的绝对日期（例如，使用 `${date}` 令牌）。详见 [Moment.js 文档](https://momentjs.com/docs/#/displaying/format/) 中支持的格式",
						"scope": "window",
						"order": 50
					}
				}
			},
			{
				"id": "git-code-lens",
				"title": "Git 代码透镜",
				"order": 11,
				"properties": {
					"gitlens.codeLens.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否默认提供任何 Git CodeLens。使用 `切换 Git CodeLens` 命令（`gitlens.toggleCodeLens`）可在当前窗口切换 Git CodeLens 的显示与隐藏",
						"scope": "window",
						"order": 10
					},
					"gitlens.codeLens.authors.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否提供 _作者_ CodeLens，显示文件或代码块的作者数量以及最突出的作者（如果有多个）",
						"scope": "window",
						"order": 20
					},
					"gitlens.codeLens.authors.command": {
						"type": [
							"boolean",
							"string"
						],
						"enum": [
							false,
							"gitlens.toggleFileBlame",
							"gitlens.toggleFileHeatmap",
							"gitlens.toggleFileChanges",
							"gitlens.toggleFileChangesOnly",
							"gitlens.diffWithPrevious",
							"gitlens.revealCommitInView",
							"gitlens.showCommitsInView",
							"gitlens.showQuickCommitDetails",
							"gitlens.showQuickCommitFileDetails",
							"gitlens.showQuickFileHistory",
							"gitlens.showQuickRepoHistory",
							"gitlens.openCommitOnRemote",
							"gitlens.copyRemoteCommitUrl",
							"gitlens.openFileOnRemote",
							"gitlens.copyRemoteFileUrl"
						],
						"enumDescriptions": [
							"禁用点击交互",
							"切换文件责任归属",
							"切换文件热图",
							"切换文件更改（自提交前）",
							"切换文件更改（自提交）",
							"比较当前提交文件与上一个提交",
							"在侧边栏中显示提交",
							"在范围内搜索提交",
							"显示检查快速选择菜单",
							"显示提交文件详细信息快速选择菜单",
							"显示文件历史记录快速选择菜单",
							"显示分支历史记录快速选择菜单",
							"在远程服务上打开提交（如果可用）",
							"将远程提交 URL 复制到剪贴板（如果可用）",
							"在远程服务上打开文件修订（如果可用）",
							"将远程文件 URL 复制到剪贴板（如果可用）"
						],
						"default": "gitlens.toggleFileBlame",
						"markdownDescription": "指定单击 _作者_ CodeLens 时要执行的命令",
						"scope": "window",
						"order": 21
					},
					"gitlens.codeLens.recentChange.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否提供 _最近更改_ CodeLens，显示文件或代码块的最新提交的作者和日期",
						"scope": "window",
						"order": 30
					},
					"gitlens.codeLens.recentChange.command": {
						"type": [
							"boolean",
							"string"
						],
						"enum": [
							false,
							"gitlens.toggleFileBlame",
							"gitlens.toggleFileHeatmap",
							"gitlens.toggleFileChanges",
							"gitlens.toggleFileChangesOnly",
							"gitlens.diffWithPrevious",
							"gitlens.revealCommitInView",
							"gitlens.showCommitsInView",
							"gitlens.showQuickCommitDetails",
							"gitlens.showQuickCommitFileDetails",
							"gitlens.showQuickFileHistory",
							"gitlens.showQuickRepoHistory",
							"gitlens.openCommitOnRemote",
							"gitlens.copyRemoteCommitUrl",
							"gitlens.openFileOnRemote",
							"gitlens.copyRemoteFileUrl"
						],
						"enumDescriptions": [
							"禁用点击交互",
							"切换文件责任归属",
							"切换文件热图",
							"切换文件更改（自提交前）",
							"切换文件更改（自提交）",
							"比较当前提交文件与上一个提交",
							"在侧边栏中显示提交",
							"显示检查",
							"显示检查快速选择菜单",
							"显示提交文件详细信息快速选择菜单",
							"显示文件历史记录快速选择菜单",
							"显示分支历史记录快速选择菜单",
							"在远程服务上打开提交（如果可用）",
							"将远程提交 URL 复制到剪贴板（如果可用）",
							"在远程服务上打开文件修订（如果可用）",
							"将远程文件 URL 复制到剪贴板（如果可用）"
						],
						"default": "gitlens.showQuickCommitFileDetails",
						"markdownDescription": "指定单击 _最近更改_ CodeLens 时要执行的命令",
						"scope": "window",
						"order": 31
					},
					"gitlens.codeLens.scopes": {
						"type": "array",
						"default": [
							"document",
							"containers"
						],
						"items": {
							"type": "string",
							"enum": [
								"document",
								"containers",
								"blocks"
							],
							"enumDescriptions": [
								"在文档顶部添加 CodeLens",
								"在容器类符号（模块、类、接口等）开头添加 CodeLens",
								"在块类符号（函数、方法等）行开头添加 CodeLens"
							]
						},
						"minItems": 0,
						"maxItems": 3,
						"uniqueItems": true,
						"markdownDescription": "指定 Git CodeLens 将显示在文档中的位置",
						"scope": "language-overridable",
						"order": 40
					},
					"gitlens.codeLens.symbolScopes": {
						"type": "array",
						"items": {
							"type": "string"
						},
						"uniqueItems": true,
						"markdownDescription": "指定 Git CodeLens 将显示或不显示在文档中的一组文档符号。以 `!` 为前缀以避免为符号提供 Git CodeLens。必须是 `SymbolKind` 的成员",
						"scope": "language-overridable",
						"order": 50
					},
					"gitlens.codeLens.includeSingleLineSymbols": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否在仅跨一行的符号上提供任何 Git CodeLens",
						"scope": "window",
						"order": 60
					},
					"gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors": {
						"type": "string",
						"default": "$(ellipsis)",
						"markdownDescription": "指定在有未保存更改时，替代 _最近更改_ 和 _作者_ CodeLens 的字符串",
						"scope": "window",
						"order": 70
					},
					"gitlens.strings.codeLens.unsavedChanges.recentChangeOnly": {
						"type": "string",
						"default": "$(ellipsis)",
						"markdownDescription": "指定在有未保存更改时，替代 _最近更改_ CodeLens 的字符串",
						"scope": "window",
						"order": 71
					},
					"gitlens.strings.codeLens.unsavedChanges.authorsOnly": {
						"type": "string",
						"default": "$(ellipsis)",
						"markdownDescription": "指定在有未保存更改时，替代 _作者_ CodeLens 的字符串",
						"scope": "window",
						"order": 72
					},
					"gitlens.codeLens.dateFormat": {
						"type": [
							"string",
							"null"
						],
						"default": null,
						"markdownDescription": "指定 Git CodeLens 中绝对日期的格式。详见 [Moment.js 文档](https://momentjs.com/docs/#/displaying/format/) 中支持的格式",
						"scope": "window",
						"order": 73
					},
					"gitlens.codeLens.scopesByLanguage": {
						"deprecationMessage": "已弃用。请改用每种语言的 `gitlens.codeLens.scopes` 和 `gitlens.codeLens.symbolScopes` 设置",
						"markdownDeprecationMessage": "已弃用。请改用每种语言的 `#gitlens.codeLens.scopes#` 和 `#gitlens.codeLens.symbolScopes#` 设置"
					}
				}
			},
			{
				"id": "status-bar-blame",
				"title": "状态栏责任归属",
				"order": 12,
				"properties": {
					"gitlens.statusBar.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在状态栏中提供责任归属信息",
						"scope": "window",
						"order": 10
					},
					"gitlens.statusBar.pullRequests.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在状态栏中提供引入该提交的拉取请求（如有）信息。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 20
					},
					"gitlens.statusBar.format": {
						"type": "string",
						"default": "${author}, ${agoOrDate}${' via  'pullRequest}",
						"markdownDescription": "指定状态栏中责任归属信息的格式。详见 GitLens 文档中的 [_提交令牌_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens)。日期格式由 `#gitlens.statusBar.dateFormat#` 设置控制",
						"scope": "window",
						"order": 30
					},
					"gitlens.statusBar.alignment": {
						"type": "string",
						"default": "right",
						"enum": [
							"left",
							"right"
						],
						"enumDescriptions": [
							"左对齐",
							"右对齐"
						],
						"markdownDescription": "指定状态栏中责任归属信息的对齐方式",
						"scope": "window",
						"order": 40
					},
					"gitlens.statusBar.command": {
						"type": "string",
						"default": "gitlens.showQuickCommitDetails",
						"enum": [
							"gitlens.toggleFileBlame",
							"gitlens.toggleFileHeatmap",
							"gitlens.toggleFileChanges",
							"gitlens.toggleFileChangesOnly",
							"gitlens.toggleCodeLens",
							"gitlens.diffWithPrevious",
							"gitlens.diffWithWorking",
							"gitlens.revealCommitInView",
							"gitlens.showCommitsInView",
							"gitlens.showQuickCommitDetails",
							"gitlens.showQuickCommitFileDetails",
							"gitlens.showQuickFileHistory",
							"gitlens.showQuickRepoHistory",
							"gitlens.openCommitOnRemote",
							"gitlens.copyRemoteCommitUrl",
							"gitlens.openFileOnRemote",
							"gitlens.copyRemoteFileUrl"
						],
						"enumDescriptions": [
							"切换文件责任归属",
							"切换文件热图",
							"切换文件更改（自提交前）",
							"切换文件更改（自提交）",
							"切换 Git CodeLens",
							"比较当前行提交与上一个提交",
							"比较当前行提交与工作区",
							"在侧边栏中显示提交",
							"显示检查",
							"显示检查快速选择菜单",
							"显示提交文件详细信息快速选择菜单",
							"显示文件历史记录快速选择菜单",
							"显示分支历史记录快速选择菜单",
							"在远程服务上打开提交（如果可用）",
							"将远程提交 URL 复制到剪贴板（如果可用）",
							"在远程服务上打开文件修订（如果可用）",
							"将远程文件 URL 复制到剪贴板（如果可用）"
						],
						"markdownDescription": "指定单击状态栏中责任归属信息时要执行的命令",
						"scope": "window",
						"order": 50
					},
					"gitlens.statusBar.tooltipFormat": {
						"type": "string",
						"default": "${avatar} &nbsp;__${author}__ &nbsp;$(history) ${ago} _(${date})_${' via  'pullRequest} ${message}${\n\n---\n\nfootnotes}\n\n${commands}",
						"editPresentation": "multilineText",
						"markdownDescription": "指定状态栏中责任归属信息悬停显示的格式（以 Markdown 格式）。详见 GitLens 文档中的 [_提交令牌_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens)",
						"scope": "window",
						"order": 60
					},
					"gitlens.statusBar.reduceFlicker": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在更改行时避免清除先前的责任归属信息，以减少状态栏的“闪烁”",
						"scope": "window",
						"order": 70
					},
					"gitlens.statusBar.dateFormat": {
						"type": [
							"string",
							"null"
						],
						"default": null,
						"markdownDescription": "指定状态栏中责任归属信息的绝对日期格式（例如，使用 `${date}` 令牌）。详见 [Moment.js 文档](https://momentjs.com/docs/#/displaying/format/) 中支持的格式",
						"scope": "window",
						"order": 80
					}
				}
			},
			{
				"id": "hovers",
				"title": "悬停",
				"order": 13,
				"properties": {
					"gitlens.hovers.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否提供任何悬停",
						"scope": "window",
						"order": 10
					},
					"gitlens.hovers.avatars": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在悬停中显示头像图片",
						"scope": "window",
						"order": 20
					},
					"gitlens.hovers.avatarSize": {
						"type": "number",
						"default": 32,
						"markdownDescription": "指定悬停中头像图片的大小",
						"scope": "window",
						"order": 21
					},
					"gitlens.hovers.pullRequests.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在悬停中提供引入该提交的拉取请求（如有）信息。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 30
					},
					"gitlens.hovers.autolinks.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在提交消息中自动链接外部资源",
						"scope": "window",
						"order": 31
					},
					"gitlens.hovers.autolinks.enhanced": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否查找提交消息中自动链接外部资源的附加详细信息。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 32
					},
					"gitlens.hovers.currentLine.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否为当前行提供任何悬停",
						"scope": "window",
						"order": 40
					},
					"gitlens.hovers.currentLine.over": {
						"type": "string",
						"default": "annotation",
						"enum": [
							"annotation",
							"line"
						],
						"enumDescriptions": [
							"仅在悬停在行注释上时显示",
							"悬停在行上的任何位置时显示"
						],
						"markdownDescription": "指定何时触发当前行的悬停",
						"scope": "window",
						"order": 41
					},
					"gitlens.hovers.currentLine.details": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否为当前行提供 _提交详细信息_ 悬停",
						"scope": "window",
						"order": 42
					},
					"gitlens.hovers.currentLine.changes": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否为当前行提供 _更改（差异）_ 悬停",
						"scope": "window",
						"order": 43
					},
					"gitlens.hovers.annotations.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在显示责任归属注释时提供任何悬停",
						"scope": "window",
						"order": 50
					},
					"gitlens.hovers.annotations.over": {
						"type": "string",
						"default": "line",
						"enum": [
							"annotation",
							"line"
						],
						"enumDescriptions": [
							"仅在悬停在行注释上时显示",
							"悬停在行上的任何位置时显示"
						],
						"markdownDescription": "指定在显示责任归属注释时何时触发悬停",
						"scope": "window",
						"order": 51
					},
					"gitlens.hovers.annotations.details": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否为显示责任归属注释时的所有行提供 _提交详细信息_ 悬停",
						"scope": "window",
						"order": 52
					},
					"gitlens.hovers.annotations.changes": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否为显示责任归属注释时的所有行提供 _更改（差异）_ 悬停",
						"scope": "window",
						"order": 53
					},
					"gitlens.hovers.detailsMarkdownFormat": {
						"type": "string",
						"default": "${avatar} &nbsp;__${author}__ &nbsp;$(history) ${ago} _(${date})_${' via  'pullRequest} ${message}${\n\n---\n\nfootnotes}\n\n${commands}",
						"editPresentation": "multilineText",
						"markdownDescription": "指定 _提交详细信息_ 悬停的格式（以 Markdown 格式）。详见 GitLens 文档中的 [_提交令牌_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens)",
						"scope": "window",
						"order": 60
					},
					"gitlens.hovers.changesDiff": {
						"type": "string",
						"default": "line",
						"enum": [
							"line",
							"hunk"
						],
						"enumDescriptions": [
							"仅显示行的更改",
							"显示相关更改集"
						],
						"markdownDescription": "指定是否在 _更改（差异）_ 悬停中仅显示行的更改或相关更改集",
						"scope": "window",
						"order": 70
					}
				}
			},
			{
				"id": "file-annotations",
				"title": "文件注释",
				"order": 14,
				"properties": {
					"gitlens.fileAnnotations.dismissOnEscape": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定按下 `ESC` 键是否会关闭活动的文件注释",
						"scope": "window",
						"order": 10
					},
					"gitlens.fileAnnotations.command": {
						"type": [
							"string",
							"null"
						],
						"default": null,
						"enum": [
							null,
							"blame",
							"heatmap",
							"changes"
						],
						"enumDescriptions": [
							"显示一个菜单以选择要切换的文件注释",
							"切换文件责任归属注释",
							"切换文件热图注释",
							"切换文件更改注释"
						],
						"markdownDescription": "指定编辑器标题中的文件注释按钮是显示菜单还是立即切换指定的文件注释",
						"scope": "window",
						"order": 20
					},
					"gitlens.fileAnnotations.preserveWhileEditing": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定文件注释是否会在编辑时保留。使用 `#gitlens.advanced.blame.delayAfterEdit#` 控制在文件仍然是脏的情况下，注释更新之前等待的时间",
						"scope": "window",
						"order": 30
					},
					"gitlens.advanced.blame.delayAfterEdit": {
						"type": "number",
						"default": 5000,
						"markdownDescription": "指定在编辑后但在保存之前，重新标记未保存文档之前等待的时间（以毫秒为单位）。使用 0 指定无限等待。仅适用于文件在 `#gitlens.advanced.sizeThresholdAfterEdit#` 之下",
						"scope": "window",
						"order": 90
					},
					"gitlens.advanced.blame.sizeThresholdAfterEdit": {
						"type": "number",
						"default": 5000,
						"markdownDescription": "指定在编辑后仍未保存的情况下，允许重新标记的最大文档大小（以行数为单位）。使用 0 指定没有最大值",
						"scope": "window",
						"order": 91
					}
				}
			},
			{
				"id": "file-blame",
				"title": "文件责任归属",
				"order": 15,
				"properties": {
					"gitlens.blame.toggleMode": {
						"type": "string",
						"default": "file",
						"enum": [
							"file",
							"window"
						],
						"enumDescriptions": [
							"单独切换每个文件",
							"切换窗口，即一次切换所有文件"
						],
						"markdownDescription": "指定文件责任归属注释的切换方式",
						"scope": "window",
						"order": 10
					},
					"gitlens.blame.format": {
						"type": "string",
						"default": "${message|50?} ${agoOrDate|14-}",
						"markdownDescription": "指定文件责任归属注释的格式。详见 GitLens 文档中的 [_提交令牌_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens)。日期格式由 `#gitlens.blame.dateFormat#` 设置控制",
						"scope": "window",
						"order": 20
					},
					"gitlens.blame.fontFamily": {
						"type": "string",
						"default": "",
						"markdownDescription": "指定文件责任归属注释的字体系列",
						"scope": "window",
						"order": 22
					},
					"gitlens.blame.fontSize": {
						"type": "number",
						"default": 0,
						"markdownDescription": "指定文件责任归属注释的字体大小",
						"scope": "window",
						"order": 23
					},
					"gitlens.blame.fontStyle": {
						"type": "string",
						"default": "normal",
						"markdownDescription": "指定文件责任归属注释的字体样式",
						"scope": "window",
						"order": 24
					},
					"gitlens.blame.fontWeight": {
						"type": "string",
						"default": "normal",
						"markdownDescription": "指定文件责任归属注释的字体粗细",
						"scope": "window",
						"order": 25
					},
					"gitlens.blame.heatmap.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在文件责任归属注释中提供热图指示器",
						"scope": "window",
						"order": 30
					},
					"gitlens.blame.heatmap.location": {
						"type": "string",
						"default": "right",
						"enum": [
							"left",
							"right"
						],
						"enumDescriptions": [
							"在文件责任归属注释的左边缘添加热图指示器",
							"在文件责任归属注释的右边缘添加热图指示器"
						],
						"markdownDescription": "指定热图指示器将在文件责任归属注释中的显示位置",
						"scope": "window",
						"order": 31
					},
					"gitlens.blame.avatars": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在文件责任归属注释中显示头像图片",
						"scope": "window",
						"order": 40
					},
					"gitlens.blame.compact": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否压缩（去重）匹配的相邻文件责任归属注释",
						"scope": "window",
						"order": 50
					},
					"gitlens.blame.highlight.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否高亮与当前行相关联的行",
						"scope": "window",
						"order": 60
					},
					"gitlens.blame.highlight.locations": {
						"type": "array",
						"default": [
							"gutter",
							"line",
							"overview"
						],
						"items": {
							"type": "string",
							"enum": [
								"gutter",
								"line",
								"overview"
							],
							"enumDescriptions": [
								"在边距中添加指示器",
								"添加全行高亮背景颜色",
								"在滚动条中添加指示器"
							]
						},
						"minItems": 1,
						"maxItems": 3,
						"uniqueItems": true,
						"markdownDescription": "指定关联行高亮将在何处显示",
						"scope": "window",
						"order": 61
					},
					"gitlens.blame.separateLines": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定文件责任归属注释是否会被一个小间隙分隔",
						"scope": "window",
						"order": 70
					},
					"gitlens.blame.dateFormat": {
						"type": [
							"string",
							"null"
						],
						"default": null,
						"markdownDescription": "指定文件责任归属注释中绝对日期的格式（例如，使用 `${date}` 令牌）。详见 [Moment.js 文档](https://momentjs.com/docs/#/displaying/format/) 中支持的格式",
						"scope": "window",
						"order": 80
					}
				}
			},
			{
				"id": "file-changes",
				"title": "文件更改",
				"order": 16,
				"properties": {
					"gitlens.changes.toggleMode": {
						"type": "string",
						"default": "file",
						"enum": [
							"file",
							"window"
						],
						"enumDescriptions": [
							"单独切换每个文件",
							"切换窗口，即一次切换所有文件"
						],
						"markdownDescription": "指定文件更改注释的切换方式",
						"scope": "window",
						"order": 10
					},
					"gitlens.changes.locations": {
						"type": "array",
						"default": [
							"gutter",
							"line",
							"overview"
						],
						"items": {
							"type": "string",
							"enum": [
								"gutter",
								"line",
								"overview"
							],
							"enumDescriptions": [
								"在边距中添加指示器",
								"添加全行高亮背景颜色",
								"在滚动条中添加指示器"
							]
						},
						"minItems": 1,
						"maxItems": 3,
						"uniqueItems": true,
						"markdownDescription": "指定文件更改注释的指示器将在何处显示",
						"scope": "window",
						"order": 20
					}
				}
			},
			{
				"id": "file-heatmap",
				"title": "文件热图",
				"order": 17,
				"properties": {
					"gitlens.heatmap.toggleMode": {
						"type": "string",
						"default": "file",
						"enum": [
							"file",
							"window"
						],
						"enumDescriptions": [
							"单独切换每个文件",
							"切换窗口，即一次切换所有文件"
						],
						"markdownDescription": "指定文件热图注释的切换方式",
						"scope": "window",
						"order": 10
					},
					"gitlens.heatmap.locations": {
						"type": "array",
						"default": [
							"gutter",
							"overview"
						],
						"items": {
							"type": "string",
							"enum": [
								"gutter",
								"line",
								"overview"
							],
							"enumDescriptions": [
								"在边距中添加指示器",
								"添加全行高亮背景颜色",
								"在滚动条中添加指示器"
							]
						},
						"minItems": 1,
						"maxItems": 3,
						"uniqueItems": true,
						"markdownDescription": "指定文件热图注释的指示器将在何处显示",
						"scope": "window",
						"order": 20
					},
					"gitlens.heatmap.fadeLines": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否淡化较旧的行",
						"scope": "window",
						"order": 21
					},
					"gitlens.heatmap.ageThreshold": {
						"type": "number",
						"default": 90,
						"markdownDescription": "指定最近更改的年龄（以天为单位），超过此值后，文件热图注释将变为冷色（即使用 `#gitlens.heatmap.coldColor#` 而不是 `#gitlens.heatmap.hotColor#`）",
						"scope": "window",
						"order": 30
					},
					"gitlens.heatmap.coldColor": {
						"type": "string",
						"default": "#0a60f6",
						"markdownDescription": "指定文件热图注释的基本颜色，当最近更改的年龄（冷色）超过 `#gitlens.heatmap.ageThreshold#` 值时",
						"scope": "window",
						"order": 40
					},
					"gitlens.heatmap.hotColor": {
						"type": "string",
						"default": "#f66a0a",
						"markdownDescription": "指定文件热图注释的基本颜色，当最近更改的年龄（热色）小于 `#gitlens.heatmap.ageThreshold#` 值时",
						"scope": "window",
						"order": 50
					}
				}
			},
			{
				"id": "graph",
				"title": "提交图 (ᴘʀᴏ)",
				"order": 50,
				"properties": {
					"gitlens.graph.layout": {
						"type": "string",
						"default": "panel",
						"enum": [
							"editor",
							"panel"
						],
						"enumDescriptions": [
							"优先在编辑器区域显示提交图",
							"优先在底部面板显示提交图"
						],
						"markdownDescription": "指定 _提交图_ 的首选布局",
						"scope": "window",
						"order": 1
					},
					"gitlens.graph.allowMultiple": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否允许在编辑器区域打开多个 _提交图_ 实例",
						"scope": "window",
						"order": 2
					},
					"gitlens.graph.multiselect": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否允许在 _提交图_ 中选择多个提交",
						"scope": "window",
						"order": 10
					},
					"gitlens.graph.minimap.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _提交图_ 上方显示提交活动的迷你图",
						"scope": "window",
						"order": 100
					},
					"gitlens.graph.minimap.dataType": {
						"type": "string",
						"default": "commits",
						"enum": [
							"commits",
							"lines"
						],
						"enumDescriptions": [
							"在迷你图中显示每天的提交数量",
							"在迷你图中显示每天更改的行数"
						],
						"markdownDescription": "指定 _提交图_ 中迷你图上显示的数据",
						"scope": "window",
						"order": 101
					},
					"gitlens.graph.minimap.additionalTypes": {
						"type": "array",
						"default": [
							"localBranches",
							"stashes"
						],
						"items": {
							"type": "string",
							"enum": [
								"localBranches",
								"remoteBranches",
								"pullRequests",
								"stashes",
								"tags"
							],
							"enumDescriptions": [
								"标记本地分支的位置",
								"标记远程分支的位置",
								"标记拉取请求的位置",
								"标记存储的位置",
								"标记标签的位置"
							]
						},
						"minItems": 0,
						"maxItems": 5,
						"uniqueItems": true,
						"markdownDescription": "指定 _提交图_ 中迷你图上显示的其他标记",
						"scope": "window",
						"order": 102
					},
					"gitlens.graph.scrollMarkers.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _提交图_ 中的滚动条上显示标记",
						"scope": "window",
						"order": 200
					},
					"gitlens.graph.scrollMarkers.additionalTypes": {
						"type": "array",
						"default": [
							"localBranches",
							"stashes"
						],
						"items": {
							"type": "string",
							"enum": [
								"localBranches",
								"remoteBranches",
								"pullRequests",
								"stashes",
								"tags"
							],
							"enumDescriptions": [
								"标记本地分支的位置",
								"标记远程分支的位置",
								"标记拉取请求的位置",
								"标记存储的位置",
								"标记标签的位置"
							]
						},
						"minItems": 0,
						"maxItems": 5,
						"uniqueItems": true,
						"markdownDescription": "指定 _提交图_ 中滚动条上显示的其他标记",
						"scope": "window",
						"order": 201
					},
					"gitlens.graph.sidebar.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _提交图_ 中显示侧边栏",
						"scope": "window",
						"order": 300
					},
					"gitlens.graph.experimental.renderer.enabled": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "（实验性）指定是否为 _提交图_ 使用新渲染器。需要重启",
						"scope": "window",
						"order": 301,
						"tags": [
							"experimental"
						]
					},
					"gitlens.graph.branchesVisibility": {
						"type": "string",
						"enum": [
							"all",
							"smart",
							"current"
						],
						"enumDescriptions": [
							"显示所有分支",
							"仅显示相关分支",
							"仅显示当前分支"
						],
						"default": "all",
						"markdownDescription": "指定 _提交图_ 中分支的可见性",
						"scope": "window",
						"order": 400
					},
					"gitlens.graph.showDetailsView": {
						"type": [
							"boolean",
							"string"
						],
						"default": "selection",
						"enum": [
							false,
							"open",
							"selection"
						],
						"enumDescriptions": [
							"从不自动显示 _提交详细信息_ 视图",
							"仅在打开 _提交图_ 时自动显示 _提交详细信息_ 视图",
							"在 _提交图_ 中选择更改时自动显示 _提交详细信息_ 视图"
						],
						"markdownDescription": "指定何时为 _提交图_ 中选定的行显示 _提交详细信息_ 视图",
						"scope": "window",
						"order": 500
					},
					"gitlens.graph.dateFormat": {
						"type": [
							"string",
							"null"
						],
						"default": null,
						"markdownDescription": "指定 _提交图_ 中绝对日期的格式。详见 [Moment.js 文档](https://momentjs.com/docs/#/displaying/format/) 中支持的格式",
						"scope": "window",
						"order": 600
					},
					"gitlens.graph.dateStyle": {
						"type": [
							"string",
							"null"
						],
						"default": null,
						"enum": [
							"relative",
							"absolute"
						],
						"enumDescriptions": [
							"例如 1 天前",
							"例如 2018 年 7 月 25 日下午 7:18"
						],
						"markdownDescription": "指定 _提交图_ 中日期的显示方式",
						"scope": "window",
						"order": 601
					},
					"gitlens.graph.commitOrdering": {
						"type": "string",
						"default": "date",
						"enum": [
							"date",
							"author-date",
							"topo"
						],
						"enumDescriptions": [
							"按提交时间戳的逆时间顺序显示提交",
							"按作者时间戳的逆时间顺序显示提交",
							"按提交时间戳的逆时间顺序显示提交，但避免混合多个历史线"
						],
						"markdownDescription": "指定 _提交图_ 中提交的显示顺序",
						"scope": "window",
						"order": 602
					},
					"gitlens.graph.onlyFollowFirstParent": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否在 _提交图_ 中仅跟随第一个父级显示提交",
						"order": 603
					},
					"gitlens.graph.dimMergeCommits": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否在 _提交图_ 中使合并提交行变暗（弱化）",
						"scope": "window",
						"order": 700
					},
					"gitlens.graph.showUpstreamStatus": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _提交图_ 中显示本地分支的上游状态",
						"scope": "window",
						"order": 701
					},
					"gitlens.graph.showRemoteNames": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否在 _提交图_ 中显示远程分支上的远程名称",
						"scope": "window",
						"order": 702
					},
					"gitlens.graph.issues.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _提交图_ 中显示分支上的关联问题。需要连接到受支持的问题服务（如 GitHub）",
						"scope": "window",
						"order": 703
					},
					"gitlens.graph.pullRequests.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _提交图_ 中显示远程分支上的关联拉取请求。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 704
					},
					"gitlens.graph.avatars": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _提交图_ 中显示头像图片而不是作者首字母和远程图标",
						"scope": "window",
						"order": 704
					},
					"gitlens.graph.showGhostRefsOnRowHover": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _提交图_ 中悬停或选择行时显示虚拟分支/标签",
						"scope": "window",
						"order": 750
					},
					"gitlens.graph.highlightRowsOnRefHover": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _提交图_ 中悬停分支/标签时高亮与其关联的行",
						"scope": "window",
						"order": 751
					},
					"gitlens.graph.defaultItemLimit": {
						"type": "number",
						"default": 500,
						"markdownDescription": "指定 _提交图_ 中默认显示的项目数量。使用 0 指定没有限制",
						"scope": "window",
						"order": 800
					},
					"gitlens.graph.pageItemLimit": {
						"type": "number",
						"default": 200,
						"markdownDescription": "指定 _提交图_ 中分页时获取的额外项目数量。使用 0 指定没有限制",
						"scope": "window",
						"order": 801
					},
					"gitlens.graph.searchItemLimit": {
						"type": "number",
						"default": 100,
						"markdownDescription": "指定 _提交图_ 中搜索时收集的结果数量。使用 0 指定没有限制",
						"scope": "window",
						"order": 802
					},
					"gitlens.graph.scrollRowPadding": {
						"type": "number",
						"default": 0,
						"markdownDescription": "指定使用键盘或搜索更改选定行时，图表将滚动的行数",
						"scope": "window",
						"order": 900
					},
					"gitlens.graph.statusBar.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在状态栏中显示 _提交图_",
						"scope": "window",
						"order": 1000
					}
				}
			},
			{
				"id": "home",
				"title": "主页",
				"order": 55,
				"properties": {
					"gitlens.home.preview.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否启用新的主页预览",
						"scope": "window",
						"order": 10
					}
				}
			},
			{
				"id": "launchpad",
				"title": "启动板 (ᴘʀᴏ)",
				"order": 60,
				"properties": {
					"gitlens.launchpad.ignoredRepositories": {
						"type": "array",
						"default": [],
						"items": {
							"type": "string"
						},
						"markdownDescription": "指定在 _启动板_ 中忽略的存储库",
						"scope": "window",
						"order": 10
					},
					"gitlens.launchpad.includedOrganizations": {
						"type": "array",
						"default": [],
						"items": {
							"type": "string"
						},
						"markdownDescription": "指定在 _启动板_ 中包含的组织。如果为空，则包含所有组织",
						"scope": "window",
						"order": 11
					},
					"gitlens.launchpad.ignoredOrganizations": {
						"type": "array",
						"default": [],
						"items": {
							"type": "string"
						},
						"markdownDescription": "指定在 _启动板_ 中忽略的组织",
						"scope": "window",
						"order": 12
					},
					"gitlens.launchpad.staleThreshold": {
						"type": [
							"number",
							"null"
						],
						"default": null,
						"markdownDescription": "指定在 _启动板_ 中，拉取请求被视为陈旧并移至其他的天数",
						"scope": "window",
						"order": 20
					},
					"gitlens.launchpad.indicator.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否启用 _启动板_ 的状态栏指示器",
						"scope": "window",
						"order": 100
					},
					"gitlens.launchpad.indicator.icon": {
						"type": "string",
						"enum": [
							"default",
							"group"
						],
						"enumDescriptions": [
							"显示启动板图标",
							"显示最高优先级组的图标"
						],
						"default": "default",
						"markdownDescription": "指定 _启动板_ 状态栏指示器图标的样式",
						"scope": "window",
						"order": 110
					},
					"gitlens.launchpad.indicator.label": {
						"type": [
							"boolean",
							"string"
						],
						"enum": [
							false,
							"item",
							"counts"
						],
						"enumDescriptions": [
							"隐藏标签",
							"显示需要您注意的最高优先级项目",
							"显示需要您注意的项目的状态计数"
						],
						"default": "item",
						"markdownDescription": "指定 _启动板_ 状态栏指示器标签的显示",
						"scope": "window",
						"order": 120
					},
					"gitlens.launchpad.indicator.groups": {
						"type": "array",
						"default": [
							"mergeable",
							"blocked",
							"needs-review",
							"follow-up"
						],
						"items": {
							"type": "string",
							"enum": [
								"mergeable",
								"blocked",
								"needs-review",
								"follow-up"
							],
							"enumDescriptions": [
								"显示可合并的拉取请求",
								"显示被阻止的拉取请求",
								"显示需要您审查的拉取请求",
								"显示需要跟进的拉取请求"
							]
						},
						"minItems": 1,
						"uniqueItems": true,
						"markdownDescription": "指定在 _启动板_ 状态栏指示器上显示的拉取请求组",
						"scope": "window",
						"order": 130
					},
					"gitlens.launchpad.indicator.useColors": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否在 _启动板_ 状态栏指示器上使用颜色",
						"scope": "window",
						"order": 140
					},
					"gitlens.launchpad.indicator.polling.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定状态栏指示器是否会获取并显示 _启动板_ 的拉取请求数据",
						"scope": "window",
						"order": 150
					},
					"gitlens.launchpad.indicator.polling.interval": {
						"type": "number",
						"default": 30,
						"markdownDescription": "指定状态栏指示器获取 _启动板_ 的拉取请求数据的频率（以分钟为单位）。使用 0 禁用自动轮询",
						"scope": "window",
						"order": 160
					},
					"gitlens.launchpad.allowMultiple": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否允许将多个 _启动板_ 作为编辑器选项卡打开",
						"scope": "window",
						"order": 1000
					},
					"gitlens.launchpad.experimental.queryLimit": {
						"type": "number",
						"default": 100,
						"markdownDescription": "（实验性）指定 _启动板_ 中查询的拉取请求数量限制",
						"scope": "window",
						"order": 1100
					}
				}
			},
			{
				"id": "cloud-patches",
				"title": "云补丁 (ᴘʀᴇᴠɪᴇᴡ)",
				"order": 70,
				"properties": {
					"gitlens.cloudPatches.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否启用 _云补丁_ 的预览功能，允许您私密且安全地与特定团队成员和其他开发人员共享代码",
						"scope": "window",
						"order": 10,
						"tags": [
							"preview"
						]
					},
					"gitlens.cloudPatches.experimental.layout": {
						"type": "string",
						"default": "view",
						"enum": [
							"editor",
							"view"
						],
						"enumDescriptions": [
							"优先在编辑器区域显示云补丁",
							"优先在视图中显示云补丁"
						],
						"markdownDescription": "（实验性）指定 _云补丁_ 的首选布局",
						"scope": "window",
						"order": 20,
						"tags": [
							"experimental"
						]
					}
				}
			},
			{
				"id": "views",
				"title": "视图",
				"order": 100,
				"properties": {
					"gitlens.views.scm.grouped.default": {
						"type": "string",
						"default": "commits",
						"enum": [
							"commits",
							"branches",
							"remotes",
							"stashes",
							"tags",
							"worktrees",
							"contributors",
							"repositories",
							"searchAndCompare",
							"launchpad"
						],
						"enumDescriptions": [
							"提交视图",
							"分支视图",
							"远程视图",
							"存储视图",
							"标签视图",
							"工作树视图",
							"贡献者视图",
							"存储库视图",
							"搜索与比较视图",
							"启动板视图"
						],
						"markdownDescription": "指定 _GitLens_ 视图打开时显示的默认视图",
						"scope": "window",
						"order": 2
					},
					"gitlens.views.scm.grouped.views": {
						"type": "object",
						"default": {
							"commits": true,
							"branches": true,
							"remotes": true,
							"stashes": true,
							"tags": true,
							"worktrees": true,
							"contributors": true,
							"repositories": false,
							"searchAndCompare": false,
							"launchpad": false
						},
						"properties": {
							"commits": {
								"type": "boolean",
								"default": true,
								"description": "分组提交视图"
							},
							"branches": {
								"type": "boolean",
								"default": true,
								"description": "分组分支视图"
							},
							"remotes": {
								"type": "boolean",
								"default": true,
								"description": "分组远程视图"
							},
							"stashes": {
								"type": "boolean",
								"default": true,
								"description": "分组存储视图"
							},
							"tags": {
								"type": "boolean",
								"default": true,
								"description": "分组标签视图"
							},
							"worktrees": {
								"type": "boolean",
								"default": true,
								"description": "分组工作树视图"
							},
							"contributors": {
								"type": "boolean",
								"default": true,
								"description": "分组贡献者视图"
							},
							"repositories": {
								"type": "boolean",
								"default": false,
								"description": "分组存储库视图"
							},
							"searchAndCompare": {
								"type": "boolean",
								"default": true,
								"description": "分组搜索与比较视图"
							},
							"launchpad": {
								"type": "boolean",
								"default": false,
								"description": "分组启动板视图"
							}
						},
						"additionalProperties": false,
						"markdownDescription": "指定哪些视图将分组到源代码管理侧边栏的 _GitLens_ 视图中",
						"scope": "window",
						"order": 3
					},
					"gitlens.views.scm.grouped.hiddenViews": {
						"type": "object",
						"default": {
							"commits": false,
							"branches": false,
							"remotes": false,
							"stashes": false,
							"tags": false,
							"worktrees": false,
							"contributors": false,
							"repositories": true,
							"searchAndCompare": false,
							"launchpad": false
						},
						"properties": {
							"commits": {
								"type": "boolean",
								"default": false,
								"description": "隐藏提交视图"
							},
							"branches": {
								"type": "boolean",
								"default": false,
								"description": "隐藏分支视图"
							},
							"remotes": {
								"type": "boolean",
								"default": false,
								"description": "隐藏远程视图"
							},
							"stashes": {
								"type": "boolean",
								"default": false,
								"description": "隐藏存储视图"
							},
							"tags": {
								"type": "boolean",
								"default": false,
								"description": "隐藏标签视图"
							},
							"worktrees": {
								"type": "boolean",
								"default": false,
								"description": "隐藏工作树视图"
							},
							"contributors": {
								"type": "boolean",
								"default": false,
								"description": "隐藏贡献者视图"
							},
							"repositories": {
								"type": "boolean",
								"default": true,
								"description": "隐藏存储库视图"
							},
							"searchAndCompare": {
								"type": "boolean",
								"default": false,
								"description": "隐藏搜索与比较视图"
							},
							"launchpad": {
								"type": "boolean",
								"default": false,
								"description": "隐藏启动板视图"
							}
						},
						"additionalProperties": false,
						"markdownDescription": "指定哪些视图将在分组到源代码管理侧边栏的 _GitLens_ 视图中时隐藏",
						"scope": "window",
						"order": 4
					},
					"gitlens.views.collapseWorktreesWhenPossible": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在可能的情况下尝试将打开的工作树折叠为视图中的单个（公共）存储库",
						"scope": "window",
						"order": 5
					},
					"gitlens.views.multiselect": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否允许在视图中选择多个项目",
						"scope": "window",
						"order": 6
					},
					"gitlens.views.showCurrentBranchOnTop": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否始终在视图顶部显示当前分支",
						"scope": "window",
						"order": 7
					},
					"gitlens.views.showComparisonContributors": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在视图中的比较结果上显示 _贡献者_ 部分",
						"scope": "window",
						"order": 10
					},
					"gitlens.views.showContributorsStatistics": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否在视图中的 _贡献者_ 部分显示贡献者统计信息。这可能需要一些时间来计算，具体取决于存储库的大小",
						"scope": "window",
						"order": 11
					},
					"gitlens.views.showRelativeDateMarkers": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在视图中的修订（提交）历史记录上显示相对日期标记（_少于一周前_，_一周前_，_一个月前_ 等）",
						"scope": "window",
						"order": 12
					},
					"gitlens.views.defaultItemLimit": {
						"type": "number",
						"default": 10,
						"markdownDescription": "指定视图列表中默认显示的项目数量。使用 0 指定没有限制",
						"scope": "window",
						"order": 20
					},
					"gitlens.views.pageItemLimit": {
						"type": "number",
						"default": 40,
						"markdownDescription": "指定视图列表中分页时显示的项目数量。使用 0 指定没有限制",
						"scope": "window",
						"order": 21
					},
					"gitlens.views.formats.commits.label": {
						"type": "string",
						"default": "${❰ tips|11? ❱➤  }${message}",
						"markdownDescription": "指定视图中提交的格式。详见 GitLens 文档中的 [_提交令牌_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens)",
						"scope": "window",
						"order": 30
					},
					"gitlens.views.formats.commits.description": {
						"type": "string",
						"default": "${author, }${agoOrDate}",
						"markdownDescription": "指定视图中提交的描述格式。详见 GitLens 文档中的 [_提交令牌_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens)",
						"scope": "window",
						"order": 31
					},
					"gitlens.views.formats.commits.tooltip": {
						"type": "string",
						"default": "${avatar} &nbsp;__${author}__ &nbsp;$(history) ${ago} _(${date})_ \\\n${link}${' via  'pullRequest}${'&nbsp;&nbsp;'changesDetail} ${message}${\n\n---\n\nfootnotes}\n\n${tips}",
						"markdownDescription": "指定视图中提交的工具提示格式（以 Markdown 格式）。详见 GitLens 文档中的 [_提交令牌_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens)",
						"scope": "window",
						"order": 32
					},
					"gitlens.views.formats.commits.tooltipWithStatus": {
						"type": "string",
						"default": "${avatar} &nbsp;__${author}__ &nbsp;$(history) ${ago} _(${date})_ \\\n${link}${' via  'pullRequest}&nbsp;&nbsp;•&nbsp;&nbsp;{{slot-status}} ${message}${\n\n---\n\nfootnotes}\n\n${tips}",
						"markdownDescription": "指定视图中“文件”提交的工具提示格式（以 Markdown 格式）。详见 GitLens 文档中的 [_提交令牌_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens)",
						"scope": "window",
						"order": 32
					},
					"gitlens.views.formats.files.label": {
						"type": "string",
						"default": "${working  }${file}",
						"markdownDescription": "指定视图中文件的格式。详见 GitLens 文档中的 [_文件令牌_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#file-tokens)",
						"scope": "window",
						"order": 40
					},
					"gitlens.views.formats.files.description": {
						"type": "string",
						"default": "${directory}${  ←  originalPath}",
						"markdownDescription": "指定视图中文件的描述格式。详见 GitLens 文档中的 [_文件令牌_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#file-tokens)",
						"scope": "window",
						"order": 41
					},
					"gitlens.views.formats.stashes.label": {
						"type": "string",
						"default": "${message}",
						"markdownDescription": "指定视图中存储的格式。详见 GitLens 文档中的 [_提交令牌_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens)",
						"scope": "window",
						"order": 50
					},
					"gitlens.views.formats.stashes.description": {
						"type": "string",
						"default": "${stashOnRef, }${agoOrDate}",
						"markdownDescription": "指定视图中存储的描述格式。详见 GitLens 文档中的 [_提交令牌_](https://github.com/gitkraken/vscode-gitlens/wiki/Custom-Formatting#commit-tokens)",
						"scope": "window",
						"order": 51
					},
					"gitlens.views.formats.stashes.tooltip": {
						"type": "string",
						"default": "${link}${' on `'stashOnRef`}${'\\\n&nbsp;&nbsp;'changesDetail} \\\n &nbsp;$(history) ${ago} _(${date})_ ${message}${\n\n---\n\nfootnotes}",
						"markdownDescription": "指定视图中存储的工具提示格式（以 Markdown 格式）。详见 GitLens 文档中的 [_提交令牌_](https://github.com/eamodio/vscode-gitlens/wiki/Custom-Formatting#commit-tokens)",
						"scope": "window",
						"order": 52
					},
					"gitlens.views.openChangesInMultiDiffEditor": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在多差异编辑器（单个选项卡）中打开多个更改，或在单个差异编辑器（多个选项卡）中打开",
						"scope": "window",
						"order": 60
					},
					"gitlens.views.commitFileFormat": {
						"deprecationMessage": "已弃用。请改用 `gitlens.views.formats.files.label`",
						"markdownDeprecationMessage": "已弃用。请改用 `#gitlens.views.formats.files.label#`"
					},
					"gitlens.views.commitFileDescriptionFormat": {
						"deprecationMessage": "已弃用。请改用 `gitlens.views.formats.files.description`",
						"markdownDeprecationMessage": "已弃用。请改用 `#gitlens.views.formats.files.description#`"
					},
					"gitlens.views.commitFormat": {
						"deprecationMessage": "已弃用。请改用 `gitlens.views.formats.commits.label`",
						"markdownDeprecationMessage": "已弃用。请改用 `#gitlens.views.commits.files.label#`"
					},
					"gitlens.views.commitDescriptionFormat": {
						"deprecationMessage": "已弃用。请改用 `gitlens.views.formats.commits.description`",
						"markdownDeprecationMessage": "已弃用。请改用 `#gitlens.views.formats.commits.description#`"
					},
					"gitlens.views.stashFileFormat": {
						"deprecationMessage": "已弃用。请改用 `gitlens.views.formats.files.label`",
						"markdownDeprecationMessage": "已弃用。请改用 `#gitlens.views.formats.files.label#`"
					},
					"gitlens.views.stashFileDescriptionFormat": {
						"deprecationMessage": "已弃用。请改用 `gitlens.views.formats.files.description`",
						"markdownDeprecationMessage": "已弃用。请改用 `#gitlens.views.formats.files.description#`"
					},
					"gitlens.views.stashFormat": {
						"deprecationMessage": "已弃用。请改用 `gitlens.views.formats.stashes.label`",
						"markdownDeprecationMessage": "已弃用。请改用 `#gitlens.views.stashes.files.label#`"
					},
					"gitlens.views.stashDescriptionFormat": {
						"deprecationMessage": "已弃用。请改用 `gitlens.views.formats.stashes.description`",
						"markdownDeprecationMessage": "已弃用。请改用 `#gitlens.views.formats.stashes.description#`"
					},
					"gitlens.views.statusFileFormat": {
						"deprecationMessage": "已弃用。请改用 `gitlens.views.formats.files.label`",
						"markdownDeprecationMessage": "已弃用。请改用 `#gitlens.views.formats.files.label#`"
					},
					"gitlens.views.statusFileDescriptionFormat": {
						"deprecationMessage": "已弃用。请改用 `gitlens.views.formats.files.description`",
						"markdownDeprecationMessage": "已弃用。请改用 `#gitlens.views.formats.files.description#`"
					}
				}
			},
			{
				"id": "launchpad-view",
				"title": "启动板视图 (ᴘʀᴏ)",
				"order": 101,
				"properties": {
					"gitlens.views.launchpad.files.layout": {
						"type": "string",
						"default": "auto",
						"enum": [
							"auto",
							"list",
							"tree"
						],
						"enumDescriptions": [
							"根据 `#gitlens.views.launchpad.files.threshold#` 值和每个嵌套级别的文件数量，自动在 `树` 和 `列表` 显示之间切换",
							"以列表显示文件",
							"以树显示文件"
						],
						"markdownDescription": "指定 _启动板_ 视图将如何显示文件",
						"scope": "window",
						"order": 30
					},
					"gitlens.views.launchpad.files.threshold": {
						"type": "number",
						"default": 5,
						"markdownDescription": "指定在 _启动板_ 视图中，根据嵌套级别中的文件数量，在 `树` 和 `列表` 显示之间切换的阈值。仅当 `#gitlens.views.launchpad.files.layout#` 设置为 `auto` 时适用",
						"scope": "window",
						"order": 31
					},
					"gitlens.views.launchpad.files.compact": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _启动板_ 视图中压缩（展平）不必要的文件嵌套。仅当 `#gitlens.views.launchpad.files.layout#` 设置为 `tree` 或 `auto` 时适用",
						"scope": "window",
						"order": 32
					},
					"gitlens.views.launchpad.files.icon": {
						"type": "string",
						"default": "type",
						"enum": [
							"status",
							"type"
						],
						"enumDescriptions": [
							"显示文件的状态作为图标",
							"显示文件的类型（主题图标）作为图标"
						],
						"markdownDescription": "指定 _启动板_ 视图将如何显示文件图标",
						"scope": "window",
						"order": 33
					},
					"gitlens.views.launchpad.avatars": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _启动板_ 视图中显示头像图片而不是提交（或状态）图标",
						"scope": "window",
						"order": 40
					}
				}
			},
			{
				"id": "commits-view",
				"title": "提交视图",
				"order": 110,
				"properties": {
					"gitlens.views.commits.showStashes": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否在 _提交_ 视图中显示存储",
						"scope": "window",
						"order": 9
					},
					"gitlens.views.commits.showBranchComparison": {
						"type": [
							"boolean",
							"string"
						],
						"enum": [
							false,
							"branch",
							"working"
						],
						"enumDescriptions": [
							"隐藏分支比较",
							"将当前分支与用户选择的参考进行比较",
							"将工作区与用户选择的参考进行比较"
						],
						"default": "working",
						"markdownDescription": "指定是否在 _提交_ 视图中显示当前分支或工作区与用户选择的参考（分支、标签等）的比较",
						"scope": "window",
						"order": 10
					},
					"gitlens.views.commits.pullRequests.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否查询与 _提交_ 视图中的当前分支和提交关联的拉取请求。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 21
					},
					"gitlens.views.commits.pullRequests.showForBranches": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _提交_ 视图中显示与当前分支关联的拉取请求（如果有）。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 22
					},
					"gitlens.views.commits.pullRequests.showForCommits": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _提交_ 视图中显示与提交关联的拉取请求（如果有）。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 23
					},
					"gitlens.views.commits.files.layout": {
						"type": "string",
						"default": "auto",
						"enum": [
							"auto",
							"list",
							"tree"
						],
						"enumDescriptions": [
							"根据 `#gitlens.views.commits.files.threshold#` 值和每个嵌套级别的文件数量，自动在 `树` 和 `列表` 显示之间切换",
							"以列表显示文件",
							"以树显示文件"
						],
						"markdownDescription": "指定 _提交_ 视图将如何显示文件",
						"scope": "window",
						"order": 30
					},
					"gitlens.views.commits.files.threshold": {
						"type": "number",
						"default": 5,
						"markdownDescription": "指定在 _提交_ 视图中，根据嵌套级别中的文件数量，在 `树` 和 `列表` 显示之间切换的阈值。仅当 `#gitlens.views.commits.files.layout#` 设置为 `auto` 时适用",
						"scope": "window",
						"order": 31
					},
					"gitlens.views.commits.files.compact": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _提交_ 视图中压缩（展平）不必要的文件嵌套。仅当 `#gitlens.views.commits.files.layout#` 设置为 `tree` 或 `auto` 时适用",
						"scope": "window",
						"order": 32
					},
					"gitlens.views.commits.files.icon": {
						"type": "string",
						"default": "type",
						"enum": [
							"status",
							"type"
						],
						"enumDescriptions": [
							"显示文件的状态作为图标",
							"显示文件的类型（主题图标）作为图标"
						],
						"markdownDescription": "指定 _提交_ 视图将如何显示文件图标",
						"scope": "window",
						"order": 33
					},
					"gitlens.views.commits.avatars": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _提交_ 视图中显示头像图片而不是提交（或状态）图标",
						"scope": "window",
						"order": 40
					},
					"gitlens.views.commits.reveal": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _提交_ 视图中显示提交，否则它们会在 _存储库_ 视图中显示",
						"scope": "window",
						"order": 50
					}
				}
			},
			{
				"id": "commit-details-view",
				"title": "检查视图",
				"order": 120,
				"properties": {
					"gitlens.views.commitDetails.autolinks.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在提交消息中自动链接外部资源",
						"scope": "window",
						"order": 31
					},
					"gitlens.views.commitDetails.autolinks.enhanced": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否查找提交消息中自动链接外部资源的附加详细信息。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 32
					},
					"gitlens.views.commitDetails.pullRequests.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否查询关联的拉取请求。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 21
					},
					"gitlens.views.commitDetails.files.layout": {
						"type": "string",
						"default": "auto",
						"enum": [
							"auto",
							"list",
							"tree"
						],
						"enumDescriptions": [
							"根据 `#gitlens.views.commitDetails.files.threshold#` 值和每个嵌套级别的文件数量，自动在 `树` 和 `列表` 显示之间切换",
							"以列表显示文件",
							"以树显示文件"
						],
						"markdownDescription": "指定 _提交详细信息_ 视图将如何显示文件",
						"scope": "window",
						"order": 30
					},
					"gitlens.views.commitDetails.files.threshold": {
						"type": "number",
						"default": 5,
						"markdownDescription": "指定在 _提交详细信息_ 视图中，根据嵌套级别中的文件数量，在 `树` 和 `列表` 显示之间切换的阈值。仅当 `#gitlens.views.commitDetails.files.layout#` 设置为 `auto` 时适用",
						"scope": "window",
						"order": 31
					},
					"gitlens.views.commitDetails.files.compact": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _提交详细信息_ 视图中压缩（展平）不必要的文件嵌套。仅当 `#gitlens.views.commitDetails.files.layout#` 设置为 `tree` 或 `auto` 时适用",
						"scope": "window",
						"order": 32
					},
					"gitlens.views.commitDetails.files.icon": {
						"type": "string",
						"default": "type",
						"enum": [
							"status",
							"type"
						],
						"enumDescriptions": [
							"显示文件的状态作为图标",
							"显示文件的类型（主题图标）作为图标"
						],
						"markdownDescription": "指定 _提交详细信息_ 视图将如何显示文件图标",
						"scope": "window",
						"order": 33
					},
					"gitlens.views.commitDetails.avatars": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _提交详细信息_ 视图中显示头像图片而不是提交（或状态）图标",
						"scope": "window",
						"order": 40
					}
				}
			},
			{
				"id": "pull-request-view",
				"title": "拉取请求视图",
				"order": 130,
				"properties": {
					"gitlens.views.pullRequest.files.layout": {
						"type": "string",
						"default": "auto",
						"enum": [
							"auto",
							"list",
							"tree"
						],
						"enumDescriptions": [
							"根据 `#gitlens.views.pullRequest.files.threshold#` 值和每个嵌套级别的文件数量，自动在 `树` 和 `列表` 显示之间切换",
							"以列表显示文件",
							"以树显示文件"
						],
						"markdownDescription": "指定 _拉取请求_ 视图将如何显示文件",
						"scope": "window",
						"order": 30
					},
					"gitlens.views.pullRequest.files.threshold": {
						"type": "number",
						"default": 5,
						"markdownDescription": "指定在 _拉取请求_ 视图中，根据嵌套级别中的文件数量，在 `树` 和 `列表` 显示之间切换的阈值。仅当 `#gitlens.views.pullRequest.files.layout#` 设置为 `auto` 时适用",
						"scope": "window",
						"order": 31
					},
					"gitlens.views.pullRequest.files.compact": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _拉取请求_ 视图中压缩（展平）不必要的文件嵌套。仅当 `#gitlens.views.pullRequest.files.layout#` 设置为 `tree` 或 `auto` 时适用",
						"scope": "window",
						"order": 32
					},
					"gitlens.views.pullRequest.files.icon": {
						"type": "string",
						"default": "type",
						"enum": [
							"status",
							"type"
						],
						"enumDescriptions": [
							"显示文件的状态作为图标",
							"显示文件的类型（主题图标）作为图标"
						],
						"markdownDescription": "指定 _拉取请求_ 视图将如何显示文件图标",
						"scope": "window",
						"order": 33
					},
					"gitlens.views.pullRequest.avatars": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _拉取请求_ 视图中显示头像图片而不是提交（或状态）图标",
						"scope": "window",
						"order": 40
					}
				}
			},
			{
				"id": "repositories-view",
				"title": "存储库视图",
				"order": 140,
				"properties": {
					"gitlens.views.repositories.showBranchComparison": {
						"type": [
							"boolean",
							"string"
						],
						"enum": [
							false,
							"branch",
							"working"
						],
						"enumDescriptions": [
							"隐藏分支比较",
							"将当前分支与用户选择的参考进行比较",
							"将工作区与用户选择的参考进行比较"
						],
						"default": "working",
						"markdownDescription": "指定是否在 _存储库_ 视图中显示当前分支或工作区与用户选择的参考（分支、标签等）的比较",
						"scope": "window",
						"order": 10
					},
					"gitlens.views.repositories.showUpstreamStatus": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _存储库_ 视图中显示每个存储库的当前分支的上游状态",
						"scope": "window",
						"order": 11
					},
					"gitlens.views.repositories.includeWorkingTree": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否在 _存储库_ 视图中包含每个存储库的工作区文件状态",
						"scope": "window",
						"order": 12
					},
					"gitlens.views.repositories.pullRequests.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否查询与 _存储库_ 视图中的分支和提交关联的拉取请求。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 20
					},
					"gitlens.views.repositories.pullRequests.showForBranches": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _存储库_ 视图中显示与分支关联的拉取请求（如果有）。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 21
					},
					"gitlens.views.repositories.pullRequests.showForCommits": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _存储库_ 视图中显示与提交关联的拉取请求（如果有）。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 22
					},
					"gitlens.views.repositories.showCommits": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _存储库_ 视图中显示每个存储库的当前分支上的提交",
						"scope": "window",
						"order": 30
					},
					"gitlens.views.repositories.showBranches": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _存储库_ 视图中显示每个存储库的分支",
						"scope": "window",
						"order": 31
					},
					"gitlens.views.repositories.showRemotes": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _存储库_ 视图中显示每个存储库的远程",
						"scope": "window",
						"order": 32
					},
					"gitlens.views.repositories.showStashes": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否在 _存储库_ 视图中显示每个存储库的存储",
						"scope": "window",
						"order": 33
					},
					"gitlens.views.repositories.showTags": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _存储库_ 视图中显示每个存储库的标签",
						"scope": "window",
						"order": 34
					},
					"gitlens.views.repositories.showContributors": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _存储库_ 视图中显示每个存储库的贡献者",
						"scope": "window",
						"order": 35
					},
					"gitlens.views.repositories.showWorktrees": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _存储库_ 视图中显示每个存储库的工作树",
						"scope": "window",
						"order": 36
					},
					"gitlens.views.repositories.showIncomingActivity": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否在 _存储库_ 视图中显示每个存储库的实验性传入活动",
						"scope": "window",
						"order": 37
					},
					"gitlens.views.repositories.autoRefresh": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在存储库或文件系统更改时自动刷新 _存储库_ 视图",
						"scope": "window",
						"order": 40
					},
					"gitlens.views.repositories.autoReveal": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在打开文件时自动在 _存储库_ 视图中显示存储库",
						"scope": "window",
						"order": 50
					},
					"gitlens.views.repositories.avatars": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _存储库_ 视图中显示头像图片而不是提交（或状态）图标",
						"scope": "window",
						"order": 60
					},
					"gitlens.views.repositories.branches.layout": {
						"type": "string",
						"default": "tree",
						"enum": [
							"list",
							"tree"
						],
						"enumDescriptions": [
							"以列表显示分支",
							"当分支名称包含斜杠 `/` 时，以树显示分支"
						],
						"markdownDescription": "指定 _存储库_ 视图将如何显示分支",
						"scope": "window",
						"order": 70
					},
					"gitlens.views.repositories.files.layout": {
						"type": "string",
						"default": "auto",
						"enum": [
							"auto",
							"list",
							"tree"
						],
						"enumDescriptions": [
							"根据 `#gitlens.views.repositories.files.threshold#` 值和每个嵌套级别的文件数量，自动在 `树` 和 `列表` 显示之间切换",
							"以列表显示文件",
							"以树显示文件"
						],
						"markdownDescription": "指定 _存储库_ 视图将如何显示文件",
						"scope": "window",
						"order": 80
					},
					"gitlens.views.repositories.files.threshold": {
						"type": "number",
						"default": 5,
						"markdownDescription": "指定在 _存储库_ 视图中，根据嵌套级别中的文件数量，在 `树` 和 `列表` 显示之间切换的阈值。仅当 `#gitlens.views.repositories.files.layout#` 设置为 `auto` 时适用",
						"scope": "window",
						"order": 81
					},
					"gitlens.views.repositories.files.compact": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _存储库_ 视图中压缩（展平）不必要的文件嵌套。仅当 `#gitlens.views.repositories.files.layout#` 设置为 `tree` 或 `auto` 时适用",
						"scope": "window",
						"order": 82
					},
					"gitlens.views.repositories.files.icon": {
						"type": "string",
						"default": "type",
						"enum": [
							"status",
							"type"
						],
						"enumDescriptions": [
							"显示文件的状态作为图标",
							"显示文件的类型（主题图标）作为图标"
						],
						"markdownDescription": "指定 _存储库_ 视图将如何显示文件图标",
						"scope": "window",
						"order": 83
					},
					"gitlens.views.repositories.compact": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否以紧凑显示密度显示 _存储库_ 视图",
						"scope": "window",
						"order": 90
					},
					"gitlens.views.repositories.branches.showStashes": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否在 _存储库_ 视图的 _提交_ 和 _分支_ 部分中显示存储",
						"scope": "window",
						"order": 95
					},
					"gitlens.views.repositories.branches.showBranchComparison": {
						"type": [
							"boolean",
							"string"
						],
						"enum": [
							false,
							"branch"
						],
						"enumDescriptions": [
							"隐藏分支比较",
							"将分支与用户选择的参考进行比较"
						],
						"default": "branch",
						"markdownDescription": "指定是否在 _存储库_ 视图的每个分支下显示分支与用户选择的参考（分支、标签等）的比较",
						"scope": "window",
						"order": 100
					},
					"gitlens.views.repositories.worktrees.viewAs": {
						"type": "string",
						"default": "name",
						"enum": [
							"name",
							"path",
							"relativePath"
						],
						"enumDescriptions": [
							"显示工作树名称",
							"显示工作树路径",
							"显示工作树相对路径"
						],
						"markdownDescription": "指定 _存储库_ 视图将如何显示工作树",
						"scope": "window",
						"order": 75
					},
					"gitlens.views.repositories.enabled": {
						"deprecationMessage": "已弃用。此设置不再使用",
						"markdownDeprecationMessage": "已弃用。此设置不再使用"
					}
				}
			},
			{
				"id": "file-history-view",
				"title": "文件历史视图",
				"order": 150,
				"properties": {
					"gitlens.views.fileHistory.pullRequests.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否查询与 _文件历史_ 视图中的提交关联的拉取请求。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 21
					},
					"gitlens.views.fileHistory.pullRequests.showForCommits": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _文件历史_ 视图中显示与提交关联的拉取请求（如果有）。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 22
					},
					"gitlens.views.fileHistory.files.layout": {
						"type": "string",
						"default": "auto",
						"enum": [
							"auto",
							"list",
							"tree"
						],
						"enumDescriptions": [
							"根据 `#gitlens.views.fileHistory.files.threshold#` 值和每个嵌套级别的文件数量，自动在 `树` 和 `列表` 显示之间切换",
							"以列表显示文件",
							"以树显示文件"
						],
						"markdownDescription": "指定 _文件历史_ 视图将如何显示文件",
						"scope": "window",
						"order": 30
					},
					"gitlens.views.fileHistory.files.threshold": {
						"type": "number",
						"default": 5,
						"markdownDescription": "指定在 _文件历史_ 视图中，根据嵌套级别中的文件数量，在 `树` 和 `列表` 显示之间切换的阈值。仅当 `#gitlens.views.fileHistory.files.layout#` 设置为 `auto` 时适用",
						"scope": "window",
						"order": 31
					},
					"gitlens.views.fileHistory.files.compact": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _文件历史_ 视图中压缩（展平）不必要的文件嵌套。仅当 `#gitlens.views.fileHistory.files.layout#` 设置为 `tree` 或 `auto` 时适用",
						"scope": "window",
						"order": 32
					},
					"gitlens.views.fileHistory.files.icon": {
						"type": "string",
						"default": "type",
						"enum": [
							"status",
							"type"
						],
						"enumDescriptions": [
							"显示文件的状态作为图标",
							"显示文件的类型（主题图标）作为图标"
						],
						"markdownDescription": "指定 _文件历史_ 视图将如何显示文件图标",
						"scope": "window",
						"order": 33
					},
					"gitlens.views.fileHistory.avatars": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _文件历史_ 视图中显示头像图片而不是状态图标",
						"scope": "window",
						"order": 20
					},
					"gitlens.advanced.fileHistoryFollowsRenames": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定文件历史是否会跟随重命名",
						"scope": "window",
						"order": 100
					},
					"gitlens.advanced.fileHistoryShowAllBranches": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定文件历史是否会显示所有分支的提交",
						"scope": "window",
						"order": 101
					},
					"gitlens.advanced.fileHistoryShowMergeCommits": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定文件历史是否会显示合并提交",
						"scope": "window",
						"order": 102
					}
				}
			},
			{
				"id": "visual-history",
				"title": "可视化文件历史 (ᴘʀᴏ)",
				"order": 155,
				"properties": {
					"gitlens.visualHistory.allowMultiple": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否允许在编辑器区域打开多个 _可视化文件历史_ 实例",
						"scope": "window",
						"order": 10
					},
					"gitlens.visualHistory.queryLimit": {
						"type": "number",
						"default": 20,
						"markdownDescription": "指定 _可视化文件历史_ 中查询统计信息的提交数量限制，因为存在速率限制。仅适用于虚拟工作区。",
						"scope": "window",
						"order": 20
					}
				}
			},
			{
				"id": "line-history-view",
				"title": "行历史视图",
				"order": 160,
				"properties": {
					"gitlens.views.lineHistory.avatars": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _行历史_ 视图中显示头像图片而不是状态图标",
						"scope": "window",
						"order": 10
					},
					"gitlens.views.lineHistory.enabled": {
						"deprecationMessage": "已弃用。此设置不再使用",
						"markdownDeprecationMessage": "已弃用。此设置不再使用"
					}
				}
			},
			{
				"id": "branches-view",
				"title": "分支视图",
				"order": 170,
				"properties": {
					"gitlens.views.branches.showRemoteBranches": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否在 _分支_ 视图中显示默认远程的远程分支",
						"scope": "window",
						"order": 8
					},
					"gitlens.views.branches.showStashes": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否在 _分支_ 视图中显示存储",
						"scope": "window",
						"order": 9
					},
					"gitlens.views.branches.showBranchComparison": {
						"type": [
							"boolean",
							"string"
						],
						"enum": [
							false,
							"branch"
						],
						"enumDescriptions": [
							"隐藏分支比较",
							"将分支与用户选择的参考进行比较"
						],
						"default": "branch",
						"markdownDescription": "指定是否在 _分支_ 视图中显示分支与用户选择的参考（分支、标签等）的比较",
						"scope": "window",
						"order": 10
					},
					"gitlens.views.branches.pullRequests.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否查询与 _分支_ 视图中的每个分支和提交关联的拉取请求。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 20
					},
					"gitlens.views.branches.pullRequests.showForBranches": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _分支_ 视图中显示与每个分支关联的拉取请求（如果有）。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 21
					},
					"gitlens.views.branches.pullRequests.showForCommits": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _分支_ 视图中显示与提交关联的拉取请求（如果有）。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 22
					},
					"gitlens.views.branches.branches.layout": {
						"type": "string",
						"default": "tree",
						"enum": [
							"list",
							"tree"
						],
						"enumDescriptions": [
							"以列表显示分支",
							"当分支名称包含斜杠 `/` 时，以树显示分支"
						],
						"markdownDescription": "指定 _分支_ 视图将如何显示分支",
						"scope": "window",
						"order": 30
					},
					"gitlens.views.branches.files.layout": {
						"type": "string",
						"default": "auto",
						"enum": [
							"auto",
							"list",
							"tree"
						],
						"enumDescriptions": [
							"根据 `#gitlens.views.branches.files.threshold#` 值和每个嵌套级别的文件数量，自动在 `树` 和 `列表` 显示之间切换",
							"以列表显示文件",
							"以树显示文件"
						],
						"markdownDescription": "指定 _分支_ 视图将如何显示文件",
						"scope": "window",
						"order": 50
					},
					"gitlens.views.branches.files.threshold": {
						"type": "number",
						"default": 5,
						"markdownDescription": "指定在 _分支_ 视图中，根据嵌套级别中的文件数量，在 `树` 和 `列表` 显示之间切换的阈值。仅当 `#gitlens.views.branches.files.layout#` 设置为 `auto` 时适用",
						"scope": "window",
						"order": 51
					},
					"gitlens.views.branches.files.compact": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _分支_ 视图中压缩（展平）不必要的文件嵌套。仅当 `#gitlens.views.branches.files.layout#` 设置为 `tree` 或 `auto` 时适用",
						"scope": "window",
						"order": 52
					},
					"gitlens.views.branches.files.icon": {
						"type": "string",
						"default": "type",
						"enum": [
							"status",
							"type"
						],
						"enumDescriptions": [
							"显示文件的状态作为图标",
							"显示文件的类型（主题图标）作为图标"
						],
						"markdownDescription": "指定 _分支_ 视图将如何显示文件图标",
						"scope": "window",
						"order": 53
					},
					"gitlens.views.branches.avatars": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _分支_ 视图中显示头像图片而不是提交（或状态）图标",
						"scope": "window",
						"order": 60
					},
					"gitlens.views.branches.reveal": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _分支_ 视图中显示分支，否则它们会在 _存储库_ 视图中显示",
						"scope": "window",
						"order": 70
					}
				}
			},
			{
				"id": "remotes-view",
				"title": "远程视图",
				"order": 180,
				"properties": {
					"gitlens.views.remotes.pullRequests.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否查询与 _远程_ 视图中的每个分支和提交关联的拉取请求。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 10
					},
					"gitlens.views.remotes.pullRequests.showForBranches": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _远程_ 视图中显示与每个分支关联的拉取请求（如果有）。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 11
					},
					"gitlens.views.remotes.pullRequests.showForCommits": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _远程_ 视图中显示与提交关联的拉取请求（如果有）。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 12
					},
					"gitlens.views.remotes.branches.layout": {
						"type": "string",
						"default": "tree",
						"enum": [
							"list",
							"tree"
						],
						"enumDescriptions": [
							"以列表显示分支",
							"当分支名称包含斜杠 `/` 时，以树显示分支"
						],
						"markdownDescription": "指定 _远程_ 视图将如何显示分支",
						"scope": "window",
						"order": 20
					},
					"gitlens.views.remotes.files.layout": {
						"type": "string",
						"default": "auto",
						"enum": [
							"auto",
							"list",
							"tree"
						],
						"enumDescriptions": [
							"根据 `#gitlens.views.remotes.files.threshold#` 值和每个嵌套级别的文件数量，自动在 `树` 和 `列表` 显示之间切换",
							"以列表显示文件",
							"以树显示文件"
						],
						"markdownDescription": "指定 _远程_ 视图将如何显示文件",
						"scope": "window",
						"order": 30
					},
					"gitlens.views.remotes.files.threshold": {
						"type": "number",
						"default": 5,
						"markdownDescription": "指定在 _远程_ 视图中，根据嵌套级别中的文件数量，在 `树` 和 `列表` 显示之间切换的阈值。仅当 `#gitlens.views.remotes.files.layout#` 设置为 `auto` 时适用",
						"scope": "window",
						"order": 31
					},
					"gitlens.views.remotes.files.compact": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _远程_ 视图中压缩（展平）不必要的文件嵌套。仅当 `#gitlens.views.remotes.files.layout#` 设置为 `tree` 或 `auto` 时适用",
						"scope": "window",
						"order": 32
					},
					"gitlens.views.remotes.files.icon": {
						"type": "string",
						"default": "type",
						"enum": [
							"status",
							"type"
						],
						"enumDescriptions": [
							"显示文件的状态作为图标",
							"显示文件的类型（主题图标）作为图标"
						],
						"markdownDescription": "指定 _远程_ 视图将如何显示文件图标",
						"scope": "window",
						"order": 33
					},
					"gitlens.views.remotes.avatars": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _远程_ 视图中显示头像图片而不是提交（或状态）图标",
						"scope": "window",
						"order": 40
					},
					"gitlens.views.remotes.reveal": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _远程_ 视图中显示远程，否则它们会在 _存储库_ 视图中显示",
						"scope": "window",
						"order": 50
					}
				}
			},
			{
				"id": "stashes-view",
				"title": "存储视图",
				"order": 190,
				"properties": {
					"gitlens.views.stashes.files.layout": {
						"type": "string",
						"default": "auto",
						"enum": [
							"auto",
							"list",
							"tree"
						],
						"enumDescriptions": [
							"根据 `#gitlens.views.stashes.files.threshold#` 值和每个嵌套级别的文件数量，自动在 `树` 和 `列表` 显示之间切换",
							"以列表显示文件",
							"以树显示文件"
						],
						"markdownDescription": "指定 _存储_ 视图将如何显示文件",
						"scope": "window",
						"order": 10
					},
					"gitlens.views.stashes.files.threshold": {
						"type": "number",
						"default": 5,
						"markdownDescription": "指定在 _存储_ 视图中，根据嵌套级别中的文件数量，在 `树` 和 `列表` 显示之间切换的阈值。仅当 `#gitlens.views.stashes.files.layout#` 设置为 `auto` 时适用",
						"scope": "window",
						"order": 11
					},
					"gitlens.views.stashes.files.compact": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _存储_ 视图中压缩（展平）不必要的文件嵌套。仅当 `#gitlens.views.stashes.files.layout#` 设置为 `tree` 或 `auto` 时适用",
						"scope": "window",
						"order": 12
					},
					"gitlens.views.stashes.files.icon": {
						"type": "string",
						"default": "type",
						"enum": [
							"status",
							"type"
						],
						"enumDescriptions": [
							"显示文件的状态作为图标",
							"显示文件的类型（主题图标）作为图标"
						],
						"markdownDescription": "指定 _存储_ 视图将如何显示文件图标",
						"scope": "window",
						"order": 13
					},
					"gitlens.views.stashes.reveal": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _存储_ 视图中显示存储，否则它们会在 _存储库_ 视图中显示",
						"scope": "window",
						"order": 20
					}
				}
			},
			{
				"id": "tags-view",
				"title": "标签视图",
				"order": 200,
				"properties": {
					"gitlens.views.tags.branches.layout": {
						"type": "string",
						"default": "tree",
						"enum": [
							"list",
							"tree"
						],
						"enumDescriptions": [
							"以列表显示标签",
							"当标签名称包含斜杠 `/` 时，以树显示标签"
						],
						"markdownDescription": "指定 _标签_ 视图将如何显示标签",
						"scope": "window",
						"order": 10
					},
					"gitlens.views.tags.files.layout": {
						"type": "string",
						"default": "auto",
						"enum": [
							"auto",
							"list",
							"tree"
						],
						"enumDescriptions": [
							"根据 `#gitlens.views.tags.files.threshold#` 值和每个嵌套级别的文件数量，自动在 `树` 和 `列表` 显示之间切换",
							"以列表显示文件",
							"以树显示文件"
						],
						"markdownDescription": "指定 _标签_ 视图将如何显示文件",
						"scope": "window",
						"order": 30
					},
					"gitlens.views.tags.files.threshold": {
						"type": "number",
						"default": 5,
						"markdownDescription": "指定在 _标签_ 视图中，根据嵌套级别中的文件数量，在 `树` 和 `列表` 显示之间切换的阈值。仅当 `#gitlens.views.tags.files.layout#` 设置为 `auto` 时适用",
						"scope": "window",
						"order": 31
					},
					"gitlens.views.tags.files.compact": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _标签_ 视图中压缩（展平）不必要的文件嵌套。仅当 `#gitlens.views.tags.files.layout#` 设置为 `tree` 或 `auto` 时适用",
						"scope": "window",
						"order": 32
					},
					"gitlens.views.tags.files.icon": {
						"type": "string",
						"default": "type",
						"enum": [
							"status",
							"type"
						],
						"enumDescriptions": [
							"显示文件的状态作为图标",
							"显示文件的类型（主题图标）作为图标"
						],
						"markdownDescription": "指定 _标签_ 视图将如何显示文件图标",
						"scope": "window",
						"order": 33
					},
					"gitlens.views.tags.avatars": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _标签_ 视图中显示头像图片而不是提交（或状态）图标",
						"scope": "window",
						"order": 40
					},
					"gitlens.views.tags.reveal": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _标签_ 视图中显示标签，否则它们会在 _存储库_ 视图中显示",
						"scope": "window",
						"order": 50
					}
				}
			},
			{
				"id": "worktrees-view",
				"title": "工作树视图 (ᴘʀᴏ)",
				"order": 210,
				"properties": {
					"gitlens.worktrees.promptForLocation": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定在创建新工作树时是否提示输入路径",
						"scope": "resource",
						"order": 10
					},
					"gitlens.worktrees.defaultLocation": {
						"type": "string",
						"default": null,
						"markdownDescription": "指定新工作树将创建的默认路径",
						"scope": "resource",
						"order": 11
					},
					"gitlens.worktrees.openAfterCreate": {
						"type": "string",
						"default": "prompt",
						"enum": [
							"always",
							"alwaysNewWindow",
							"onlyWhenEmpty",
							"never",
							"prompt"
						],
						"enumDescriptions": [
							"始终在当前窗口中打开新工作树",
							"始终在新窗口中打开新工作树",
							"仅在没有打开文件夹时在当前窗口中打开新工作树",
							"从不打开新工作树",
							"始终提示打开新工作树"
						],
						"markdownDescription": "指定在创建工作树后如何以及何时打开工作树",
						"scope": "resource",
						"order": 12
					},
					"gitlens.views.worktrees.showStashes": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否在 _工作树_ 视图中显示存储",
						"scope": "window",
						"order": 19
					},
					"gitlens.views.worktrees.showBranchComparison": {
						"type": [
							"boolean",
							"string"
						],
						"enum": [
							false,
							"branch"
						],
						"enumDescriptions": [
							"隐藏分支比较",
							"将工作树分支与用户选择的参考进行比较"
						],
						"default": "working",
						"markdownDescription": "指定是否在 _工作树_ 视图中显示工作树分支与用户选择的参考（分支、标签等）的比较",
						"scope": "window",
						"order": 20
					},
					"gitlens.views.worktrees.pullRequests.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否查询与 _工作树_ 视图中的工作树分支和提交关联的拉取请求。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 30
					},
					"gitlens.views.worktrees.pullRequests.showForBranches": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _工作树_ 视图中显示与工作树分支关联的拉取请求（如果有）。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 31
					},
					"gitlens.views.worktrees.pullRequests.showForCommits": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _工作树_ 视图中显示与提交关联的拉取请求（如果有）。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 32
					},
					"gitlens.views.worktrees.worktrees.viewAs": {
						"type": "string",
						"default": "name",
						"enum": [
							"name",
							"path",
							"relativePath"
						],
						"enumDescriptions": [
							"显示工作树名称",
							"显示工作树路径",
							"显示工作树相对路径"
						],
						"markdownDescription": "指定 _工作树_ 视图将如何显示工作树",
						"scope": "window",
						"order": 33
					},
					"gitlens.views.worktrees.branches.layout": {
						"type": "string",
						"default": "tree",
						"enum": [
							"list",
							"tree"
						],
						"enumDescriptions": [
							"以列表显示工作树分支",
							"当分支名称包含斜杠 `/` 时，以树显示工作树分支"
						],
						"markdownDescription": "指定 _工作树_ 视图将如何显示工作树分支",
						"scope": "window",
						"order": 35
					},
					"gitlens.views.worktrees.files.layout": {
						"type": "string",
						"default": "auto",
						"enum": [
							"auto",
							"list",
							"tree"
						],
						"enumDescriptions": [
							"根据 `#gitlens.views.worktrees.files.threshold#` 值和每个嵌套级别的文件数量，自动在 `树` 和 `列表` 显示之间切换",
							"以列表显示文件",
							"以树显示文件"
						],
						"markdownDescription": "指定 _工作树_ 视图将如何显示文件",
						"scope": "window",
						"order": 40
					},
					"gitlens.views.worktrees.files.threshold": {
						"type": "number",
						"default": 5,
						"markdownDescription": "指定在 _工作树_ 视图中，根据嵌套级别中的文件数量，在 `树` 和 `列表` 显示之间切换的阈值。仅当 `#gitlens.views.worktrees.files.layout#` 设置为 `auto` 时适用",
						"scope": "window",
						"order": 41
					},
					"gitlens.views.worktrees.files.compact": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _工作树_ 视图中压缩（展平）不必要的文件嵌套。仅当 `#gitlens.views.worktrees.files.layout#` 设置为 `tree` 或 `auto` 时适用",
						"scope": "window",
						"order": 42
					},
					"gitlens.views.worktrees.files.icon": {
						"type": "string",
						"default": "type",
						"enum": [
							"status",
							"type"
						],
						"enumDescriptions": [
							"显示文件的状态作为图标",
							"显示文件的类型（主题图标）作为图标"
						],
						"markdownDescription": "指定 _工作树_ 视图将如何显示文件图标",
						"scope": "window",
						"order": 43
					},
					"gitlens.views.worktrees.avatars": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _工作树_ 视图中显示头像图片而不是提交（或状态）图标",
						"scope": "window",
						"order": 50
					},
					"gitlens.views.worktrees.reveal": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _工作树_ 视图中显示工作树，否则它们会在 _存储库_ 视图中显示",
						"scope": "window",
						"order": 60
					}
				}
			},
			{
				"id": "contributors-view",
				"title": "贡献者视图",
				"order": 220,
				"properties": {
					"gitlens.views.contributors.showAllBranches": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否在 _贡献者_ 视图中显示所有分支的提交",
						"scope": "window",
						"order": 10
					},
					"gitlens.views.contributors.showStatistics": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否在 _贡献者_ 视图中显示贡献者统计信息。这可能需要一些时间来计算，具体取决于存储库的大小",
						"scope": "window",
						"order": 20
					},
					"gitlens.views.contributors.pullRequests.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否查询与 _贡献者_ 视图中的分支和提交关联的拉取请求。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 30
					},
					"gitlens.views.contributors.pullRequests.showForCommits": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _贡献者_ 视图中显示与提交关联的拉取请求（如果有）。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 31
					},
					"gitlens.views.contributors.files.layout": {
						"type": "string",
						"default": "auto",
						"enum": [
							"auto",
							"list",
							"tree"
						],
						"enumDescriptions": [
							"根据 `#gitlens.views.contributors.files.threshold#` 值和每个嵌套级别的文件数量，自动在 `树` 和 `列表` 显示之间切换",
							"以列表显示文件",
							"以树显示文件"
						],
						"markdownDescription": "指定 _贡献者_ 视图将如何显示文件",
						"scope": "window",
						"order": 50
					},
					"gitlens.views.contributors.files.threshold": {
						"type": "number",
						"default": 5,
						"markdownDescription": "指定在 _贡献者_ 视图中，根据嵌套级别中的文件数量，在 `树` 和 `列表` 显示之间切换的阈值。仅当 `#gitlens.views.contributors.files.layout#` 设置为 `auto` 时适用",
						"scope": "window",
						"order": 51
					},
					"gitlens.views.contributors.files.compact": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _贡献者_ 视图中压缩（展平）不必要的文件嵌套。仅当 `#gitlens.views.contributors.files.layout#` 设置为 `tree` 或 `auto` 时适用",
						"scope": "window",
						"order": 52
					},
					"gitlens.views.contributors.files.icon": {
						"type": "string",
						"default": "type",
						"enum": [
							"status",
							"type"
						],
						"enumDescriptions": [
							"显示文件的状态作为图标",
							"显示文件的类型（主题图标）作为图标"
						],
						"markdownDescription": "指定 _贡献者_ 视图将如何显示文件图标",
						"scope": "window",
						"order": 53
					},
					"gitlens.views.contributors.avatars": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _贡献者_ 视图中显示头像图片而不是提交（或状态）图标",
						"scope": "window",
						"order": 60
					},
					"gitlens.views.contributors.reveal": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _贡献者_ 视图中显示贡献者，否则它们会在 _存储库_ 视图中显示",
						"scope": "window",
						"order": 20
					}
				}
			},
			{
				"id": "search-compare-view",
				"title": "搜索与比较视图",
				"order": 230,
				"properties": {
					"gitlens.views.searchAndCompare.pullRequests.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否查询与 _搜索与比较_ 视图中的提交关联的拉取请求。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 10
					},
					"gitlens.views.searchAndCompare.pullRequests.showForCommits": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _搜索与比较_ 视图中显示与提交关联的拉取请求（如果有）。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 11
					},
					"gitlens.views.searchAndCompare.files.layout": {
						"type": "string",
						"default": "auto",
						"enum": [
							"auto",
							"list",
							"tree"
						],
						"enumDescriptions": [
							"根据 `#gitlens.views.searchAndCompare.files.threshold#` 值和每个嵌套级别的文件数量，自动在 `树` 和 `列表` 显示之间切换",
							"以列表显示文件",
							"以树显示文件"
						],
						"markdownDescription": "指定 _搜索与比较_ 视图将如何显示文件",
						"scope": "window",
						"order": 20
					},
					"gitlens.views.searchAndCompare.files.threshold": {
						"type": "number",
						"default": 5,
						"markdownDescription": "指定在 _搜索与比较_ 视图中，根据嵌套级别中的文件数量，在 `树` 和 `列表` 显示之间切换的阈值。仅当 `#gitlens.views.searchAndCompare.files.layout#` 设置为 `auto` 时适用",
						"scope": "window",
						"order": 21
					},
					"gitlens.views.searchAndCompare.files.compact": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _搜索与比较_ 视图中压缩（展平）不必要的文件嵌套。仅当 `#gitlens.views.searchAndCompare.files.layout#` 设置为 `tree` 或 `auto` 时适用",
						"scope": "window",
						"order": 22
					},
					"gitlens.views.searchAndCompare.files.icon": {
						"type": "string",
						"default": "type",
						"enum": [
							"status",
							"type"
						],
						"enumDescriptions": [
							"显示文件的状态作为图标",
							"显示文件的类型（主题图标）作为图标"
						],
						"markdownDescription": "指定 _搜索与比较_ 视图将如何显示文件图标",
						"scope": "window",
						"order": 33
					},
					"gitlens.views.searchAndCompare.avatars": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _搜索与比较_ 视图中显示头像图片而不是提交（或状态）图标",
						"scope": "window",
						"order": 30
					}
				}
			},
			{
				"id": "cloud-patches-view",
				"title": "云补丁视图 (ᴘʀᴇᴠɪᴇᴡ)",
				"order": 240,
				"properties": {
					"gitlens.views.drafts.files.layout": {
						"type": "string",
						"default": "auto",
						"enum": [
							"auto",
							"list",
							"tree"
						],
						"enumDescriptions": [
							"根据 `#gitlens.views.drafts.files.threshold#` 值和每个嵌套级别的文件数量，自动在 `树` 和 `列表` 显示之间切换",
							"以列表显示文件",
							"以树显示文件"
						],
						"markdownDescription": "指定 _云补丁_ 视图将如何显示文件",
						"scope": "window",
						"order": 30
					},
					"gitlens.views.drafts.files.threshold": {
						"type": "number",
						"default": 5,
						"markdownDescription": "指定在 _云补丁_ 视图中，根据嵌套级别中的文件数量，在 `树` 和 `列表` 显示之间切换的阈值。仅当 `#gitlens.views.drafts.files.layout#` 设置为 `auto` 时适用",
						"scope": "window",
						"order": 31
					},
					"gitlens.views.drafts.files.compact": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _云补丁_ 视图中压缩（展平）不必要的文件嵌套。仅当 `#gitlens.views.drafts.files.layout#` 设置为 `tree` 或 `auto` 时适用",
						"scope": "window",
						"order": 32
					},
					"gitlens.views.drafts.files.icon": {
						"type": "string",
						"default": "type",
						"enum": [
							"status",
							"type"
						],
						"enumDescriptions": [
							"显示文件的状态作为图标",
							"显示文件的类型（主题图标）作为图标"
						],
						"markdownDescription": "指定 _云补丁_ 视图将如何显示文件图标",
						"scope": "window",
						"order": 33
					},
					"gitlens.views.drafts.avatars": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _云补丁_ 视图中显示头像图片而不是提交（或状态）图标",
						"scope": "window",
						"order": 40
					}
				}
			},
			{
				"id": "patch-details-view",
				"title": "补丁详细信息视图 (ᴘʀᴇᴠɪᴇᴡ)",
				"order": 250,
				"properties": {
					"gitlens.views.patchDetails.files.layout": {
						"type": "string",
						"default": "auto",
						"enum": [
							"auto",
							"list",
							"tree"
						],
						"enumDescriptions": [
							"根据 `#gitlens.views.patchDetails.files.threshold#` 值和每个嵌套级别的文件数量，自动在 `树` 和 `列表` 显示之间切换",
							"以列表显示文件",
							"以树显示文件"
						],
						"markdownDescription": "指定 _补丁详细信息_ 视图将如何显示文件",
						"scope": "window",
						"order": 30
					},
					"gitlens.views.patchDetails.files.threshold": {
						"type": "number",
						"default": 5,
						"markdownDescription": "指定在 _补丁详细信息_ 视图中，根据嵌套级别中的文件数量，在 `树` 和 `列表` 显示之间切换的阈值。仅当 `#gitlens.views.patchDetails.files.layout#` 设置为 `auto` 时适用",
						"scope": "window",
						"order": 31
					},
					"gitlens.views.patchDetails.files.compact": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _补丁详细信息_ 视图中压缩（展平）不必要的文件嵌套。仅当 `#gitlens.views.patchDetails.files.layout#` 设置为 `tree` 或 `auto` 时适用",
						"scope": "window",
						"order": 32
					},
					"gitlens.views.patchDetails.files.icon": {
						"type": "string",
						"default": "type",
						"enum": [
							"status",
							"type"
						],
						"enumDescriptions": [
							"显示文件的状态作为图标",
							"显示文件的类型（主题图标）作为图标"
						],
						"markdownDescription": "指定 _补丁详细信息_ 视图将如何显示文件图标",
						"scope": "window",
						"order": 33
					},
					"gitlens.views.patchDetails.avatars": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _补丁详细信息_ 视图中显示头像图片而不是提交（或状态）图标",
						"scope": "window",
						"order": 40
					}
				}
			},
			{
				"id": "workspaces-view",
				"title": "云工作区视图 (ᴘʀᴇᴠɪᴇᴡ)",
				"order": 260,
				"properties": {
					"gitlens.views.workspaces.showBranchComparison": {
						"type": [
							"boolean",
							"string"
						],
						"enum": [
							false,
							"branch",
							"working"
						],
						"enumDescriptions": [
							"隐藏分支比较",
							"将当前分支与用户选择的参考进行比较",
							"将工作区与用户选择的参考进行比较"
						],
						"default": "working",
						"markdownDescription": "指定是否在 _云工作区_ 视图中显示当前分支或工作区与用户选择的参考（分支、标签等）的比较",
						"scope": "window",
						"order": 10
					},
					"gitlens.views.workspaces.showUpstreamStatus": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _云工作区_ 视图中显示每个存储库的当前分支的上游状态",
						"scope": "window",
						"order": 11
					},
					"gitlens.views.workspaces.includeWorkingTree": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否在 _云工作区_ 视图中包含每个存储库的工作区文件状态",
						"scope": "window",
						"order": 12
					},
					"gitlens.views.workspaces.pullRequests.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否查询与 _云工作区_ 视图中的分支和提交关联的拉取请求。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 20
					},
					"gitlens.views.workspaces.pullRequests.showForBranches": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _云工作区_ 视图中显示与分支关联的拉取请求（如果有）。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 21
					},
					"gitlens.views.workspaces.pullRequests.showForCommits": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _云工作区_ 视图中显示与提交关联的拉取请求（如果有）。需要连接到受支持的远程服务（如 GitHub）",
						"scope": "window",
						"order": 22
					},
					"gitlens.views.workspaces.showCommits": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _云工作区_ 视图中显示每个存储库的当前分支上的提交",
						"scope": "window",
						"order": 30
					},
					"gitlens.views.workspaces.showBranches": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _云工作区_ 视图中显示每个存储库的分支",
						"scope": "window",
						"order": 31
					},
					"gitlens.views.workspaces.showRemotes": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _云工作区_ 视图中显示每个存储库的远程",
						"scope": "window",
						"order": 32
					},
					"gitlens.views.workspaces.showStashes": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否在 _云工作区_ 视图中显示每个存储库的存储",
						"scope": "window",
						"order": 33
					},
					"gitlens.views.workspaces.showTags": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _云工作区_ 视图中显示每个存储库的标签",
						"scope": "window",
						"order": 34
					},
					"gitlens.views.workspaces.showContributors": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _云工作区_ 视图中显示每个存储库的贡献者",
						"scope": "window",
						"order": 35
					},
					"gitlens.views.workspaces.showWorktrees": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _云工作区_ 视图中显示每个存储库的工作树",
						"scope": "window",
						"order": 36
					},
					"gitlens.views.workspaces.showIncomingActivity": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否在 _云工作区_ 视图中显示每个存储库的实验性传入活动",
						"scope": "window",
						"order": 37
					},
					"gitlens.views.workspaces.avatars": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _云工作区_ 视图中显示头像图片而不是提交（或状态）图标",
						"scope": "window",
						"order": 60
					},
					"gitlens.views.workspaces.branches.layout": {
						"type": "string",
						"default": "tree",
						"enum": [
							"list",
							"tree"
						],
						"enumDescriptions": [
							"以列表显示分支",
							"当分支名称包含斜杠 `/` 时，以树显示分支"
						],
						"markdownDescription": "指定 _云工作区_ 视图将如何显示分支",
						"scope": "window",
						"order": 70
					},
					"gitlens.views.workspaces.worktrees.viewAs": {
						"type": "string",
						"default": "name",
						"enum": [
							"name",
							"path",
							"relativePath"
						],
						"enumDescriptions": [
							"显示工作树名称",
							"显示工作树路径",
							"显示工作树相对路径"
						],
						"markdownDescription": "指定 _云工作区_ 视图将如何显示工作树",
						"scope": "window",
						"order": 75
					},
					"gitlens.views.workspaces.files.layout": {
						"type": "string",
						"default": "auto",
						"enum": [
							"auto",
							"list",
							"tree"
						],
						"enumDescriptions": [
							"根据 `#gitlens.views.workspaces.files.threshold#` 值和每个嵌套级别的文件数量，自动在 `树` 和 `列表` 显示之间切换",
							"以列表显示文件",
							"以树显示文件"
						],
						"markdownDescription": "指定 _云工作区_ 视图将如何显示文件",
						"scope": "window",
						"order": 80
					},
					"gitlens.views.workspaces.files.threshold": {
						"type": "number",
						"default": 5,
						"markdownDescription": "指定在 _云工作区_ 视图中，根据嵌套级别中的文件数量，在 `树` 和 `列表` 显示之间切换的阈值。仅当 `#gitlens.views.workspaces.files.layout#` 设置为 `auto` 时适用",
						"scope": "window",
						"order": 81
					},
					"gitlens.views.workspaces.files.compact": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在 _云工作区_ 视图中压缩（展平）不必要的文件嵌套。仅当 `#gitlens.views.workspaces.files.layout#` 设置为 `tree` 或 `auto` 时适用",
						"scope": "window",
						"order": 82
					},
					"gitlens.views.workspaces.files.icon": {
						"type": "string",
						"default": "type",
						"enum": [
							"status",
							"type"
						],
						"enumDescriptions": [
							"显示文件的状态作为图标",
							"显示文件的类型（主题图标）作为图标"
						],
						"markdownDescription": "指定 _云工作区_ 视图将如何显示文件图标",
						"scope": "window",
						"order": 83
					},
					"gitlens.views.workspaces.compact": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否以紧凑显示密度显示 _云工作区_ 视图",
						"scope": "window",
						"order": 90
					},
					"gitlens.views.workspaces.branches.showStashes": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否在 _云工作区_ 视图的 _提交_ 和 _分支_ 部分中显示存储",
						"scope": "window",
						"order": 9
					},
					"gitlens.views.workspaces.branches.showBranchComparison": {
						"type": [
							"boolean",
							"string"
						],
						"enum": [
							false,
							"branch"
						],
						"enumDescriptions": [
							"隐藏分支比较",
							"将分支与用户选择的参考进行比较"
						],
						"default": "branch",
						"markdownDescription": "指定是否在 _云工作区_ 视图的每个分支下显示分支与用户选择的参考（分支、标签等）的比较",
						"scope": "window",
						"order": 100
					}
				}
			},
			{
				"id": "rebase-editor",
				"title": "交互式变基编辑器",
				"order": 600,
				"properties": {
					"gitlens.rebaseEditor.ordering": {
						"type": "string",
						"default": "desc",
						"enum": [
							"asc",
							"desc"
						],
						"enumDescriptions": [
							"最旧的提交优先显示",
							"最新的提交优先显示"
						],
						"markdownDescription": "指定 _交互式变基编辑器_ 中 Git 提交的显示方式",
						"scope": "window",
						"order": 10
					},
					"gitlens.rebaseEditor.showDetailsView": {
						"type": [
							"boolean",
							"string"
						],
						"default": "selection",
						"enum": [
							false,
							"open",
							"selection"
						],
						"enumDescriptions": [
							"从不自动显示 _提交详细信息_ 视图",
							"仅在打开 _交互式变基编辑器_ 时自动显示 _提交详细信息_ 视图",
							"在 _交互式变基编辑器_ 中选择更改时自动显示 _提交详细信息_ 视图"
						],
						"markdownDescription": "指定何时为 _交互式变基编辑器_ 中选定的行显示 _提交详细信息_ 视图",
						"scope": "window",
						"order": 20
					}
				}
			},
			{
				"id": "git-command-palette",
				"title": "Git 命令面板",
				"order": 700,
				"properties": {
					"gitlens.gitCommands.avatars": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在快速选择菜单中显示头像图片（如果适用）",
						"scope": "window",
						"order": 5
					},
					"gitlens.gitCommands.sortBy": {
						"type": "string",
						"default": "usage",
						"enum": [
							"name",
							"usage"
						],
						"enumDescriptions": [
							"按名称排序命令",
							"按上次使用日期排序命令"
						],
						"markdownDescription": "指定 _Git 命令面板_ 中 Git 命令的排序方式",
						"scope": "window",
						"order": 10
					},
					"gitlens.gitCommands.skipConfirmations": {
						"type": "array",
						"default": [
							"fetch:command",
							"stash-push:command"
						],
						"items": {
							"type": "string",
							"enum": [
								"branch-create:command",
								"branch-create:menu",
								"co-authors:command",
								"co-authors:menu",
								"fetch:command",
								"fetch:menu",
								"pull:command",
								"pull:menu",
								"push:command",
								"push:menu",
								"stash-apply:command",
								"stash-apply:menu",
								"stash-pop:command",
								"stash-pop:menu",
								"stash-push:command",
								"stash-push:menu",
								"switch:command",
								"switch:menu",
								"tag-create:command",
								"tag-create:menu"
							],
							"enumDescriptions": [
								"跳过从命令运行时的分支创建确认，例如视图操作",
								"跳过从 Git 命令面板运行时的分支创建确认",
								"跳过从命令运行时的共同作者确认，例如视图操作",
								"跳过从 Git 命令面板运行时的共同作者确认",
								"跳过从命令运行时的获取确认，例如视图操作",
								"跳过从 Git 命令面板运行时的获取确认",
								"跳过从命令运行时的拉取确认，例如视图操作",
								"跳过从 Git 命令面板运行时的拉取确认",
								"跳过从命令运行时的推送确认，例如视图操作",
								"跳过从 Git 命令面板运行时的推送确认",
								"跳过从命令运行时的存储应用确认，例如视图操作",
								"跳过从 Git 命令面板运行时的存储应用确认",
								"跳过从命令运行时的存储弹出确认，例如视图操作",
								"跳过从 Git 命令面板运行时的存储弹出确认",
								"跳过从命令运行时的存储推送确认，例如视图操作",
								"跳过从 Git 命令面板运行时的存储推送确认",
								"跳过从命令运行时的切换确认，例如视图操作",
								"跳过从 Git 命令面板运行时的切换确认",
								"跳过从命令运行时的标签创建确认，例如视图操作",
								"跳过从 Git 命令面板运行时的标签创建确认"
							]
						},
						"minItems": 0,
						"maxItems": 14,
						"uniqueItems": true,
						"markdownDescription": "指定哪些（以及何时）Git 命令将跳过确认步骤，使用格式：`git-command-name:(menu|command)`",
						"scope": "window",
						"order": 20
					},
					"gitlens.gitCommands.closeOnFocusOut": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定当焦点丢失时是否关闭 _Git 命令面板_（如果没有，请按 `ESC` 关闭）",
						"scope": "window",
						"order": 30
					},
					"gitlens.gitCommands.search.showResultsInSideBar": {
						"type": [
							"boolean",
							"null"
						],
						"default": null,
						"markdownDescription": "指定是否直接在快速选择菜单中、在侧边栏中显示提交搜索结果，或者将基于上下文",
						"scope": "window",
						"order": 40
					},
					"gitlens.gitCommands.search.matchAll": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否匹配所有或任何提交消息搜索模式",
						"scope": "window",
						"order": 50
					},
					"gitlens.gitCommands.search.matchCase": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否匹配提交搜索模式时是否区分大小写",
						"scope": "window",
						"order": 51
					},
					"gitlens.gitCommands.search.matchRegex": {
						"type": "boolean",
						"default": true,
							"markdownDescription": "指定是否使用正则表达式匹配提交搜索模式",
						"scope": "window",
						"order": 52
					},
					"gitlens.gitCommands.search.showResultsInView": {
						"deprecationMessage": "已弃用。此设置已重命名为 gitlens.gitCommands.search.showResultsInSideBar",
						"markdownDeprecationMessage": "已弃用。此设置已重命名为 `#gitlens.gitCommands.search.showResultsInSideBar#`"
					}
				}
			},
			{
				"id": "integrations",
				"title": "集成",
				"order": 800,
				"properties": {
					"gitlens.autolinks": {
						"type": [
							"array",
							"null"
						],
						"default": null,
						"items": {
							"type": "object",
							"required": [
								"prefix",
								"url"
							],
							"properties": {
								"prefix": {
									"type": "string",
									"description": "指定要匹配以生成外部资源自动链接的短前缀，例如 `GH-` 或 `JIRA-`"
								},
								"title": {
									"type": [
										"string",
										"null"
									],
									"default": null,
									"description": "指定生成的自动链接的可选标题。使用 `<num>` 作为引用编号的变量"
								},
								"url": {
									"type": "string",
									"description": "指定要链接到的外部资源的 URL。使用 `<num>` 作为引用编号的变量"
								},
								"alphanumeric": {
									"type": "boolean",
									"description": "指定是否应在 `<num>` 中允许字母数字字符",
									"default": false
								},
								"ignoreCase": {
									"type": "boolean",
									"description": "指定在匹配前缀时是否应忽略大小写",
									"default": false
								}
							},
							"additionalProperties": false
						},
						"uniqueItems": true,
						"markdownDescription": "指定提交消息中到外部资源的自动链接。使用 `<num>` 作为引用编号的变量",
						"scope": "window",
						"order": 10
					},
					"gitlens.integrations.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否启用与任何受支持的远程服务的丰富集成",
						"scope": "window",
						"order": 20
					},
					"gitlens.cloudIntegrations.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定在使用 GitHub 进行身份验证时是否使用基于云的集成",
						"scope": "window",
						"order": 30
					},
					"gitlens.remotes": {
						"type": [
							"array",
							"null"
						],
						"default": null,
						"items": {
							"type": "object",
							"required": [
								"type"
							],
							"oneOf": [
								{
									"required": [
										"domain"
									]
								},
								{
									"required": [
										"regex"
									]
								}
							],
							"properties": {
								"type": {
									"type": "string",
									"enum": [
										"Custom",
										"AzureDevOps",
										"Bitbucket",
										"BitbucketServer",
										"Gerrit",
										"GoogleSource",
										"Gitea",
										"GitHub",
										"GitLab"
									],
									"description": "指定自定义远程服务的类型"
								},
								"domain": {
									"type": "string",
									"description": "指定用于将此自定义配置与 Git 远程匹配的域名"
								},
								"regex": {
									"type": "string",
									"description": "指定用于将此自定义配置与 Git 远程匹配并捕获“域名”和“路径”的正则表达式"
								},
								"name": {
									"type": "string",
									"description": "指定自定义远程服务的可选友好名称"
								},
								"protocol": {
									"type": "string",
									"default": "https",
									"description": "指定自定义远程服务的可选 URL 协议"
								},
								"ignoreSSLErrors": {
									"type": "boolean",
									"default": false,
									"description": "指定在连接到远程服务时是否忽略无效的 SSL 证书错误"
								},
								"urls": {
									"type": "object",
									"required": [
										"repository",
										"branches",
										"branch",
										"commit",
										"file",
										"fileInCommit",
										"fileInBranch",
										"fileLine",
										"fileRange"
									],
									"properties": {
										"repository": {
											"type": "string",
											"markdownDescription": "指定自定义远程服务的存储库 URL 的格式\n\n可用令牌\\\n`${repo}` &mdash; 存储库路径"
										},
										"branches": {
											"type": "string",
											"markdownDescription": "指定自定义远程服务的分支 URL 的格式\n\n可用令牌\\\n`${repo}` &mdash; 存储库路径\\\n`${branch}` &mdash; 分支"
										},
										"branch": {
											"type": "string",
											"markdownDescription": "指定自定义远程服务的分支 URL 的格式\n\n可用令牌\\\n`${repo}` &mdash; 存储库路径\\\n`${branch}` &mdash; 分支"
										},
										"commit": {
											"type": "string",
											"markdownDescription": "指定自定义远程服务的提交 URL 的格式\n\n可用令牌\\\n`${repo}` &mdash; 存储库路径\\\n`${id}` &mdash; 提交 SHA"
										},
										"comparison": {
											"type": "string",
											"markdownDescription": "指定自定义远程服务的比较 URL 的格式\n\n可用令牌\\\n`${repo}` &mdash; 存储库路径\\\n`${ref1}` &mdash; 引用 1\\\n`${ref2}` &mdash; 引用 2\\\n`${notation}` &mdash; 符号"
										},
										"createPullRequest": {
											"type": "string",
											"markdownDescription": "指定自定义远程服务的创建拉取请求 URL 的格式\n\n可用令牌\\\n`${repo}` &mdash; 存储库路径\\\n`${base}` &mdash; 基础分支\\\n`${compare}` &mdash; 比较分支"
										},
										"file": {
											"type": "string",
											"markdownDescription": "指定自定义远程服务的文件 URL 的格式\n\n可用令牌\\\n`${repo}` &mdash; 存储库路径\\\n`${file}` &mdash; 文件名\\\n`${line}` &mdash; 格式化的行信息"
										},
										"fileInBranch": {
											"type": "string",
											"markdownDescription": "指定自定义远程服务的分支文件 URL 的格式\n\n可用令牌\\\n`${repo}` &mdash; 存储库路径\\\n`${file}` &mdash; 文件名\\\n`${branch}` &mdash; 分支\\\n`${line}` &mdash; 格式化的行信息"
										},
										"fileInCommit": {
											"type": "string",
											"markdownDescription": "指定自定义远程服务的提交文件 URL 的格式\n\n可用令牌\\\n`${repo}` &mdash; 存储库路径\\\n`${file}` &mdash; 文件名\\\n`${id}` &mdash; 提交 SHA\\\n`${line}` &mdash; 格式化的行信息"
										},
										"fileLine": {
											"type": "string",
											"markdownDescription": "指定自定义远程服务的文件中某一行 URL 的格式\n\n可用令牌\\\n`${line}` &mdash; 行"
										},
										"fileRange": {
											"type": "string",
											"markdownDescription": "指定自定义远程服务的文件中某一范围 URL 的格式\n\n可用令牌\\\n`${start}` &mdash; 起始行\\\n`${end}` &mdash; 结束行"
										}
									},
									"additionalProperties": false
								}
							}
						},
						"uniqueItems": true,
						"markdownDescription": "指定自定义远程服务以与 Git 远程匹配以检测内置远程服务的自定义域或提供对自定义远程服务的支持",
						"scope": "resource",
						"order": 30
					},
					"gitlens.partners": {
						"type": [
							"object",
							"null"
						],
						"additionalProperties": {
							"type": "object",
							"properties": {
								"enabled": {
									"type": "boolean",
									"default": true,
									"description": "指定是否应显示合作伙伴集成"
								}
							},
							"additionalProperties": true,
							"description": "指定合作伙伴集成的配置"
						},
						"default": null,
						"description": "指定合作伙伴集成的配置",
						"scope": "window",
						"order": 40
					},
					"gitlens.liveshare.enabled": {
						"type": "boolean",
						"default": true,
						"description": "指定是否启用与 Visual Studio Live Share 的集成",
						"scope": "window",
						"order": 50
					},
					"gitlens.liveshare.allowGuestAccess": {
						"type": "boolean",
						"default": true,
						"description": "指定在使用 Visual Studio Live Share 时是否允许访客访问 GitLens 功能",
						"scope": "window",
						"order": 51
					}
				}
			},
			{
				"id": "terminal",
				"title": "终端",
				"order": 900,
				"properties": {
					"gitlens.terminalLinks.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否启用终端链接 &mdash; 集成终端中的自动链接，以快速跳转到提交、分支、标签等的更多详细信息",
						"scope": "window",
						"order": 10
					},
					"gitlens.terminalLinks.showDetailsView": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定单击集成终端中的提交链接时是否显示 _提交详细信息_ 视图",
						"scope": "window",
						"order": 20
					},
					"gitlens.gitkraken.cli.integration.enabled": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定是否启用与 GitKraken CLI 的实验性集成",
						"scope": "window",
						"order": 30,
						"tags": [
							"experimental"
						]
					},
					"gitlens.terminal.overrideGitEditor": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否将 VS Code 用作 Gitlens 终端命令的 Git `core.editor`",
						"scope": "window",
						"order": 100
					}
				}
			},
			{
				"id": "ai",
				"title": "AI (ᴘʀᴇᴠɪᴇᴡ)",
				"order": 1000,
				"tags": [
					"preview"
				],
				"properties": {
					"gitlens.ai.model": {
						"type": [
							"string",
							"null"
						],
						"default": null,
						"pattern": "^((anthropic|deepseek|gemini|github|huggingface|openai|xai):([\\w.-]+)|gitkraken|vscode)$",
						"markdownDescription": "指定用于 GitLens AI 功能的 AI 提供商和模型。应格式化为 `provider:model`（例如 `openai:gpt-4o` 或 `anthropic:claude-3-5-sonnet-latest`），`gitkraken` 表示 GitKraken AI 提供的模型，或 `vscode` 表示 VS Code 扩展 API 提供的模型（例如 Copilot）",
						"scope": "window",
						"order": 10,
						"tags": [
							"preview"
						]
					},
					"gitlens.ai.gitkraken.model": {
						"type": [
							"string",
							"null"
						],
						"default": null,
						"pattern": "^(.*):(.*)$",
						"markdownDescription": "指定 GitLens AI 功能的 GitKraken AI 提供的模型，格式为 `provider:model`",
						"scope": "window",
						"order": 5,
						"tags": [
							"preview"
						]
					},
					"gitlens.ai.vscode.model": {
						"type": [
							"string",
							"null"
						],
						"default": null,
						"pattern": "^(.*):(.*)$",
						"markdownDescription": "指定 GitLens AI 功能的 VS Code 提供的模型，格式为 `provider:model`",
						"scope": "window",
						"order": 20,
						"tags": [
							"preview"
						]
					},
					"gitlens.ai.openai.url": {
						"type": [
							"string",
							"null"
						],
						"default": null,
						"markdownDescription": "指定通过 Azure 访问 OpenAI 模型的自定义 URL。Azure URL 应采用以下格式：https://{your-resource-name}.openai.azure.com/openai/deployments/{deployment-id}/chat/completions?api-version={api-version}",
						"scope": "window",
						"order": 30,
						"tags": [
							"preview"
						]
					},
					"gitlens.ai.largePromptWarningThreshold": {
						"type": "number",
						"default": 20000,
						"markdownDescription": "指定何时显示有关提示过大的警告的阈值（以令牌为单位）",
						"scope": "window",
						"order": 80,
						"tags": [
							"preview"
						]
					},
					"gitlens.ai.modelOptions.temperature": {
						"type": "number",
						"default": 0.7,
						"minimum": 0,
						"maximum": 2,
						"markdownDescription": "指定 AI 模型的温度（输出随机性的度量）。较高的值会导致更多的随机性，例如创造性，而较低的值则更具确定性",
						"scope": "window",
						"order": 90,
						"tags": [
							"preview"
						]
					},
					"gitlens.ai.explainChanges.customInstructions": {
						"type": "string",
						"default": null,
						"markdownDescription": "指定在生成更改摘要时提供给 AI 提供商的自定义说明",
						"scope": "window",
						"order": 100,
						"tags": [
							"preview"
						]
					},
					"gitlens.ai.generateChangelog.customInstructions": {
						"type": "string",
						"default": null,
						"markdownDescription": "指定在从一组更改生成变更日志时提供给 AI 提供商的自定义说明",
						"scope": "window",
						"order": 110,
						"tags": [
							"preview"
						]
					},
					"gitlens.ai.generateCommitMessage.customInstructions": {
						"type": "string",
						"default": null,
						"markdownDescription": "指定在生成提交消息时提供给 AI 提供商的自定义说明",
						"scope": "window",
						"order": 200,
						"tags": [
							"preview"
						]
					},
					"gitlens.ai.generateCommitMessage.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否启用 GitLens 的 AI 驱动的按需提交消息生成",
						"scope": "window",
						"order": 210,
						"tags": [
							"preview"
						]
					},
					"gitlens.ai.generateStashMessage.customInstructions": {
						"type": "string",
						"default": null,
						"markdownDescription": "指定在生成存储消息时提供给 AI 提供商的自定义说明",
						"scope": "window",
						"order": 220,
						"tags": [
							"preview"
						]
					},
					"gitlens.ai.generateCreateCloudPatch.customInstructions": {
						"type": "string",
						"default": null,
						"markdownDescription": "指定在生成云补丁标题和描述时提供给 AI 提供商的自定义说明",
						"scope": "window",
						"order": 300,
						"tags": [
							"preview"
						]
					},
					"gitlens.ai.generateCreateCodeSuggest.customInstructions": {
						"type": "string",
						"default": null,
							"markdownDescription": "指定在生成代码建议标题和描述时提供给 AI 提供商的自定义说明",
						"scope": "window",
						"order": 400,
						"tags": [
							"preview"
						]
					},
					"gitlens.ai.generateCreatePullRequest.customInstructions": {
						"type": "string",
						"default": null,
						"markdownDescription": "指定在生成拉取请求标题和描述时提供给 AI 提供商的自定义说明",
						"scope": "window",
						"order": 500,
						"tags": [
							"preview"
						]
					}
				}
			},
			{
				"id": "date-times",
				"title": "日期与时间",
				"order": 1100,
				"properties": {
					"gitlens.defaultDateStyle": {
						"type": "string",
						"default": "relative",
						"enum": [
							"relative",
							"absolute"
						],
						"enumDescriptions": [
							"例如 1 天前",
							"例如 2018 年 7 月 25 日下午 7:18"
						],
						"markdownDescription": "指定默认情况下日期的显示方式",
						"scope": "window",
						"order": 10
					},
					"gitlens.defaultDateFormat": {
						"type": [
							"string",
							"null"
						],
						"default": null,
						"markdownDescription": "指定默认情况下绝对日期的格式。详见 [Moment.js 文档](https://momentjs.com/docs/#/displaying/format/) 中支持的格式",
						"scope": "window",
						"order": 20
					},
					"gitlens.defaultDateLocale": {
						"type": [
							"string",
							"null"
						],
						"default": null,
						"markdownDescription": "指定用于日期格式化的区域设置，一个 [BCP 47 语言标签](https://en.wikipedia.org/wiki/IETF_language_tag#List_of_major_primary_language_subtags)，默认为 VS Code 区域设置。使用 `system` 以遵循当前系统区域设置，或选择特定区域设置，例如 `en-US` — 美国英语，`en-GB` — 英式英语，`de-DE` — 德语，`ja-JP` = 日语等。",
						"scope": "window",
						"order": 21
					},
					"gitlens.defaultDateShortFormat": {
						"type": [
							"string",
							"null"
						],
						"default": null,
						"markdownDescription": "指定默认情况下短绝对日期的格式。详见 [Moment.js 文档](https://momentjs.com/docs/#/displaying/format/) 中支持的格式",
						"scope": "window",
						"order": 22
					},
					"gitlens.defaultTimeFormat": {
						"type": [
							"string",
							"null"
						],
						"default": null,
						"markdownDescription": "指定默认情况下时间的格式。详见 [Moment.js 文档](https://momentjs.com/docs/#/displaying/format/) 中支持的格式",
						"scope": "window",
						"order": 30
					},
					"gitlens.defaultDateSource": {
						"type": "string",
						"default": "authored",
						"enum": [
							"authored",
							"committed"
						],
						"enumDescriptions": [
							"使用更改的作者日期（即最初编写的日期）",
							"使用更改的提交日期"
						],
						"markdownDescription": "指定提交日期应使用作者日期还是提交日期",
						"scope": "window",
						"order": 40
					}
				}
			},
			{
				"id": "sorting",
				"title": "排序",
				"order": 1200,
				"properties": {
					"gitlens.sortRepositoriesBy": {
						"type": "string",
						"default": "discovered",
						"enum": [
							"discovered",
							"lastFetched:desc",
							"lastFetched:asc",
							"name:asc",
							"name:desc"
						],
						"enumDescriptions": [
							"按发现或工作区顺序排序存储库",
							"按上次获取日期降序排序存储库",
							"按上次获取日期升序排序存储库",
							"按名称升序排序存储库",
							"按名称降序排序存储库"
						],
						"markdownDescription": "指定快速选择菜单和视图中存储库的排序方式",
						"scope": "window",
						"order": 10
					},
					"gitlens.sortBranchesBy": {
						"type": "string",
						"default": "date:desc",
						"enum": [
							"date:desc",
							"date:asc",
							"name:asc",
							"name:desc"
						],
						"enumDescriptions": [
							"按最近提交日期降序排序分支",
							"按最近提交日期升序排序分支",
							"按名称升序排序分支",
							"按名称降序排序分支"
						],
						"markdownDescription": "指定快速选择菜单和视图中分支的排序方式",
						"scope": "window",
						"order": 20
					},
					"gitlens.sortTagsBy": {
						"type": "string",
						"default": "date:desc",
						"enum": [
							"date:desc",
							"date:asc",
							"name:asc",
							"name:desc"
						],
						"enumDescriptions": [
							"按日期降序排序标签",
							"按日期升序排序标签",
							"按名称升序排序标签",
							"按名称降序排序标签"
						],
						"markdownDescription": "指定快速选择菜单和视图中标签的排序方式",
						"scope": "window",
						"order": 30
					},
					"gitlens.sortContributorsBy": {
						"type": "string",
						"default": "count:desc",
						"enum": [
							"count:desc",
							"count:asc",
							"date:desc",
							"date:asc",
							"name:asc",
							"name:desc"
						],
						"enumDescriptions": [
							"按提交计数降序排序贡献者",
							"按提交计数升序排序贡献者",
							"按最近提交日期降序排序贡献者",
							"按最近提交日期升序排序贡献者",
							"按名称升序排序贡献者",
							"按名称降序排序贡献者"
						],
						"markdownDescription": "指定快速选择菜单和视图中贡献者的排序方式",
						"scope": "window",
						"order": 40
					}
				}
			},
			{
				"id": "menus-toolbars",
				"title": "菜单与工具栏",
				"order": 1300,
				"properties": {
					"gitlens.menus": {
						"anyOf": [
							{
								"enum": [
									false
								]
							},
							{
								"type": "object",
								"properties": {
									"editor": {
										"anyOf": [
											{
												"enum": [
													false
												]
											},
											{
												"type": "object",
												"properties": {
													"blame": {
														"type": "boolean"
													},
													"clipboard": {
														"type": "boolean"
													},
													"compare": {
														"type": "boolean"
													},
													"history": {
														"type": "boolean"
													},
													"remote": {
														"type": "boolean"
													}
												}
											}
										]
									},
									"editorGroup": {
										"anyOf": [
											{
												"enum": [
													false
												]
											},
											{
												"type": "object",
												"properties": {
													"blame": {
														"type": "boolean"
													},
													"compare": {
														"type": "boolean"
													}
												}
											}
										]
									},
									"editorGutter": {
										"anyOf": [
											{
												"enum": [
													false
												]
											},
											{
												"type": "object",
												"properties": {
													"compare": {
														"type": "boolean"
													},
													"remote": {
														"type": "boolean"
													},
													"share": {
														"type": "boolean"
													}
												}
											}
										]
									},
									"editorTab": {
										"anyOf": [
											{
												"enum": [
													false
												]
											},
											{
												"type": "object",
												"properties": {
													"clipboard": {
														"type": "boolean"
													},
													"compare": {
														"type": "boolean"
													},
													"history": {
														"type": "boolean"
													},
													"remote": {
														"type": "boolean"
													}
												}
											}
										]
									},
									"explorer": {
										"anyOf": [
											{
												"enum": [
													false
												]
											},
											{
												"type": "object",
												"properties": {
													"clipboard": {
														"type": "boolean"
													},
													"compare": {
														"type": "boolean"
													},
													"history": {
														"type": "boolean"
													},
													"remote": {
														"type": "boolean"
													}
												}
											}
										]
									},
									"ghpr": {
										"anyOf": [
											{
												"enum": [
													false
												]
											},
											{
												"type": "object",
												"properties": {
													"worktree": {
														"type": "boolean"
													}
												}
											}
										]
									},
									"scm": {
										"anyOf": [
											{
												"enum": [
													false
												]
											},
											{
												"type": "object",
												"properties": {
													"graph": {
														"type": "boolean"
													}
												}
											}
										]
									},
									"scmRepositoryInline": {
										"anyOf": [
											{
												"enum": [
													false
												]
											},
											{
												"type": "object",
												"properties": {
													"generateCommitMessage": {
														"type": "boolean"
													},
													"graph": {
														"type": "boolean"
													},
													"stash": {
														"type": "boolean"
													}
												}
											}
										]
									},
									"scmRepository": {
										"anyOf": [
											{
												"enum": [
													false
												]
											},
											{
												"type": "object",
												"properties": {
													"authors": {
														"type": "boolean"
													},
													"generateCommitMessage": {
														"type": "boolean"
													},
													"graph": {
														"type": "boolean"
													},
													"patch": {
														"type": "boolean"
													}
												}
											}
										]
									},
									"scmGroupInline": {
										"anyOf": [
											{
												"enum": [
													false
												]
											},
											{
												"type": "object",
												"properties": {
													"stash": {
														"type": "boolean"
													}
												}
											}
										]
									},
									"scmGroup": {
										"anyOf": [
											{
												"enum": [
													false
												]
											},
											{
												"type": "object",
												"properties": {
													"compare": {
														"type": "boolean"
													},
													"openClose": {
														"type": "boolean"
													},
													"patch": {
														"type": "boolean"
													},
													"stash": {
														"type": "boolean"
													}
												}
											}
										]
									},
									"scmItemInline": {
										"anyOf": [
											{
												"enum": [
													false
												]
											},
											{
												"type": "object",
												"properties": {
													"stash": {
														"type": "boolean"
													}
												}
											}
										]
									},
									"scmItem": {
										"anyOf": [
											{
												"enum": [
													false
												]
											},
											{
												"type": "object",
												"properties": {
													"clipboard": {
														"type": "boolean"
													},
													"compare": {
														"type": "boolean"
													},
													"history": {
														"type": "boolean"
													},
													"remote": {
														"type": "boolean"
													},
													"share": {
														"type": "boolean"
													},
													"stash": {
														"type": "boolean"
													}
												}
											}
										]
									}
								},
								"additionalProperties": false
							}
						],
						"default": {
							"editor": {
								"blame": true,
								"clipboard": true,
								"compare": true,
								"history": true,
								"remote": true
							},
							"editorGroup": {
								"blame": true,
								"compare": true
							},
							"editorGutter": {
								"compare": true,
								"remote": true,
								"share": true
							},
							"editorTab": {
								"clipboard": true,
								"compare": true,
								"history": true,
								"remote": true
							},
							"explorer": {
								"clipboard": true,
								"compare": true,
								"history": true,
								"remote": true
							},
							"ghpr": {
								"worktree": true
							},
							"scm": {
								"graph": true
							},
							"scmRepositoryInline": {
								"generateCommitMessage": true,
								"graph": true,
								"stash": true
							},
							"scmRepository": {
								"authors": true,
								"generateCommitMessage": true,
								"patch": true,
								"graph": false
							},
							"scmGroupInline": {
								"stash": true
							},
							"scmGroup": {
								"compare": true,
								"openClose": true,
								"patch": true,
								"stash": true
							},
							"scmItemInline": {
								"stash": false
							},
							"scmItem": {
								"clipboard": true,
								"compare": true,
								"history": true,
								"patch": true,
								"remote": true,
								"share": true,
								"stash": true
							}
						},
						"markdownDescription": "指定哪些命令将添加到哪些菜单",
						"scope": "window",
						"order": 10
					}
				}
			},
			{
				"id": "keyboard",
				"title": "键盘快捷键",
				"order": 1400,
				"properties": {
					"gitlens.keymap": {
						"type": "string",
						"default": "chorded",
						"enum": [
							"alternate",
							"chorded",
							"none"
						],
						"enumDescriptions": [
							"添加一组以 `Alt`（macOS 上为 ⌥）开头的快捷键",
							"添加一组以 `Ctrl+Shift+G`（macOS 上为 `⌥⌘G`）开头的和弦快捷键",
							"不会添加快捷键"
						],
						"markdownDescription": "指定用于 GitLens 快捷键的键映射",
						"scope": "window",
						"order": 10
					}
				}
			},
			{
				"id": "modes",
				"title": "模式",
				"order": 1500,
				"properties": {
					"gitlens.mode.statusBar.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否在状态栏中提供活动的 GitLens 模式",
						"scope": "window",
						"order": 10
					},
					"gitlens.mode.statusBar.alignment": {
						"type": "string",
						"default": "right",
						"enum": [
							"left",
							"right"
						],
						"enumDescriptions": [
							"左对齐",
							"右对齐"
						],
						"markdownDescription": "指定状态栏中活动的 GitLens 模式的对齐方式",
						"scope": "window",
						"order": 11
					},
					"gitlens.mode.active": {
						"type": "string",
						"markdownDescription": "指定活动的 GitLens 模式（如果有）",
						"scope": "window",
						"order": 20
					},
					"gitlens.modes": {
						"type": "object",
						"properties": {
							"zen": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"description": "指定此用户定义模式的友好名称"
									},
									"statusBarItemName": {
										"type": "string",
										"description": "指定此用户定义模式处于活动状态时在状态栏中显示的名称"
									},
									"description": {
										"type": "string",
										"description": "指定此用户定义模式的描述"
									},
									"codeLens": {
										"type": "boolean",
										"description": "指定此用户定义模式处于活动状态时是否显示任何 Git CodeLens"
									},
									"currentLine": {
										"type": "boolean",
										"description": "指定此用户定义模式处于活动状态时是否显示当前行的行内责任归属注释"
									},
									"hovers": {
										"type": "boolean",
										"description": "指定此用户定义模式处于活动状态时是否显示任何悬停"
									},
									"statusBar": {
										"type": "boolean",
										"description": "指定此用户定义模式处于活动状态时是否在状态栏中显示责任归属信息"
									}
								}
							},
							"review": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"description": "指定此用户定义模式的友好名称"
									},
									"statusBarItemName": {
										"type": "string",
										"description": "指定此用户定义模式处于活动状态时在状态栏中显示的名称"
									},
									"description": {
										"type": "string",
										"description": "指定此用户定义模式的描述"
									},
									"codeLens": {
										"type": "boolean",
										"description": "指定此用户定义模式处于活动状态时是否显示任何 Git CodeLens"
									},
									"currentLine": {
										"type": "boolean",
										"description": "指定此用户定义模式处于活动状态时是否显示当前行的行内责任归属注释"
									},
									"hovers": {
										"type": "boolean",
										"description": "指定此用户定义模式处于活动状态时是否显示任何悬停"
									},
									"statusBar": {
										"type": "boolean",
										"description": "指定此用户定义模式处于活动状态时是否在状态栏中显示责任归属信息"
									}
								}
							}
						},
						"additionalProperties": {
							"type": "object",
							"required": [
								"name"
							],
							"properties": {
								"name": {
									"type": "string",
									"description": "指定此用户定义模式的友好名称"
								},
								"statusBarItemName": {
									"type": "string",
									"description": "指定此用户定义模式处于活动状态时在状态栏中显示的名称"
								},
								"description": {
									"type": "string",
									"description": "指定此用户定义模式的描述"
								},
								"annotations": {
									"type": "string",
									"enum": [
										"blame",
										"changes",
										"heatmap"
									],
									"enumDescriptions": [
										"显示文件责任归属注释",
										"显示文件更改注释",
										"显示文件热图注释"
									],
									"description": "指定此用户定义模式处于活动状态时将显示哪些（如果有）文件注释"
								},
								"codeLens": {
									"type": "boolean",
									"description": "指定此用户定义模式处于活动状态时是否显示任何 Git CodeLens"
								},
								"currentLine": {
									"type": "boolean",
									"description": "指定此用户定义模式处于活动状态时是否显示当前行的行内责任归属注释"
								},
								"hovers": {
									"type": "boolean",
									"description": "指定此用户定义模式处于活动状态时是否显示任何悬停"
								},
								"statusBar": {
									"type": "boolean",
									"description": "指定此用户定义模式处于活动状态时是否在状态栏中显示责任归属信息"
								}
							}
						},
						"default": {
							"zen": {
								"name": "Zen",
								"statusBarItemName": "Zen",
								"description": "为了获得禅意体验，禁用许多视觉功能",
								"codeLens": false,
								"currentLine": false,
								"hovers": false,
								"statusBar": false
							},
							"review": {
								"name": "Review",
								"statusBarItemName": "Reviewing",
								"description": "用于审查代码，启用许多视觉功能",
								"codeLens": true,
								"currentLine": true,
								"hovers": true
							}
						},
						"markdownDescription": "指定用户定义的 GitLens 模式",
						"scope": "window",
						"order": 30
					}
				}
			},
			{
				"id": "gitkraken",
				"title": "GitKraken",
				"order": 9000,
				"properties": {
					"gitlens.gitkraken.activeOrganizationId": {
						"type": "string",
						"markdownDescription": "指定用户在 GitLens 中活动的 GitKraken 组织的 ID",
						"scope": "window",
						"order": 1
					}
				}
			},
			{
				"id": "advanced",
				"title": "高级",
				"order": 10000,
				"properties": {
					"gitlens.detectNestedRepositories": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定在打开文件时是否尝试检测嵌套的仓库",
						"scope": "resource",
						"order": 0
					},
					"gitlens.telemetry.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否允许 GitLens 发送产品使用遥测数据。\n\n_**注意：** 要使 GitLens 发送任何遥测数据，**此设置**和 VS Code 遥测都必须启用。如果其中一个被禁用，则不会发送任何遥测数据。_",
						"scope": "window",
						"order": 1
					},
					"gitlens.advanced.messages": {
						"type": "object",
						"default": {
							"suppressCommitHasNoPreviousCommitWarning": false,
							"suppressCommitNotFoundWarning": false,
							"suppressCreatePullRequestPrompt": false,
							"suppressDebugLoggingWarning": false,
							"suppressFileNotUnderSourceControlWarning": false,
							"suppressGitDisabledWarning": false,
							"suppressGitMissingWarning": false,
							"suppressGitVersionWarning": false,
							"suppressLineUncommittedWarning": false,
							"suppressNoRepositoryWarning": false,
							"suppressRebaseSwitchToTextWarning": false,
							"suppressIntegrationDisconnectedTooManyFailedRequestsWarning": false,
							"suppressIntegrationRequestFailed500Warning": false,
							"suppressIntegrationRequestTimedOutWarning": false,
							"suppressBlameInvalidIgnoreRevsFileWarning": false,
							"suppressBlameInvalidIgnoreRevsFileBadRevisionWarning": false
						},
						"properties": {
							"suppressCommitHasNoPreviousCommitWarning": {
								"type": "boolean",
								"default": false,
								"description": "提交没有上一个提交警告"
							},
							"suppressCommitNotFoundWarning": {
								"type": "boolean",
								"default": false,
								"description": "未找到提交警告"
							},
							"suppressCreatePullRequestPrompt": {
								"type": "boolean",
								"default": false,
								"description": "创建拉取请求提示"
							},
							"suppressDebugLoggingWarning": {
								"type": "boolean",
								"default": false,
								"description": "调试日志警告"
							},
							"suppressFileNotUnderSourceControlWarning": {
								"type": "boolean",
								"default": false,
								"description": "文件未受源代码管理警告"
							},
							"suppressGitDisabledWarning": {
								"type": "boolean",
								"default": false,
								"description": "Git 已禁用警告"
							},
							"suppressGitMissingWarning": {
								"type": "boolean",
								"default": false,
								"description": "缺少 Git 警告"
							},
							"suppressGitVersionWarning": {
								"type": "boolean",
								"default": false,
								"description": "Git 版本警告"
							},
							"suppressLineUncommittedWarning": {
								"type": "boolean",
								"default": false,
								"description": "未提交行警告"
							},
							"suppressNoRepositoryWarning": {
								"type": "boolean",
								"default": false,
								"description": "没有仓库警告"
							},
							"suppressRebaseSwitchToTextWarning": {
								"type": "boolean",
								"default": false,
								"description": "变基切换为文本警告"
							},
							"suppressIntegrationDisconnectedTooManyFailedRequestsWarning": {
								"type": "boolean",
								"default": false,
								"description": "集成断开连接；请求失败过多警告"
							},
							"suppressIntegrationRequestFailed500Warning": {
								"type": "boolean",
								"default": false,
								"description": "集成请求失败（500 状态码）警告"
							},
							"suppressIntegrationRequestTimedOutWarning": {
								"type": "boolean",
								"default": false,
								"description": "集成请求超时警告"
							},
							"suppressBlameInvalidIgnoreRevsFileWarning": {
								"type": "boolean",
								"default": false,
								"description": "无效的 Blame IgnoreRevs 文件警告"
							},
							"suppressBlameInvalidIgnoreRevsFileBadRevisionWarning": {
								"type": "boolean",
								"default": false,
								"description": "Blame IgnoreRevs 文件中无效的修订警告"
							}
						},
						"additionalProperties": false,
						"markdownDescription": "指定应抑制哪些消息",
						"scope": "window",
						"order": 5
					},
					"gitlens.advanced.repositorySearchDepth": {
						"type": [
							"number",
							"null"
						],
						"default": null,
						"markdownDescription": "指定搜索仓库的文件夹深度。默认为 `#git.repositoryScanMaxDepth#`",
						"scope": "resource",
						"order": 10
					},
					"gitlens.advanced.abbreviatedShaLength": {
						"type": "number",
						"default": 7,
						"markdownDescription": "指定简写提交 SHA 的长度",
						"scope": "window",
						"order": 20
					},
					"gitlens.advanced.abbreviateShaOnCopy": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定将提交 SHA 复制到剪贴板时是复制完整还是简写。简写长度取决于 `#gitlens.advanced.abbreviatedShaLength#`。",
						"scope": "window",
						"order": 21
					},
					"gitlens.advanced.commitOrdering": {
						"type": [
							"string",
							"null"
						],
						"default": null,
						"enum": [
							null,
							"date",
							"author-date",
							"topo"
						],
						"enumDescriptions": [
							"按时间倒序显示提交",
							"按提交时间倒序显示提交",
							"按作者时间倒序显示提交",
							"按提交时间倒序显示提交，但避免多条历史线混合"
						],
						"markdownDescription": "指定提交的显示顺序。如果未指定，则按时间倒序显示提交",
						"scope": "window",
						"order": 30
					},
					"gitlens.blame.ignoreWhitespace": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定在 blame 操作期间比较修订时是否忽略空白",
						"scope": "resource",
						"order": 40
					},
					"gitlens.advanced.blame.customArguments": {
						"type": [
							"array",
							"null"
						],
						"default": null,
						"items": {
							"type": "string"
						},
						"markdownDescription": "指定传递给 `git blame` 命令的其他参数",
						"scope": "resource",
						"order": 41
					},
					"gitlens.advanced.similarityThreshold": {
						"type": [
							"number",
							"null"
						],
						"default": null,
						"markdownDescription": "指定删除和添加文件对被视为重命名所需的相似度百分比",
						"scope": "window",
						"order": 50
					},
					"gitlens.advanced.externalDiffTool": {
						"type": [
							"string",
							"null"
						],
						"default": null,
						"markdownDescription": "指定在比较文件时要使用的可选外部 diff 工具。必须是已配置的 [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool)。",
						"scope": "window",
						"order": 60
					},
					"gitlens.advanced.externalDirectoryDiffTool": {
						"type": [
							"string",
							"null"
						],
						"default": null,
						"markdownDescription": "指定在比较目录时要使用的可选外部 diff 工具。必须是已配置的 [Git difftool](https://git-scm.com/docs/git-config#Documentation/git-config.txt-difftool)。",
						"scope": "window",
						"order": 61
					},
					"gitlens.advanced.quickPick.closeOnFocusOut": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定当焦点丢失时是否关闭快速选择菜单（如果没有，请按 `ESC` 关闭）",
						"scope": "window",
						"order": 70
					},
					"gitlens.advanced.maxListItems": {
						"type": "number",
						"default": 200,
						"markdownDescription": "指定列表中显示的最大项目数。使用 0 表示不限制",
						"scope": "window",
						"order": 80
					},
					"gitlens.advanced.maxSearchItems": {
						"type": "number",
						"default": 200,
						"markdownDescription": "指定搜索中显示的最大项目数。使用 0 表示不限制",
						"scope": "window",
						"order": 81
					},
					"gitlens.advanced.caching.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否缓存 git 输出 —— 不建议更改默认值",
						"scope": "window",
						"order": 90
					},
					"gitlens.advanced.caching.gitPath": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否缓存（每个工作区）GitLens 使用的 Git 可执行文件路径",
						"scope": "window",
						"order": 91
					},
					"gitlens.debug": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "指定调试模式",
						"scope": "window",
						"order": 100
					},
					"gitlens.deepLinks.schemeOverride": {
						"type": [
							"boolean",
							"string"
						],
						"default": false,
						"markdownDescription": "指定是否使用环境值或指定值覆盖默认的深度链接方案（vscode://）",
						"scope": "window",
						"order": 110
					},
					"gitlens.advanced.useSymmetricDifferenceNotation": {
						"deprecationMessage": "已弃用。此设置不再使用",
						"markdownDescription": "已弃用。此设置不再使用"
					}
				}
			},
			{
				"id": "general",
				"title": "常规",
				"order": 0,
				"properties": {
					"gitlens.showWhatsNewAfterUpgrades": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定升级到新功能版本后是否显示“新功能”通知",
						"scope": "window",
						"order": 20
					},
					"gitlens.outputLevel": {
						"type": "string",
						"default": "warn",
						"enum": [
							"off",
							"error",
							"warn",
							"info",
							"debug"
						],
						"enumDescriptions": [
							"不记录任何内容",
							"仅记录错误",
							"记录错误和警告",
							"记录错误、警告和消息",
							"记录详细的错误、警告和消息。适合问题报告。"
						],
						"markdownDescription": "指定将向 GitLens 输出通道发送多少（如果有）输出",
						"scope": "window",
						"order": 30
					},
					"gitlens.defaultGravatarsStyle": {
						"type": "string",
						"default": "robohash",
						"enum": [
							"identicon",
							"mp",
							"monsterid",
							"retro",
							"robohash",
							"wavatar"
						],
						"enumDescriptions": [
							"几何图案",
							"简单的卡通风格人形轮廓（不随邮箱哈希变化）",
							"不同颜色、面孔等的怪物",
							"8 位街机风格像素头像",
							"不同颜色、面孔等的机器人",
							"不同特征和背景的人脸"
						],
						"markdownDescription": "指定 gravatar 默认（备用）图片的样式",
						"scope": "window",
						"order": 40
					},
					"gitlens.proxy": {
						"type": [
							"object",
							"null"
						],
						"default": null,
						"items": {
							"type": "object",
							"required": [
								"url",
								"strictSSL"
							],
							"properties": {
								"url": {
									"type": [
										"string",
										"null"
									],
									"default": null,
									"description": "指定要使用的代理服务器 URL"
								},
								"strictSSL": {
									"type": "boolean",
									"description": "指定是否应根据提供的 CA 列表验证代理服务器证书",
									"default": true
								}
							},
							"additionalProperties": false
						},
						"uniqueItems": true,
						"description": "指定要使用的代理配置。如果未指定，将根据 VS Code 或操作系统设置确定代理配置",
						"scope": "window",
						"order": 55
					},
					"gitlens.plusFeatures.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否隐藏或显示需要试用或 GitLens Pro 且在当前仓库和试用/计划下不可用的功能",
						"scope": "window",
						"order": 60
					},
					"gitlens.virtualRepositories.enabled": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "指定是否启用虚拟仓库支持",
						"scope": "window",
						"order": 70
					},
					"gitlens.insiders": {
						"deprecationMessage": "已弃用。请改用 GitLens 的预发布版本",
						"markdownDeprecationMessage": "已弃用。请改用 GitLens 的预发布版本"
					}
				}
			}
		],
		"configurationDefaults": {
			"[ansible][azure-pipelines][css][dockerfile][dockercompose][html][json][jsonc][less][postcss][scss][stylus][vue][yaml]": {
				"gitlens.codeLens.scopes": [
					"document"
				]
			},
			"[python]": {
				"gitlens.codeLens.symbolScopes": [
					"!Module"
				]
			}
		},
		"colors": [
			{
				"id": "gitlens.gutterBackgroundColor",
				"description": "指定文件责任归属注释的背景色",
				"defaults": {
					"dark": "#FFFFFF13",
					"light": "#0000000C",
					"highContrast": "#FFFFFF13"
				}
			},
			{
				"id": "gitlens.gutterForegroundColor",
				"description": "指定文件责任归属注释的前景色",
				"defaults": {
					"dark": "#BEBEBE",
					"light": "#747474",
					"highContrast": "#BEBEBE"
				}
			},
			{
				"id": "gitlens.gutterUncommittedForegroundColor",
				"description": "指定文件责任归属注释中未提交行的前景色",
				"defaults": {
					"dark": "#00BCF299",
					"light": "#00BCF299",
					"highContrast": "#00BCF2FF"
				}
			},
			{
				"id": "gitlens.trailingLineBackgroundColor",
				"description": "指定当前行内联责任归属注释的背景色",
				"defaults": {
					"dark": "#00000000",
					"light": "#00000000",
					"highContrast": "#00000000"
				}
			},
			{
				"id": "gitlens.trailingLineForegroundColor",
				"description": "指定当前行内联责任归属注释的前景色",
				"defaults": {
					"dark": "#99999959",
					"light": "#99999959",
					"highContrast": "#99999999"
				}
			},
			{
				"id": "gitlens.lineHighlightBackgroundColor",
				"description": "指定责任归属注释中相关行高亮的背景色",
				"defaults": {
					"dark": "#00BCF233",
					"light": "#00BCF233",
					"highContrast": "#00BCF233"
				}
			},
			{
				"id": "gitlens.lineHighlightOverviewRulerColor",
				"description": "指定责任归属注释中相关行高亮的滚动条颜色",
				"defaults": {
					"dark": "#00BCF299",
					"light": "#00BCF299",
					"highContrast": "#00BCF299"
				}
			},
			{
				"id": "gitlens.openAutolinkedIssueIconColor",
				"defaults": {
					"dark": "#3fb950",
					"light": "#1a7f37",
					"highContrast": "#68ff79"
				},
				"description": "指定 GitLens 视图中已打开议题图标的颜色"
			},
			{
				"id": "gitlens.closedAutolinkedIssueIconColor",
				"defaults": {
					"dark": "#a371f7",
					"light": "#8250df",
					"highContrast": "#8945ff"
				},
				"description": "指定 GitLens 视图中已关闭议题图标的颜色"
			},
			{
				"id": "gitlens.closedPullRequestIconColor",
				"description": "指定 GitLens 视图中已关闭拉取请求图标的颜色",
				"defaults": {
					"dark": "#f85149",
					"light": "#cf222e",
					"highContrast": "#ff544b"
				}
			},
			{
				"id": "gitlens.openPullRequestIconColor",
				"description": "指定 GitLens 视图中已打开拉取请求图标的颜色",
				"defaults": {
					"dark": "#3fb950",
					"light": "#1a7f37",
					"highContrast": "#68ff79"
				}
			},
			{
				"id": "gitlens.mergedPullRequestIconColor",
				"description": "指定 GitLens 视图中已合并拉取请求图标的颜色",
				"defaults": {
					"dark": "#a371f7",
					"light": "#8250df",
					"highContrast": "#8945ff"
				}
			},
			{
				"id": "gitlens.unpublishedChangesIconColor",
				"description": "指定 GitLens 视图中未发布更改图标的颜色",
				"defaults": {
					"dark": "#35b15e",
					"light": "#35b15e",
					"highContrast": "#4dff88"
				}
			},
			{
				"id": "gitlens.unpublishedCommitIconColor",
				"description": "指定 GitLens 视图中未发布提交图标的颜色",
				"defaults": {
					"dark": "#35b15e",
					"light": "#35b15e",
					"highContrast": "#4dff88"
				}
			},
			{
				"id": "gitlens.unpulledChangesIconColor",
				"description": "指定 GitLens 视图中未拉取更改图标的颜色",
				"defaults": {
					"dark": "#b15e35",
					"light": "#b15e35",
					"highContrast": "#ff874c"
				}
			},
			{
				"id": "gitlens.decorations.addedForegroundColor",
				"description": "指定新增文件的装饰前景色",
				"defaults": {
					"light": "gitDecoration.addedResourceForeground",
					"dark": "gitDecoration.addedResourceForeground",
					"highContrast": "gitDecoration.addedResourceForeground"
				}
			},
			{
				"id": "gitlens.decorations.copiedForegroundColor",
				"description": "指定复制文件的装饰前景色",
				"defaults": {
					"light": "gitDecoration.renamedResourceForeground",
					"dark": "gitDecoration.renamedResourceForeground",
					"highContrast": "gitDecoration.renamedResourceForeground"
				}
			},
			{
				"id": "gitlens.decorations.deletedForegroundColor",
				"description": "指定已删除文件的装饰前景色",
				"defaults": {
					"light": "gitDecoration.deletedResourceForeground",
					"dark": "gitDecoration.deletedResourceForeground",
					"highContrast": "gitDecoration.deletedResourceForeground"
				}
			},
			{
				"id": "gitlens.decorations.ignoredForegroundColor",
				"description": "指定被忽略文件的装饰前景色",
				"defaults": {
					"light": "gitDecoration.ignoredResourceForeground",
					"dark": "gitDecoration.ignoredResourceForeground",
					"highContrast": "gitDecoration.ignoredResourceForeground"
				}
			},
			{
				"id": "gitlens.decorations.modifiedForegroundColor",
				"description": "指定已修改文件的装饰前景色",
				"defaults": {
					"light": "gitDecoration.modifiedResourceForeground",
					"dark": "gitDecoration.modifiedResourceForeground",
					"highContrast": "gitDecoration.modifiedResourceForeground"
				}
			},
			{
				"id": "gitlens.decorations.untrackedForegroundColor",
				"description": "指定未跟踪文件的装饰前景色",
				"defaults": {
					"light": "gitDecoration.untrackedResourceForeground",
					"dark": "gitDecoration.untrackedResourceForeground",
					"highContrast": "gitDecoration.untrackedResourceForeground"
				}
			},
			{
				"id": "gitlens.decorations.renamedForegroundColor",
				"description": "指定重命名文件的装饰前景色",
				"defaults": {
					"light": "gitDecoration.renamedResourceForeground",
					"dark": "gitDecoration.renamedResourceForeground",
					"highContrast": "gitDecoration.renamedResourceForeground"
				}
			},
			{
				"id": "gitlens.decorations.branchAheadForegroundColor",
				"description": "指定领先于其上游分支的分支装饰前景色",
				"defaults": {
					"dark": "#35b15e",
					"light": "#35b15e",
					"highContrast": "#4dff88"
				}
			},
			{
				"id": "gitlens.decorations.branchBehindForegroundColor",
				"description": "指定落后于其上游分支的分支装饰前景色",
				"defaults": {
					"dark": "#b15e35",
					"light": "#b15e35",
					"highContrast": "#ff874c"
				}
			},
			{
				"id": "gitlens.decorations.branchDivergedForegroundColor",
				"description": "指定与其上游分支既领先又落后的分支装饰前景色",
				"defaults": {
					"dark": "#D8AF1B",
					"light": "#D8AF1B",
					"highContrast": "#D8AF1B"
				}
			},
			{
				"id": "gitlens.decorations.branchUpToDateForegroundColor",
				"description": "指定与其上游分支保持最新的分支装饰前景色",
				"defaults": {
					"dark": "sideBar.foreground",
					"light": "sideBar.foreground",
					"highContrast": "sideBar.foreground"
				}
			},
			{
				"id": "gitlens.decorations.branchUnpublishedForegroundColor",
				"description": "指定尚未推送到上游的分支装饰前景色",
				"defaults": {
					"dark": "sideBar.foreground",
					"light": "sideBar.foreground",
					"highContrast": "sideBar.foreground"
				}
			},
			{
				"id": "gitlens.decorations.branchMissingUpstreamForegroundColor",
				"description": "指定缺少上游分支的分支装饰前景色",
				"defaults": {
					"light": "#ad0707",
					"dark": "#c74e39",
					"highContrast": "#c74e39"
				}
			},
			{
				"id": "gitlens.decorations.statusMergingOrRebasingConflictForegroundColor",
				"description": "指定变基操作发生冲突时状态的装饰前景色",
				"defaults": {
					"light": "#ad0707",
					"dark": "#c74e39",
					"highContrast": "#c74e39"
				}
			},
			{
				"id": "gitlens.decorations.statusMergingOrRebasingForegroundColor",
				"description": "指定变基操作期间状态的装饰前景色",
				"defaults": {
					"dark": "#D8AF1B",
					"light": "#D8AF1B",
					"highContrast": "#D8AF1B"
				}
			},
			{
				"id": "gitlens.decorations.workspaceRepoMissingForegroundColor",
				"description": "指定缺少本地路径的工作区仓库装饰前景色",
				"defaults": {
					"dark": "#909090",
					"light": "#949494",
					"highContrast": "#d3d3d3"
				}
			},
			{
				"id": "gitlens.decorations.workspaceCurrentForegroundColor",
				"description": "指定当前以 Code Workspace 文件打开的工作区装饰前景色",
				"defaults": {
					"dark": "#35b15e",
					"light": "#35b15e",
					"highContrast": "#4dff88"
				}
			},
			{
				"id": "gitlens.decorations.workspaceRepoOpenForegroundColor",
				"description": "指定当前工作区中已打开的工作区仓库装饰前景色",
				"defaults": {
					"dark": "#35b15e",
					"light": "#35b15e",
					"highContrast": "#4dff88"
				}
			},
			{
				"id": "gitlens.decorations.worktreeHasUncommittedChangesForegroundColor",
				"description": "指定有未提交更改的工作树装饰前景色",
				"defaults": {
					"light": "#895503",
					"dark": "#E2C08D",
					"highContrast": "#E2C08D"
				}
			},
			{
				"id": "gitlens.decorations.worktreeMissingForegroundColor",
				"description": "指定无法在磁盘上找到的工作树装饰前景色",
				"defaults": {
					"light": "#ad0707",
					"dark": "#c74e39",
					"highContrast": "#c74e39"
				}
			},
			{
				"id": "gitlens.graphLane1Color",
				"description": "指定 _提交图_ 可视化中第一条提交通道的颜色",
				"defaults": {
					"light": "#15a0bf",
					"dark": "#15a0bf",
					"highContrast": "#15a0bf"
				}
			},
			{
				"id": "gitlens.graphLane2Color",
				"description": "指定 _提交图_ 可视化中第二条提交通道的颜色",
				"defaults": {
					"light": "#0669f7",
					"dark": "#0669f7",
					"highContrast": "#0669f7"
				}
			},
			{
				"id": "gitlens.graphLane3Color",
				"description": "指定 _提交图_ 可视化中第三条提交通道的颜色",
				"defaults": {
					"light": "#8e00c2",
					"dark": "#8e00c2",
					"highContrast": "#8e00c2"
				}
			},
			{
				"id": "gitlens.graphLane4Color",
				"description": "指定 _提交图_ 可视化中第四条提交通道的颜色",
				"defaults": {
					"light": "#c517b6",
					"dark": "#c517b6",
					"highContrast": "#c517b6"
				}
			},
			{
				"id": "gitlens.graphLane5Color",
				"description": "指定 _提交图_ 可视化中第五条提交通道的颜色",
				"defaults": {
					"light": "#d90171",
					"dark": "#d90171",
					"highContrast": "#d90171"
				}
			},
			{
				"id": "gitlens.graphLane6Color",
				"description": "指定 _提交图_ 可视化中第六条提交通道的颜色",
				"defaults": {
					"light": "#cd0101",
					"dark": "#cd0101",
					"highContrast": "#cd0101"
				}
			},
			{
				"id": "gitlens.graphLane7Color",
				"description": "指定 _提交图_ 可视化中第七条提交通道的颜色",
				"defaults": {
					"light": "#f25d2e",
					"dark": "#f25d2e",
					"highContrast": "#f25d2e"
				}
			},
			{
				"id": "gitlens.graphLane8Color",
				"description": "指定 _提交图_ 可视化中第八条提交通道的颜色",
				"defaults": {
					"light": "#f2ca33",
					"dark": "#f2ca33",
					"highContrast": "#f2ca33"
				}
			},
			{
				"id": "gitlens.graphLane9Color",
				"description": "指定 _提交图_ 可视化中第九条提交通道的颜色",
				"defaults": {
					"light": "#7bd938",
					"dark": "#7bd938",
					"highContrast": "#7bd938"
				}
			},
			{
				"id": "gitlens.graphLane10Color",
				"description": "指定 _提交图_ 可视化中第十条提交通道的颜色",
				"defaults": {
					"light": "#2ece9d",
					"dark": "#2ece9d",
					"highContrast": "#2ece9d"
				}
			},
			{
				"id": "gitlens.graphChangesColumnAddedColor",
				"description": "指定 _提交图_ 的 _更改_ 列中表示新增行的颜色",
				"defaults": {
					"light": "#2da44e",
					"highContrastLight": "#2da44e",
					"dark": "#347d39",
					"highContrast": "#347d39"
				}
			},
			{
				"id": "gitlens.graphChangesColumnDeletedColor",
				"description": "指定 _提交图_ 的 _更改_ 列中表示删除行的颜色",
				"defaults": {
					"light": "#cf222e",
					"highContrastLight": "#cf222e",
					"dark": "#c93c37",
					"highContrast": "#c93c37"
				}
			},
			{
				"id": "gitlens.graphMinimapMarkerHeadColor",
				"description": "指定 _提交图_ 迷你图上标记 HEAD 的颜色",
				"defaults": {
					"light": "#04c814",
					"highContrastLight": "#04c814",
					"dark": "#05e617",
					"highContrast": "#05e617"
				}
			},
			{
				"id": "gitlens.graphScrollMarkerHeadColor",
				"description": "指定 _提交图_ 滚动条上标记 HEAD 的颜色",
				"defaults": {
					"light": "#04c814",
					"highContrastLight": "#04c814",
					"dark": "#05e617",
					"highContrast": "#05e617"
				}
			},
			{
				"id": "gitlens.graphMinimapMarkerUpstreamColor",
				"description": "指定 _提交图_ 迷你图上标记 HEAD 上游的颜色",
				"defaults": {
					"light": "#8cd993",
					"highContrastLight": "#8cd993",
					"dark": "#09ae17",
					"highContrast": "#09ae17"
				}
			},
			{
				"id": "gitlens.graphScrollMarkerUpstreamColor",
				"description": "指定 _提交图_ 滚动条上标记 HEAD 上游的颜色",
				"defaults": {
					"light": "#8cd993",
					"highContrastLight": "#8cd993",
					"dark": "#09ae17",
					"highContrast": "#09ae17"
				}
			},
			{
				"id": "gitlens.graphMinimapMarkerHighlightsColor",
				"description": "指定 _提交图_ 迷你图上标记高亮（匹配项）的颜色",
				"defaults": {
					"light": "#f5cc00",
					"highContrastLight": "#f5cc00",
					"dark": "#fbff0a",
					"highContrast": "#fbff0a"
				}
			},
			{
				"id": "gitlens.graphScrollMarkerHighlightsColor",
				"description": "指定 _提交图_ 滚动条上标记高亮（匹配项）的颜色",
				"defaults": {
					"light": "#f5cc00",
					"highContrastLight": "#f5cc00",
					"dark": "#fbff0a",
					"highContrast": "#fbff0a"
				}
			},
			{
				"id": "gitlens.graphMinimapMarkerLocalBranchesColor",
				"description": "指定 _提交图_ 迷你图上标记本地分支的颜色",
				"defaults": {
					"light": "#3095e8",
					"highContrastLight": "#3095e8",
					"dark": "#3087cf",
					"highContrast": "#3087cf"
				}
			},
			{
				"id": "gitlens.graphScrollMarkerLocalBranchesColor",
				"description": "指定 _提交图_ 滚动条上标记本地分支的颜色",
				"defaults": {
					"light": "#3095e8",
					"highContrastLight": "#3095e8",
					"dark": "#3087cf",
					"highContrast": "#3087cf"
				}
			},
			{
				"id": "gitlens.graphMinimapMarkerPullRequestsColor",
				"description": "指定 _提交图_ 迷你图上标记拉取请求的颜色",
				"defaults": {
					"light": "#ff8f18",
					"highContrastLight": "#ff8f18",
					"dark": "#c76801",
					"highContrast": "#c76801"
				}
			},
			{
				"id": "gitlens.graphScrollMarkerPullRequestsColor",
				"description": "指定 _提交图_ 滚动条上标记拉取请求的颜色",
				"defaults": {
					"light": "#ff8f18",
					"highContrastLight": "#ff8f18",
					"dark": "#c76801",
					"highContrast": "#c76801"
				}
			},
			{
				"id": "gitlens.graphMinimapMarkerRemoteBranchesColor",
				"description": "指定 _提交图_ 迷你图上标记远程分支的颜色",
				"defaults": {
					"light": "#67ace4",
					"highContrastLight": "#67ace4",
					"dark": "#2b5e88",
					"highContrast": "#2b5e88"
				}
			},
			{
				"id": "gitlens.graphScrollMarkerRemoteBranchesColor",
				"description": "指定 _提交图_ 滚动条上标记远程分支的颜色",
				"defaults": {
					"light": "#67ace4",
					"highContrastLight": "#67ace4",
					"dark": "#2b5e88",
					"highContrast": "#2b5e88"
				}
			},
			{
				"id": "gitlens.graphMinimapMarkerStashesColor",
				"description": "指定 _提交图_ 迷你图上标记存储的颜色",
				"defaults": {
					"light": "#e467e4",
					"highContrastLight": "#e467e4",
					"dark": "#b34db3",
					"highContrast": "#b34db3"
				}
			},
			{
				"id": "gitlens.graphScrollMarkerStashesColor",
				"description": "指定 _提交图_ 滚动条上标记存储的颜色",
				"defaults": {
					"light": "#e467e4",
					"highContrastLight": "#e467e4",
					"dark": "#b34db3",
					"highContrast": "#b34db3"
				}
			},
			{
				"id": "gitlens.graphMinimapMarkerTagsColor",
				"description": "指定 _提交图_ 迷你图上标记标签的颜色",
				"defaults": {
					"light": "#d2a379",
					"highContrastLight": "#d2a379",
					"dark": "#6b562e",
					"highContrast": "#6b562e"
				}
			},
			{
				"id": "gitlens.graphScrollMarkerTagsColor",
				"description": "指定 _提交图_ 滚动条上标记标签的颜色",
				"defaults": {
					"light": "#d2a379",
					"highContrastLight": "#d2a379",
					"dark": "#6b562e",
					"highContrast": "#6b562e"
				}
			},
			{
				"id": "gitlens.launchpadIndicatorMergeableColor",
				"description": "指定 _启动板_ 指示器图标为可合并优先级时的颜色",
				"defaults": {
					"light": "#42c954",
					"dark": "#3fb950",
					"highContrast": "#68ff79"
				}
			},
			{
				"id": "gitlens.launchpadIndicatorMergeableHoverColor",
				"description": "指定 _启动板_ 指示器图标悬停时为可合并优先级的颜色",
				"defaults": {
					"light": "#42c954",
					"dark": "#3fb950",
					"highContrast": "#68ff79"
				}
			},
			{
				"id": "gitlens.launchpadIndicatorBlockedColor",
				"description": "指定 _启动板_ 指示器图标为被阻止优先级时的颜色",
				"defaults": {
					"light": "#ad0707",
					"dark": "#c74e39",
					"highContrast": "#ff003c"
				}
			},
			{
				"id": "gitlens.launchpadIndicatorBlockedHoverColor",
				"description": "指定 _启动板_ 指示器图标悬停时为被阻止优先级的颜色",
				"defaults": {
					"light": "#ad0707",
					"dark": "#c74e39",
					"highContrast": "#ff003c"
				}
			},
			{
				"id": "gitlens.launchpadIndicatorAttentionColor",
				"description": "指定 _启动板_ 指示器图标为需要跟进或需要审查优先级时的颜色",
				"defaults": {
					"dark": "#D8AF1B",
					"light": "#cc9b15",
					"highContrast": "#D8AF1B"
				}
			},
			{
				"id": "gitlens.launchpadIndicatorAttentionHoverColor",
				"description": "指定 _启动板_ 指示器图标悬停时为需要跟进或需要审查优先级的颜色",
				"defaults": {
					"dark": "#D8AF1B",
					"light": "#cc9b15",
					"highContrast": "#D8AF1B"
				}
			}
		],
		"commands": [
			{
				"command": "gitlens.addAuthors",
				"title": "添加协作者...",
				"category": "GitLens",
				"icon": "$(person-add)"
			},
			{
				"command": "gitlens.ai.generateChangelog",
				"title": "生成变更日志（预览）...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.ai.generateCommitMessage",
				"title": "生成提交消息",
				"category": "GitLens"
			},
			{
				"command": "gitlens.annotations.nextChange",
				"title": "下一个更改",
				"icon": "$(arrow-down)"
			},
			{
				"command": "gitlens.annotations.previousChange",
				"title": "上一个更改",
				"icon": "$(arrow-up)"
			},
			{
				"command": "gitlens.applyPatchFromClipboard",
				"title": "应用已复制的更改（补丁）",
				"category": "GitLens"
			},
			{
				"command": "gitlens.associateIssueWithBranch",
				"title": "将议题关联到分支...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.browseRepoAtRevision",
				"title": "从修订版浏览仓库",
				"category": "GitLens",
				"icon": "$(folder-opened)",
				"enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"
			},
			{
				"command": "gitlens.browseRepoAtRevisionInNewWindow",
				"title": "在新窗口中从修订版浏览仓库",
				"category": "GitLens",
				"icon": "$(folder-opened)",
				"enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"
			},
			{
				"command": "gitlens.browseRepoBeforeRevision",
				"title": "从修订前浏览仓库",
				"category": "GitLens",
				"icon": "$(folder-opened)",
				"enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"
			},
			{
				"command": "gitlens.browseRepoBeforeRevisionInNewWindow",
				"title": "在新窗口中从修订前浏览仓库",
				"category": "GitLens",
				"icon": "$(folder-opened)",
				"enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"
			},
			{
				"command": "gitlens.clearFileAnnotations",
				"title": "清除文件注释",
				"category": "GitLens",
				"icon": "$(gitlens-gitlens-filled)"
			},
			{
				"command": "gitlens.closeUnchangedFiles",
				"title": "关闭未更改的文件",
				"category": "GitLens"
			},
			{
				"command": "gitlens.compareHeadWith",
				"title": "与 HEAD 比较...",
				"category": "GitLens",
				"icon": "$(compare-changes)"
			},
			{
				"command": "gitlens.compareWith",
				"title": "比较引用...",
				"category": "GitLens",
				"icon": "$(compare-changes)"
			},
			{
				"command": "gitlens.compareWorkingWith",
				"title": "将工作区与...比较",
				"category": "GitLens",
				"icon": "$(compare-changes)"
			},
			{
				"command": "gitlens.computingFileAnnotations",
				"title": "正在计算文件注释...",
				"icon": "$(gitlens-gitlens-filled)"
			},
			{
				"command": "gitlens.connectRemoteProvider",
				"title": "连接远程集成",
				"category": "GitLens",
				"icon": "$(plug)"
			},
			{
				"command": "gitlens.copyCurrentBranch",
				"title": "复制当前分支名称",
				"category": "GitLens",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyDeepLinkToBranch",
				"title": "复制分支链接",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyDeepLinkToCommit",
				"title": "复制提交链接",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyDeepLinkToComparison",
				"title": "复制比较链接",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyDeepLinkToFile",
				"title": "复制文件链接",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyDeepLinkToFileAtRevision",
				"title": "复制修订文件链接...",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyDeepLinkToLines",
				"title": "复制代码链接",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyDeepLinkToRepo",
				"title": "复制仓库链接",
				"category": "GitLens",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyDeepLinkToTag",
				"title": "复制标签链接",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyDeepLinkToWorkspace",
				"title": "复制工作区链接",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyMessageToClipboard",
				"title": "复制消息",
				"category": "GitLens",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyPatchToClipboard",
				"title": "复制更改（补丁）",
				"category": "GitLens"
			},
			{
				"command": "gitlens.copyRelativePathToClipboard",
				"title": "复制相对路径",
				"category": "GitLens",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyRemoteBranchesUrl",
				"title": "复制远程分支 URL",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyRemoteBranchUrl",
				"title": "复制远程分支 URL",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyRemoteCommitUrl",
				"title": "复制远程提交 URL",
				"category": "GitLens",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyRemoteComparisonUrl",
				"title": "复制远程比较 URL",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyRemoteFileUrlFrom",
				"title": "从...复制远程文件 URL",
				"category": "GitLens",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyRemoteFileUrlToClipboard",
				"title": "复制远程文件 URL",
				"category": "GitLens",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyRemoteFileUrlWithoutRange",
				"title": "复制远程文件 URL",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyRemotePullRequestUrl",
				"title": "复制拉取请求 URL",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyRemoteRepositoryUrl",
				"title": "复制远程仓库 URL",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyShaToClipboard",
				"title": "复制 SHA",
				"category": "GitLens",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.copyWorkingChangesToWorktree",
				"title": "复制工作区更改到工作树...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.createCloudPatch",
				"title": "创建补丁...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.createPatch",
				"title": "创建补丁...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.createPullRequestOnRemote",
				"title": "在远程创建拉取请求",
				"category": "GitLens",
				"icon": "$(git-pull-request-create)"
			},
			{
				"command": "gitlens.diffDirectory",
				"title": "用...打开目录比较（difftool）",
				"category": "GitLens"
			},
			{
				"command": "gitlens.diffDirectoryWithHead",
				"title": "打开目录比较（difftool）",
				"category": "GitLens"
			},
			{
				"command": "gitlens.diffFolderWithRevision",
				"title": "用修订版打开文件夹更改...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.diffFolderWithRevisionFrom",
				"title": "用分支或标签打开文件夹更改...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.diffLineWithPrevious",
				"title": "用上一个修订版打开行更改",
				"category": "GitLens"
			},
			{
				"command": "gitlens.diffLineWithWorking",
				"title": "用工作文件打开行更改",
				"category": "GitLens"
			},
			{
				"command": "gitlens.diffWithNext",
				"title": "用下一个修订版打开更改",
				"category": "GitLens",
				"icon": "$(gitlens-next-commit)",
				"enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
			},
			{
				"command": "gitlens.diffWithNextInDiffLeft",
				"title": "用下一个修订版打开更改",
				"category": "GitLens",
				"icon": "$(gitlens-next-commit)",
				"enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
			},
			{
				"command": "gitlens.diffWithNextInDiffRight",
				"title": "用下一个修订版打开更改",
				"category": "GitLens",
				"icon": "$(gitlens-next-commit)",
				"enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
			},
			{
				"command": "gitlens.diffWithPrevious",
				"title": "用上一个修订版打开更改",
				"category": "GitLens",
				"icon": "$(gitlens-prev-commit)"
			},
			{
				"command": "gitlens.diffWithPreviousInDiffLeft",
				"title": "用上一个修订版打开更改",
				"category": "GitLens",
				"icon": "$(gitlens-prev-commit)"
			},
			{
				"command": "gitlens.diffWithPreviousInDiffRight",
				"title": "用上一个修订版打开更改",
				"category": "GitLens",
				"icon": "$(gitlens-prev-commit)"
			},
			{
				"command": "gitlens.diffWithRevision",
				"title": "用修订版打开更改...",
				"category": "GitLens",
				"icon": "$(gitlens-prev-commit-menu)"
			},
			{
				"command": "gitlens.diffWithRevisionFrom",
				"title": "用分支或标签打开更改...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.diffWithWorking",
				"title": "用工作文件打开更改",
				"category": "GitLens",
				"icon": "$(gitlens-compare-ref-working)"
			},
			{
				"command": "gitlens.diffWithWorkingInDiffLeft",
				"title": "用工作文件打开更改",
				"icon": "$(gitlens-compare-ref-working)"
			},
			{
				"command": "gitlens.diffWithWorkingInDiffRight",
				"title": "用工作文件打开更改",
				"icon": "$(gitlens-compare-ref-working)"
			},
			{
				"command": "gitlens.disableDebugLogging",
				"title": "禁用调试日志",
				"category": "GitLens"
			},
			{
				"command": "gitlens.disableRebaseEditor",
				"title": "禁用交互式变基编辑器",
				"category": "GitLens"
			},
			{
				"command": "gitlens.disconnectRemoteProvider",
				"title": "断开远程集成",
				"category": "GitLens",
				"icon": "$(gitlens-unplug)"
			},
			{
				"command": "gitlens.enableDebugLogging",
				"title": "启用调试日志",
				"category": "GitLens"
			},
			{
				"command": "gitlens.enableRebaseEditor",
				"title": "启用交互式变基编辑器",
				"category": "GitLens"
			},
			{
				"command": "gitlens.externalDiff",
				"title": "打开更改（difftool）",
				"category": "GitLens"
			},
			{
				"command": "gitlens.externalDiffAll",
				"title": "打开所有更改（difftool）",
				"category": "GitLens"
			},
			{
				"command": "gitlens.fetchRepositories",
				"title": "获取",
				"category": "GitLens",
				"icon": "$(repo-fetch)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.getStarted",
				"title": "快速上手",
				"category": "GitLens"
			},
			{
				"command": "gitlens.ghpr.views.openOrCreateWorktree",
				"title": "在工作树中检出拉取请求（GitLens）...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.gitCommands",
				"title": "Git 命令面板",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.branch",
				"title": "Git 分支...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.branch.create",
				"title": "Git 创建分支...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.branch.delete",
				"title": "Git 删除分支...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.branch.prune",
				"title": "Git 清理分支...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.branch.rename",
				"title": "Git 重命名分支...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.checkout",
				"title": "Git 检出...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.cherryPick",
				"title": "Git 拣选提交...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.history",
				"title": "Git 历史（log）...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.merge",
				"title": "Git 合并...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.rebase",
				"title": "Git 变基...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.remote",
				"title": "Git 远程...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.remote.add",
				"title": "Git 添加远程...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.remote.prune",
				"title": "Git 清理远程...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.remote.remove",
				"title": "Git 移除远程...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.reset",
				"title": "Git 重置...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.revert",
				"title": "Git 还原...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.show",
				"title": "Git Show...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.stash",
				"title": "Git 贮藏...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.stash.drop",
				"title": "Git 丢弃贮藏...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.stash.list",
				"title": "Git 贮藏列表...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.stash.pop",
				"title": "Git 弹出贮藏...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.stash.push",
				"title": "Git 推送贮藏...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.stash.rename",
				"title": "Git 重命名贮藏...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.status",
				"title": "Git 状态...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.switch",
				"title": "Git 切换到...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.tag",
				"title": "Git 标签...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.tag.create",
				"title": "Git 创建标签...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.tag.delete",
				"title": "Git 删除标签...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.worktree",
				"title": "Git 工作树...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.worktree.create",
				"title": "Git 创建工作树...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.worktree.delete",
				"title": "Git 删除工作树...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gitCommands.worktree.open",
				"title": "Git 打开工作树...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.gk.switchOrganization",
				"title": "切换组织...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.graph.addAuthor",
				"title": "添加为协作者",
				"icon": "$(person-add)"
			},
			{
				"command": "gitlens.graph.ai.generateChangelogFrom",
				"title": "生成变更日志（预览）...",
				"icon": "$(sparkle)"
			},
			{
				"command": "gitlens.graph.ai.generateCommitMessage",
				"title": "生成提交消息"
			},
			{
				"command": "gitlens.graph.associateIssueWithBranch",
				"title": "将议题关联到分支...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.cherryPick",
				"title": "拣选提交...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.cherryPick.multi",
				"title": "拣选多个提交...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.columnAuthorOff",
				"title": "隐藏作者列",
				"enablement": "webviewItemValue =~ /\\bcolumns:canHide\\b/"
			},
			{
				"command": "gitlens.graph.columnAuthorOn",
				"title": "显示作者列"
			},
			{
				"command": "gitlens.graph.columnChangesOff",
				"title": "隐藏更改列",
				"enablement": "webviewItemValue =~ /\\bcolumns:canHide\\b/"
			},
			{
				"command": "gitlens.graph.columnChangesOn",
				"title": "显示更改列"
			},
			{
				"command": "gitlens.graph.columnDateTimeOff",
				"title": "隐藏日期列",
				"enablement": "webviewItemValue =~ /\\bcolumns:canHide\\b/"
			},
			{
				"command": "gitlens.graph.columnDateTimeOn",
				"title": "显示日期列"
			},
			{
				"command": "gitlens.graph.columnGraphCompact",
				"title": "使用紧凑图形列"
			},
			{
				"command": "gitlens.graph.columnGraphDefault",
				"title": "使用展开图形列"
			},
			{
				"command": "gitlens.graph.columnGraphOff",
				"title": "隐藏图形列",
				"enablement": "webviewItemValue =~ /\\bcolumns:canHide\\b/"
			},
			{
				"command": "gitlens.graph.columnGraphOn",
				"title": "显示图形列"
			},
			{
				"command": "gitlens.graph.columnMessageOff",
				"title": "隐藏提交消息列",
				"enablement": "webviewItemValue =~ /\\bcolumns:canHide\\b/"
			},
			{
				"command": "gitlens.graph.columnMessageOn",
				"title": "显示提交消息列"
			},
			{
				"command": "gitlens.graph.columnRefOff",
				"title": "隐藏分支/标签列",
				"enablement": "webviewItemValue =~ /\\bcolumns:canHide\\b/"
			},
			{
				"command": "gitlens.graph.columnRefOn",
				"title": "显示分支/标签列"
			},
			{
				"command": "gitlens.graph.columnShaOff",
				"title": "隐藏 SHA 列",
				"enablement": "webviewItemValue =~ /\\bcolumns:canHide\\b/"
			},
			{
				"command": "gitlens.graph.columnShaOn",
				"title": "显示 SHA 列"
			},
			{
				"command": "gitlens.graph.commitViaSCM",
				"title": "通过源代码管理提交..."
			},
			{
				"command": "gitlens.graph.compareAncestryWithWorking",
				"title": "将工作区与共同基准比较"
			},
			{
				"command": "gitlens.graph.compareBranchWithHead",
				"title": "与 HEAD 比较",
				"icon": "$(compare-changes)"
			},
			{
				"command": "gitlens.graph.compareSelectedCommits.multi",
				"title": "比较所选提交",
				"icon": "$(compare-changes)"
			},
			{
				"command": "gitlens.graph.compareWithHead",
				"title": "与 HEAD 比较",
				"icon": "$(compare-changes)"
			},
			{
				"command": "gitlens.graph.compareWithMergeBase",
				"title": "与共同基准比较"
			},
			{
				"command": "gitlens.graph.compareWithUpstream",
				"title": "与上游比较"
			},
			{
				"command": "gitlens.graph.compareWithWorking",
				"title": "将工作区与此处比较",
				"icon": "$(gitlens-compare-ref-working)"
			},
			{
				"command": "gitlens.graph.copy",
				"title": "复制",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.graph.copyDeepLinkToBranch",
				"title": "复制分支链接",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.graph.copyDeepLinkToCommit",
				"title": "复制提交链接",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.graph.copyDeepLinkToRepo",
				"title": "复制仓库链接",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.graph.copyDeepLinkToTag",
				"title": "复制标签链接",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.graph.copyMessage",
				"title": "复制消息",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.graph.copyRemoteBranchUrl",
				"title": "复制远程分支 URL",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.graph.copyRemoteCommitUrl",
				"title": "复制远程提交 URL",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.graph.copyRemoteCommitUrl.multi",
				"title": "复制远程提交 URL",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.graph.copySha",
				"title": "复制 SHA",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.graph.copyWorkingChangesToWorktree",
				"title": "复制工作区更改到工作树..."
			},
			{
				"command": "gitlens.graph.createBranch",
				"title": "创建分支...",
				"icon": "$(add)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.createCloudPatch",
				"title": "创建补丁..."
			},
			{
				"command": "gitlens.graph.createPatch",
				"title": "创建补丁..."
			},
			{
				"command": "gitlens.graph.createPullRequest",
				"title": "创建拉取请求...",
				"icon": "$(git-pull-request-create)"
			},
			{
				"command": "gitlens.graph.createTag",
				"title": "创建标签...",
				"icon": "$(add)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.createWorktree",
				"title": "创建工作树...",
				"icon": "$(add)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.deleteBranch",
				"title": "删除分支...",
				"icon": "$(trash)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.deleteTag",
				"title": "删除标签...",
				"icon": "$(trash)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.fetch",
				"title": "获取",
				"icon": "$(repo-fetch)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.hideLocalBranch",
				"title": "隐藏本地分支"
			},
			{
				"command": "gitlens.graph.hideRefGroup",
				"title": "隐藏"
			},
			{
				"command": "gitlens.graph.hideRemote",
				"title": "隐藏远程"
			},
			{
				"command": "gitlens.graph.hideRemoteBranch",
				"title": "隐藏远程分支"
			},
			{
				"command": "gitlens.graph.hideTag",
				"title": "隐藏标签"
			},
			{
				"command": "gitlens.graph.mergeBranchInto",
				"title": "将分支合并到当前分支...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.openBranchOnRemote",
				"title": "在远程打开分支",
				"icon": "$(globe)"
			},
			{
				"command": "gitlens.graph.openChangedFileDiffs",
				"title": "打开所有更改",
				"icon": "$(diff-multiple)"
			},
			{
				"command": "gitlens.graph.openChangedFileDiffsIndividually",
				"title": "单独打开所有更改"
			},
			{
				"command": "gitlens.graph.openChangedFileDiffsWithMergeBase",
				"title": "用共同基准打开所有更改",
				"icon": "$(diff-multiple)"
			},
			{
				"command": "gitlens.graph.openChangedFileDiffsWithWorking",
				"title": "用工作区打开所有更改",
				"icon": "$(diff-multiple)"
			},
			{
				"command": "gitlens.graph.openChangedFileDiffsWithWorkingIndividually",
				"title": "单独用工作区打开所有更改"
			},
			{
				"command": "gitlens.graph.openChangedFileRevisions",
				"title": "打开修订文件"
			},
			{
				"command": "gitlens.graph.openChangedFiles",
				"title": "打开文件"
			},
			{
				"command": "gitlens.graph.openCommitOnRemote",
				"title": "在远程打开提交",
				"icon": "$(globe)"
			},
			{
				"command": "gitlens.graph.openCommitOnRemote.multi",
				"title": "在远程打开多个提交",
				"icon": "$(globe)"
			},
			{
				"command": "gitlens.graph.openInWorktree",
				"title": "在工作树中打开",
				"icon": "$(window)"
			},
			{
				"command": "gitlens.graph.openOnlyChangedFiles",
				"title": "打开更改并关闭未更改文件"
			},
			{
				"command": "gitlens.graph.openPullRequest",
				"title": "打开拉取请求",
				"icon": "$(git-pull-request)"
			},
			{
				"command": "gitlens.graph.openPullRequestChanges",
				"title": "打开拉取请求更改",
				"icon": "$(diff-multiple)"
			},
			{
				"command": "gitlens.graph.openPullRequestComparison",
				"title": "比较拉取请求",
				"icon": "$(compare-changes)"
			},
			{
				"command": "gitlens.graph.openPullRequestOnRemote",
				"title": "在远程打开拉取请求",
				"icon": "$(globe)"
			},
			{
				"command": "gitlens.graph.openWorktree",
				"title": "打开工作树",
				"icon": "$(window)"
			},
			{
				"command": "gitlens.graph.openWorktreeInNewWindow",
				"title": "在新窗口中打开工作树",
				"icon": "$(empty-window)"
			},
			{
				"command": "gitlens.graph.publishBranch",
				"title": "发布分支",
				"icon": "$(cloud-upload)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.pull",
				"title": "拉取",
				"icon": "$(repo-pull)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.push",
				"title": "推送",
				"icon": "$(repo-push)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.pushWithForce",
				"title": "强制推送",
				"icon": "$(repo-force-push)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.rebaseOntoBranch",
				"title": "将当前分支变基到分支...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.rebaseOntoCommit",
				"title": "将当前分支变基到提交...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.rebaseOntoUpstream",
				"title": "将当前分支变基到上游...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.graph.renameBranch",
				"title": "重命名分支...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.resetColumnsCompact",
				"title": "重置为紧凑布局"
			},
			{
				"command": "gitlens.graph.resetColumnsDefault",
				"title": "重置为默认布局"
			},
			{
				"command": "gitlens.graph.resetCommit",
				"title": "将当前分支重置到上一个提交...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.resetToCommit",
				"title": "将当前分支重置到提交...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.resetToTag",
				"title": "将当前分支重置到标签...",
				"icon": "$(gitlens-reset)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.resetToTip",
				"title": "将当前分支重置到最新提交...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.revert",
				"title": "还原提交...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.scrollMarkerLocalBranchOff",
				"title": "隐藏本地分支标记"
			},
			{
				"command": "gitlens.graph.scrollMarkerLocalBranchOn",
				"title": "显示本地分支标记"
			},
			{
				"command": "gitlens.graph.scrollMarkerPullRequestOff",
				"title": "隐藏拉取请求标记"
			},
			{
				"command": "gitlens.graph.scrollMarkerPullRequestOn",
				"title": "显示拉取请求标记"
			},
			{
				"command": "gitlens.graph.scrollMarkerRemoteBranchOff",
				"title": "隐藏远程分支标记"
			},
			{
				"command": "gitlens.graph.scrollMarkerRemoteBranchOn",
				"title": "显示远程分支标记"
			},
			{
				"command": "gitlens.graph.scrollMarkerStashOff",
				"title": "隐藏贮藏标记"
			},
			{
				"command": "gitlens.graph.scrollMarkerStashOn",
				"title": "显示贮藏标记"
			},
			{
				"command": "gitlens.graph.scrollMarkerTagOff",
				"title": "隐藏标签标记"
			},
			{
				"command": "gitlens.graph.scrollMarkerTagOn",
				"title": "显示标签标记"
			},
			{
				"command": "gitlens.graph.shareAsCloudPatch",
				"title": "作为云补丁分享..."
			},
			{
				"command": "gitlens.graph.showInDetailsView",
				"title": "查看详情",
				"icon": "$(eye)"
			},
			{
				"command": "gitlens.graph.split",
				"title": "分屏提交图",
				"category": "GitLens",
				"icon": "$(split-horizontal)"
			},
			{
				"command": "gitlens.graph.stash.apply",
				"title": "应用贮藏...",
				"icon": "$(gitlens-stash-pop)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.stash.delete",
				"title": "丢弃贮藏...",
				"icon": "$(trash)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.stash.rename",
				"title": "重命名贮藏...",
				"icon": "$(edit)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.stash.save",
				"title": "贮藏所有更改...",
				"icon": "$(gitlens-stash-save)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.switchToAnotherBranch",
				"title": "切换到其他分支...",
				"icon": "$(gitlens-switch)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.switchToBranch",
				"title": "切换到分支...",
				"icon": "$(gitlens-switch)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.switchToCommit",
				"title": "切换到提交...",
				"icon": "$(gitlens-switch)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.switchToEditorLayout",
				"title": "优先在编辑器中显示提交图",
				"category": "GitLens",
				"enablement": "config.gitlens.graph.layout != editor"
			},
			{
				"command": "gitlens.graph.switchToPanelLayout",
				"title": "优先在面板中显示提交图",
				"category": "GitLens",
				"enablement": "config.gitlens.graph.layout != panel"
			},
			{
				"command": "gitlens.graph.switchToTag",
				"title": "切换到标签...",
				"icon": "$(gitlens-switch)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.graph.undoCommit",
				"title": "撤销提交",
				"icon": "$(discard)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.inviteToLiveShare",
				"title": "邀请协作（Live Share）",
				"icon": "$(live-share)"
			},
			{
				"command": "gitlens.launchpad.indicator.toggle",
				"title": "切换启动板指示器",
				"category": "GitLens",
				"icon": "$(rocket)"
			},
			{
				"command": "gitlens.openAssociatedPullRequestOnRemote",
				"title": "打开关联的拉取请求",
				"category": "GitLens",
				"icon": "$(git-pull-request)"
			},
			{
				"command": "gitlens.openBlamePriorToChange",
				"title": "打开更改前的责任归属",
				"category": "GitLens",
				"icon": "$(versions)"
			},
			{
				"command": "gitlens.openBranchesOnRemote",
				"title": "在远程打开分支",
				"category": "GitLens",
				"icon": "$(globe)"
			},
			{
				"command": "gitlens.openBranchOnRemote",
				"title": "在远程打开分支",
				"category": "GitLens",
				"icon": "$(globe)"
			},
			{
				"command": "gitlens.openChangedFiles",
				"title": "打开已更改文件",
				"category": "GitLens"
			},
			{
				"command": "gitlens.openCloudPatch",
				"title": "打开云补丁..."
			},
			{
				"command": "gitlens.openCommitOnRemote",
				"title": "在远程打开提交",
				"category": "GitLens",
				"icon": "$(globe)"
			},
			{
				"command": "gitlens.openComparisonOnRemote",
				"title": "在远程打开比较",
				"icon": "$(globe)"
			},
			{
				"command": "gitlens.openCurrentBranchOnRemote",
				"title": "在远程打开当前分支",
				"category": "GitLens",
				"icon": "$(globe)"
			},
			{
				"command": "gitlens.openFileFromRemote",
				"title": "从远程打开文件",
				"category": "GitLens"
			},
			{
				"command": "gitlens.openFileHistory",
				"title": "打开文件历史",
				"category": "GitLens"
			},
			{
				"command": "gitlens.openFileOnRemote",
				"title": "在远程打开文件",
				"category": "GitLens",
				"icon": "$(globe)"
			},
			{
				"command": "gitlens.openFileOnRemoteFrom",
				"title": "从...在远程打开文件",
				"category": "GitLens",
				"icon": "$(globe)"
			},
			{
				"command": "gitlens.openFileRevision",
				"title": "打开修订文件...",
				"category": "GitLens",
				"icon": "$(gitlens-open-revision)"
			},
			{
				"command": "gitlens.openFileRevisionFrom",
				"title": "从...打开修订文件",
				"category": "GitLens",
				"icon": "$(gitlens-open-revision)"
			},
			{
				"command": "gitlens.openFolderHistory",
				"title": "打开文件夹历史"
			},
			{
				"command": "gitlens.openOnlyChangedFiles",
				"title": "打开更改并关闭未更改文件",
				"category": "GitLens"
			},
			{
				"command": "gitlens.openPatch",
				"title": "打开补丁...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.openPullRequestOnRemote",
				"title": "在远程打开拉取请求",
				"icon": "$(globe)"
			},
			{
				"command": "gitlens.openRepoOnRemote",
				"title": "在远程打开仓库",
				"category": "GitLens",
				"icon": "$(globe)"
			},
			{
				"command": "gitlens.openRevisionFile",
				"title": "打开修订文件",
				"category": "GitLens",
				"icon": "$(gitlens-open-revision)",
				"enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"
			},
			{
				"command": "gitlens.openRevisionFileInDiffLeft",
				"title": "打开修订文件",
				"icon": "$(gitlens-open-revision)",
				"enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"
			},
			{
				"command": "gitlens.openRevisionFileInDiffRight",
				"title": "打开修订文件",
				"icon": "$(gitlens-open-revision)",
				"enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/ "
			},
			{
				"command": "gitlens.openWorkingFile",
				"title": "打开文件",
				"category": "GitLens",
				"icon": "$(go-to-file)"
			},
			{
				"command": "gitlens.openWorkingFileInDiffLeft",
				"title": "打开文件",
				"icon": "$(go-to-file)"
			},
			{
				"command": "gitlens.openWorkingFileInDiffRight",
				"title": "打开文件",
				"icon": "$(go-to-file)"
			},
			{
				"command": "gitlens.pastePatchFromClipboard",
				"title": "粘贴已复制的更改（补丁）",
				"category": "GitLens"
			},
			{
				"command": "gitlens.plus.cloudIntegrations.connect",
				"title": "连接集成..."
			},
			{
				"command": "gitlens.plus.cloudIntegrations.manage",
				"title": "管理集成...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.plus.hide",
				"title": "隐藏 Pro 功能",
				"category": "GitLens"
			},
			{
				"command": "gitlens.plus.login",
				"title": "登录 GitKraken...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.plus.logout",
				"title": "退出 GitKraken",
				"category": "GitLens"
			},
			{
				"command": "gitlens.plus.manage",
				"title": "管理您的账户...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.plus.reactivateProTrial",
				"title": "重新激活 Pro 试用",
				"category": "GitLens"
			},
			{
				"command": "gitlens.plus.referFriend",
				"title": "推荐朋友",
				"category": "GitLens"
			},
			{
				"command": "gitlens.plus.refreshRepositoryAccess",
				"title": "刷新仓库访问权限",
				"category": "GitLens"
			},
			{
				"command": "gitlens.plus.restore",
				"title": "恢复 Pro 功能",
				"category": "GitLens"
			},
			{
				"command": "gitlens.plus.signUp",
				"title": "注册 GitKraken...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.plus.simulateSubscription",
				"title": "模拟订阅（调试）",
				"category": "GitLens"
			},
			{
				"command": "gitlens.plus.startPreviewTrial",
				"title": "预览 Pro",
				"category": "GitLens"
			},
			{
				"command": "gitlens.plus.upgrade",
				"title": "升级到 Pro...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.pullRepositories",
				"title": "拉取",
				"category": "GitLens",
				"icon": "$(repo-pull)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.pushRepositories",
				"title": "推送",
				"category": "GitLens",
				"icon": "$(repo-push)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.quickOpenFileHistory",
				"title": "快速打开文件历史",
				"category": "GitLens"
			},
			{
				"command": "gitlens.reset",
				"title": "重置存储数据...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.resetAIKey",
				"title": "重置存储的 AI 密钥...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.resetViewsLayout",
				"title": "重置视图布局",
				"category": "GitLens"
			},
			{
				"command": "gitlens.revealCommitInView",
				"title": "在侧边栏中显示提交",
				"category": "GitLens"
			},
			{
				"command": "gitlens.scm.ai.generateCommitMessage",
				"title": "使用 GitLens 生成提交消息",
				"icon": "$(sparkle)"
			},
			{
				"command": "gitlens.shareAsCloudPatch",
				"title": "作为云补丁分享...",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showAccountView",
				"title": "在主页显示账户",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showBranchesView",
				"title": "显示分支视图",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showCommitDetailsView",
				"title": "显示检查视图",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showCommitInView",
				"title": "检查提交详情",
				"category": "GitLens",
				"icon": "$(eye)"
			},
			{
				"command": "gitlens.showCommitSearch",
				"title": "搜索提交",
				"category": "GitLens",
				"icon": "$(search)"
			},
			{
				"command": "gitlens.showCommitsInView",
				"title": "在选区内搜索提交",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showCommitsView",
				"title": "显示提交视图",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showContributorsView",
				"title": "显示贡献者视图",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showDraftsView",
				"title": "显示云补丁视图",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showFileHistoryView",
				"title": "显示文件历史视图",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showFileInTimeline",
				"title": "打开可视化文件历史",
				"category": "GitLens",
				"icon": "$(graph-scatter)"
			},
			{
				"command": "gitlens.showFolderInTimeline",
				"title": "打开可视化文件夹历史",
				"icon": "$(graph-scatter)"
			},
			{
				"command": "gitlens.showGraph",
				"title": "显示提交图",
				"category": "GitLens",
				"icon": "$(gitlens-graph)"
			},
			{
				"command": "gitlens.showGraphPage",
				"title": "在编辑器中显示提交图",
				"category": "GitLens",
				"icon": "$(gitlens-graph)"
			},
			{
				"command": "gitlens.showGraphView",
				"title": "显示提交图视图",
				"category": "GitLens",
				"icon": "$(gitlens-graph)"
			},
			{
				"command": "gitlens.showHomeView",
				"title": "显示主页视图",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showInCommitGraph",
				"title": "在提交图中打开",
				"icon": "$(gitlens-graph)"
			},
			{
				"command": "gitlens.showInCommitGraphView",
				"title": "在提交图中打开",
				"icon": "$(gitlens-graph)"
			},
			{
				"command": "gitlens.showInDetailsView",
				"title": "检查详情",
				"icon": "$(eye)"
			},
			{
				"command": "gitlens.showLastQuickPick",
				"title": "显示上次打开的快速选择",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showLaunchpad",
				"title": "打开启动板",
				"category": "GitLens",
				"icon": "$(rocket)"
			},
			{
				"command": "gitlens.showLaunchpadView",
				"title": "显示启动板视图",
				"category": "GitLens",
				"icon": "$(rocket)"
			},
			{
				"command": "gitlens.showLineCommitInView",
				"title": "检查行提交详情",
				"category": "GitLens",
				"icon": "$(eye)"
			},
			{
				"command": "gitlens.showLineHistoryView",
				"title": "显示行历史视图",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showPatchDetailsPage",
				"title": "显示补丁详情",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showQuickBranchHistory",
				"title": "显示分支历史",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showQuickCommitDetails",
				"title": "快速显示提交"
			},
			{
				"command": "gitlens.showQuickCommitFileDetails",
				"title": "快速显示行提交",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showQuickFileHistory",
				"title": "显示文件历史",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showQuickRepoHistory",
				"title": "显示当前分支历史",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showQuickRepoStatus",
				"title": "显示仓库状态",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showQuickRevisionDetails",
				"title": "显示修订提交",
				"category": "GitLens",
				"icon": "$(gitlens-commit-horizontal)",
				"enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"
			},
			{
				"command": "gitlens.showQuickRevisionDetailsInDiffLeft",
				"title": "显示修订提交",
				"icon": "$(gitlens-commit-horizontal)",
				"enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"
			},
			{
				"command": "gitlens.showQuickRevisionDetailsInDiffRight",
				"title": "显示修订提交",
				"icon": "$(gitlens-commit-horizontal)",
				"enablement": "gitlens:enabled && resourceScheme =~ /^(gitlens|pr)$/"
			},
			{
				"command": "gitlens.showQuickStashList",
				"title": "显示存储列表",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showRemotesView",
				"title": "显示远程视图",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showRepositoriesView",
				"title": "显示存储库视图",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showSearchAndCompareView",
				"title": "显示搜索与比较视图",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showSettingsPage",
				"title": "打开设置",
				"category": "GitLens",
				"icon": "$(gear)"
			},
			{
				"command": "gitlens.showSettingsPage!autolinks",
				"title": "配置自动链接",
				"category": "GitLens",
				"icon": "$(gear)"
			},
			{
				"command": "gitlens.showSettingsPage!branches-view",
				"title": "打开视图设置",
				"icon": "$(gear)"
			},
			{
				"command": "gitlens.showSettingsPage!commit-graph",
				"title": "打开提交图设置",
				"icon": "$(gear)"
			},
			{
				"command": "gitlens.showSettingsPage!commits-view",
				"title": "打开视图设置",
				"icon": "$(gear)"
			},
			{
				"command": "gitlens.showSettingsPage!contributors-view",
				"title": "打开视图设置",
				"icon": "$(gear)"
			},
			{
				"command": "gitlens.showSettingsPage!file-annotations",
				"title": "打开文件注释设置",
				"icon": "$(gear)"
			},
			{
				"command": "gitlens.showSettingsPage!file-history-view",
				"title": "打开视图设置",
				"icon": "$(gear)"
			},
			{
				"command": "gitlens.showSettingsPage!line-history-view",
				"title": "打开视图设置",
				"icon": "$(gear)"
			},
			{
				"command": "gitlens.showSettingsPage!remotes-view",
				"title": "打开视图设置",
				"icon": "$(gear)"
			},
			{
				"command": "gitlens.showSettingsPage!repositories-view",
				"title": "打开视图设置",
				"icon": "$(gear)"
			},
			{
				"command": "gitlens.showSettingsPage!search-compare-view",
				"title": "打开视图设置",
				"icon": "$(gear)"
			},
			{
				"command": "gitlens.showSettingsPage!stashes-view",
				"title": "打开视图设置",
				"icon": "$(gear)"
			},
			{
				"command": "gitlens.showSettingsPage!tags-view",
				"title": "打开视图设置",
				"icon": "$(gear)"
			},
			{
				"command": "gitlens.showSettingsPage!views",
				"title": "打开设置",
				"icon": "$(gear)"
			},
			{
				"command": "gitlens.showSettingsPage!worktrees-view",
				"title": "打开视图设置",
				"icon": "$(gear)"
			},
			{
				"command": "gitlens.showStashesView",
				"title": "显示存储视图",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showTagsView",
				"title": "显示标签视图",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showTimelinePage",
				"title": "显示可视化文件历史",
				"category": "GitLens",
				"icon": "$(graph-scatter)"
			},
			{
				"command": "gitlens.showTimelineView",
				"title": "显示可视化文件历史视图",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showWorkspacesView",
				"title": "显示云工作区视图",
				"category": "GitLens"
			},
			{
				"command": "gitlens.showWorktreesView",
				"title": "显示工作树视图",
				"category": "GitLens"
			},
			{
				"command": "gitlens.startWork",
				"title": "开始工作",
				"category": "GitLens",
				"icon": "$(rocket)"
			},
			{
				"command": "gitlens.stashApply",
				"title": "应用存储...",
				"category": "GitLens",
				"icon": "$(gitlens-stash-pop)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.stashSave",
				"title": "存储所有更改...",
				"category": "GitLens",
				"icon": "$(gitlens-stash-save)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.stashSaveFiles",
				"title": "存储更改...",
				"icon": "$(gitlens-stash-save)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.switchAIModel",
				"title": "切换 AI 提供商/模型",
				"category": "GitLens"
			},
			{
				"command": "gitlens.switchMode",
				"title": "切换模式",
				"category": "GitLens"
			},
			{
				"command": "gitlens.timeline.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.timeline.split",
				"title": "分屏可视化文件历史",
				"category": "GitLens",
				"icon": "$(split-horizontal)"
			},
			{
				"command": "gitlens.toggleCodeLens",
				"title": "切换 Git 代码透镜",
				"category": "GitLens"
			},
			{
				"command": "gitlens.toggleFileBlame",
				"title": "切换文件责任归属",
				"category": "GitLens",
				"icon": "$(gitlens-gitlens)"
			},
			{
				"command": "gitlens.toggleFileBlameInDiffLeft",
				"title": "切换文件责任归属",
				"icon": "$(gitlens-gitlens)"
			},
			{
				"command": "gitlens.toggleFileBlameInDiffRight",
				"title": "切换文件责任归属",
				"icon": "$(gitlens-gitlens)"
			},
			{
				"command": "gitlens.toggleFileChanges",
				"title": "切换文件更改",
				"category": "GitLens",
				"icon": "$(gitlens-gitlens)"
			},
			{
				"command": "gitlens.toggleFileChangesOnly",
				"title": "切换文件更改",
				"icon": "$(gitlens-gitlens)"
			},
			{
				"command": "gitlens.toggleFileHeatmap",
				"title": "切换文件热图",
				"category": "GitLens",
				"icon": "$(gitlens-gitlens)"
			},
			{
				"command": "gitlens.toggleFileHeatmapInDiffLeft",
				"title": "切换文件热图",
				"icon": "$(gitlens-gitlens)"
			},
			{
				"command": "gitlens.toggleFileHeatmapInDiffRight",
				"title": "切换文件热图",
				"icon": "$(gitlens-gitlens)"
			},
			{
				"command": "gitlens.toggleGraph",
				"title": "切换提交图",
				"category": "GitLens",
				"icon": "$(gitlens-graph)"
			},
			{
				"command": "gitlens.toggleLineBlame",
				"title": "切换行责任归属",
				"category": "GitLens"
			},
			{
				"command": "gitlens.toggleMaximizedGraph",
				"title": "切换最大化提交图",
				"category": "GitLens",
				"icon": "$(gitlens-graph)"
			},
			{
				"command": "gitlens.toggleReviewMode",
				"title": "切换审查模式",
				"category": "GitLens"
			},
			{
				"command": "gitlens.toggleZenMode",
				"title": "切换禅模式",
				"category": "GitLens"
			},
			{
				"command": "gitlens.views.abortPausedOperation",
				"title": "中止",
				"icon": "$(circle-slash)"
			},
			{
				"command": "gitlens.views.addAuthor",
				"title": "添加为协作者",
				"icon": "$(person-add)"
			},
			{
				"command": "gitlens.views.addAuthor.multi",
				"title": "添加为协作者",
				"icon": "$(person-add)"
			},
			{
				"command": "gitlens.views.addAuthors",
				"title": "添加协作者...",
				"icon": "$(person-add)"
			},
			{
				"command": "gitlens.views.addPullRequestRemote",
				"title": "添加拉取请求远程",
				"icon": "$(add)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.addRemote",
				"title": "添加远程...",
				"icon": "$(add)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.ai.generateChangelog",
				"title": "生成变更日志（预览）",
				"icon": "$(sparkle)"
			},
			{
				"command": "gitlens.views.ai.generateChangelogFrom",
				"title": "生成变更日志（预览）...",
				"icon": "$(sparkle)"
			},
			{
				"command": "gitlens.views.applyChanges",
				"title": "应用更改",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.associateIssueWithBranch",
				"title": "将议题关联到分支...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.branches.copy",
				"title": "复制"
			},
			{
				"command": "gitlens.views.branches.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.branches.regroup",
				"title": "与 GitLens 视图重新分组",
				"icon": "$(close)"
			},
			{
				"command": "gitlens.views.branches.setFilesLayoutToAuto",
				"title": "文件视图：自动",
				"icon": "$(list-tree)"
			},
			{
				"command": "gitlens.views.branches.setFilesLayoutToList",
				"title": "文件视图：列表",
				"icon": "$(gitlens-list-auto)"
			},
			{
				"command": "gitlens.views.branches.setFilesLayoutToTree",
				"title": "文件视图：树状",
				"icon": "$(list-flat)"
			},
			{
				"command": "gitlens.views.branches.setLayoutToList",
				"title": "列表视图",
				"icon": "$(list-tree)"
			},
			{
				"command": "gitlens.views.branches.setLayoutToTree",
				"title": "树状视图",
				"icon": "$(list-flat)"
			},
			{
				"command": "gitlens.views.branches.setShowAvatarsOff",
				"title": "隐藏头像"
			},
			{
				"command": "gitlens.views.branches.setShowAvatarsOn",
				"title": "显示头像"
			},
			{
				"command": "gitlens.views.branches.setShowBranchComparisonOff",
				"title": "隐藏分支比较"
			},
			{
				"command": "gitlens.views.branches.setShowBranchComparisonOn",
				"title": "显示分支比较"
			},
			{
				"command": "gitlens.views.branches.setShowBranchPullRequestOff",
				"title": "隐藏分支拉取请求"
			},
			{
				"command": "gitlens.views.branches.setShowBranchPullRequestOn",
				"title": "显示分支拉取请求"
			},
			{
				"command": "gitlens.views.branches.setShowRemoteBranchesOff",
				"title": "隐藏远程分支"
			},
			{
				"command": "gitlens.views.branches.setShowRemoteBranchesOn",
				"title": "显示远程分支"
			},
			{
				"command": "gitlens.views.branches.setShowStashesOff",
				"title": "隐藏存储"
			},
			{
				"command": "gitlens.views.branches.setShowStashesOn",
				"title": "显示存储"
			},
			{
				"command": "gitlens.views.branches.viewOptionsTitle",
				"title": "分支视图选项",
				"enablement": "false"
			},
			{
				"command": "gitlens.views.browseRepoAtRevision",
				"title": "从此处浏览仓库",
				"icon": "$(folder-opened)"
			},
			{
				"command": "gitlens.views.browseRepoAtRevisionInNewWindow",
				"title": "在新窗口从此处浏览仓库",
				"icon": "$(folder-opened)"
			},
			{
				"command": "gitlens.views.browseRepoBeforeRevision",
				"title": "从此处之前浏览仓库",
				"icon": "$(folder-opened)"
			},
			{
				"command": "gitlens.views.browseRepoBeforeRevisionInNewWindow",
				"title": "在新窗口从此处之前浏览仓库",
				"icon": "$(folder-opened)"
			},
			{
				"command": "gitlens.views.cherryPick",
				"title": "拣选提交...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.cherryPick.multi",
				"title": "拣选多个提交...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.clearComparison",
				"title": "清除比较",
				"icon": "$(close)"
			},
			{
				"command": "gitlens.views.clearReviewed",
				"title": "清除已审查文件"
			},
			{
				"command": "gitlens.views.closeRepository",
				"title": "关闭仓库"
			},
			{
				"command": "gitlens.views.collapseNode",
				"title": "折叠"
			},
			{
				"command": "gitlens.views.commitDetails.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.commits.copy",
				"title": "复制"
			},
			{
				"command": "gitlens.views.commits.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.commits.regroup",
				"title": "与 GitLens 视图重新分组",
				"icon": "$(close)"
			},
			{
				"command": "gitlens.views.commits.setCommitsFilterAuthors",
				"title": "按作者筛选提交...",
				"icon": "$(filter)"
			},
			{
				"command": "gitlens.views.commits.setCommitsFilterOff",
				"title": "清除筛选",
				"icon": "$(filter-filled)"
			},
			{
				"command": "gitlens.views.commits.setFilesLayoutToAuto",
				"title": "文件视图：自动",
				"icon": "$(list-tree)"
			},
			{
				"command": "gitlens.views.commits.setFilesLayoutToList",
				"title": "文件视图：列表",
				"icon": "$(gitlens-list-auto)"
			},
			{
				"command": "gitlens.views.commits.setFilesLayoutToTree",
				"title": "文件视图：树状",
				"icon": "$(list-flat)"
			},
			{
				"command": "gitlens.views.commits.setShowAvatarsOff",
				"title": "隐藏头像"
			},
			{
				"command": "gitlens.views.commits.setShowAvatarsOn",
				"title": "显示头像"
			},
			{
				"command": "gitlens.views.commits.setShowBranchComparisonOff",
				"title": "隐藏分支比较"
			},
			{
				"command": "gitlens.views.commits.setShowBranchComparisonOn",
				"title": "显示分支比较"
			},
			{
				"command": "gitlens.views.commits.setShowBranchPullRequestOff",
				"title": "隐藏当前分支拉取请求"
			},
			{
				"command": "gitlens.views.commits.setShowBranchPullRequestOn",
				"title": "显示当前分支拉取请求"
			},
			{
				"command": "gitlens.views.commits.setShowMergeCommitsOff",
				"title": "隐藏合并提交"
			},
			{
				"command": "gitlens.views.commits.setShowMergeCommitsOn",
				"title": "显示合并提交"
			},
			{
				"command": "gitlens.views.commits.setShowStashesOff",
				"title": "隐藏存储"
			},
			{
				"command": "gitlens.views.commits.setShowStashesOn",
				"title": "显示存储"
			},
			{
				"command": "gitlens.views.commits.viewOptionsTitle",
				"title": "提交视图选项",
				"enablement": "false"
			},
			{
				"command": "gitlens.views.compareAncestryWithWorking",
				"title": "将工作区与共同基准比较"
			},
			{
				"command": "gitlens.views.compareBranchWithHead",
				"title": "与 HEAD 比较",
				"icon": "$(compare-changes)"
			},
			{
				"command": "gitlens.views.compareFileWithSelected",
				"title": "与所选项比较"
			},
			{
				"command": "gitlens.views.compareWithHead",
				"title": "与 HEAD 比较",
				"icon": "$(compare-changes)"
			},
			{
				"command": "gitlens.views.compareWithMergeBase",
				"title": "与共同基准比较"
			},
			{
				"command": "gitlens.views.compareWithSelected",
				"title": "与所选项比较"
			},
			{
				"command": "gitlens.views.compareWithUpstream",
				"title": "与上游比较"
			},
			{
				"command": "gitlens.views.compareWithWorking",
				"title": "将工作区与此处比较",
				"icon": "$(gitlens-compare-ref-working)"
			},
			{
				"command": "gitlens.views.continuePausedOperation",
				"title": "继续",
				"icon": "$(debug-continue)"
			},
			{
				"command": "gitlens.views.contributors.copy",
				"title": "复制"
			},
			{
				"command": "gitlens.views.contributors.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.contributors.regroup",
				"title": "与 GitLens 视图重新分组",
				"icon": "$(close)"
			},
			{
				"command": "gitlens.views.contributors.setFilesLayoutToAuto",
				"title": "文件视图：自动",
				"icon": "$(list-tree)"
			},
			{
				"command": "gitlens.views.contributors.setFilesLayoutToList",
				"title": "文件视图：列表",
				"icon": "$(gitlens-list-auto)"
			},
			{
				"command": "gitlens.views.contributors.setFilesLayoutToTree",
				"title": "文件视图：树状",
				"icon": "$(list-flat)"
			},
			{
				"command": "gitlens.views.contributors.setShowAllBranchesOff",
				"title": "仅查看当前分支"
			},
			{
				"command": "gitlens.views.contributors.setShowAllBranchesOn",
				"title": "查看所有分支"
			},
			{
				"command": "gitlens.views.contributors.setShowAvatarsOff",
				"title": "隐藏头像"
			},
			{
				"command": "gitlens.views.contributors.setShowAvatarsOn",
				"title": "显示头像"
			},
			{
				"command": "gitlens.views.contributors.setShowMergeCommitsOff",
				"title": "隐藏合并提交"
			},
			{
				"command": "gitlens.views.contributors.setShowMergeCommitsOn",
				"title": "显示合并提交"
			},
			{
				"command": "gitlens.views.contributors.setShowStatisticsOff",
				"title": "隐藏统计"
			},
			{
				"command": "gitlens.views.contributors.setShowStatisticsOn",
				"title": "显示统计"
			},
			{
				"command": "gitlens.views.contributors.viewOptionsTitle",
				"title": "贡献者视图选项",
				"enablement": "false"
			},
			{
				"command": "gitlens.views.copy",
				"title": "复制",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.views.copyAsMarkdown",
				"title": "复制为 Markdown",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.views.copyRemoteCommitUrl",
				"title": "复制远程提交 URL",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.views.copyRemoteCommitUrl.multi",
				"title": "复制远程提交 URL",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.views.copyUrl",
				"title": "复制 URL",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.views.copyUrl.multi",
				"title": "复制 URL",
				"icon": "$(copy)"
			},
			{
				"command": "gitlens.views.createBranch",
				"title": "创建分支...",
				"icon": "$(add)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.createPullRequest",
				"title": "创建拉取请求...",
				"icon": "$(git-pull-request-create)"
			},
			{
				"command": "gitlens.views.createTag",
				"title": "创建标签...",
				"icon": "$(add)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.createWorktree",
				"title": "创建工作树...",
				"icon": "$(add)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.deleteBranch",
				"title": "删除分支...",
				"icon": "$(trash)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.deleteBranch.multi",
				"title": "删除分支...",
				"icon": "$(trash)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.deleteTag",
				"title": "删除标签...",
				"icon": "$(trash)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.deleteTag.multi",
				"title": "删除标签...",
				"icon": "$(trash)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.deleteWorktree",
				"title": "删除工作树...",
				"icon": "$(trash)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.deleteWorktree.multi",
				"title": "删除工作树...",
				"icon": "$(trash)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.dismissNode",
				"title": "忽略",
				"icon": "$(close)"
			},
			{
				"command": "gitlens.views.draft.open",
				"title": "打开",
				"icon": "$(eye)"
			},
			{
				"command": "gitlens.views.draft.openOnWeb",
				"title": "在 gitkraken.dev 上打开",
				"icon": "$(globe)"
			},
			{
				"command": "gitlens.views.drafts.copy",
				"title": "复制"
			},
			{
				"command": "gitlens.views.drafts.create",
				"title": "创建云补丁...",
				"icon": "$(add)"
			},
			{
				"command": "gitlens.views.drafts.delete",
				"title": "删除云补丁...",
				"icon": "$(trash)"
			},
			{
				"command": "gitlens.views.drafts.info",
				"title": "了解云补丁...",
				"icon": "$(info)"
			},
			{
				"command": "gitlens.views.drafts.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.drafts.setShowAvatarsOff",
				"title": "隐藏头像"
			},
			{
				"command": "gitlens.views.drafts.setShowAvatarsOn",
				"title": "显示头像"
			},
			{
				"command": "gitlens.views.editNode",
				"title": "编辑...",
				"icon": "$(edit)"
			},
			{
				"command": "gitlens.views.expandNode",
				"title": "展开"
			},
			{
				"command": "gitlens.views.fetch",
				"title": "获取",
				"icon": "$(repo-fetch)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.fileHistory.changeBase",
				"title": "更改基准...",
				"icon": "$(history)"
			},
			{
				"command": "gitlens.views.fileHistory.copy",
				"title": "复制"
			},
			{
				"command": "gitlens.views.fileHistory.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.fileHistory.setCursorFollowingOff",
				"title": "查看文件历史",
				"icon": "$(list-selection)",
				"enablement": "gitlens:views:fileHistory:editorFollowing || gitlens:views:fileHistory:cursorFollowing"
			},
			{
				"command": "gitlens.views.fileHistory.setCursorFollowingOn",
				"title": "查看行历史",
				"icon": "$(file)",
				"enablement": "gitlens:views:fileHistory:editorFollowing"
			},
			{
				"command": "gitlens.views.fileHistory.setEditorFollowingOff",
				"title": "固定当前历史",
				"icon": "$(pin)"
			},
			{
				"command": "gitlens.views.fileHistory.setEditorFollowingOn",
				"title": "取消固定当前历史",
				"icon": "$(pinned)"
			},
			{
				"command": "gitlens.views.fileHistory.setRenameFollowingOff",
				"title": "不跟随重命名"
			},
			{
				"command": "gitlens.views.fileHistory.setRenameFollowingOn",
				"title": "跟随重命名"
			},
			{
				"command": "gitlens.views.fileHistory.setShowAllBranchesOff",
				"title": "仅查看当前分支历史"
			},
			{
				"command": "gitlens.views.fileHistory.setShowAllBranchesOn",
				"title": "查看所有分支历史"
			},
			{
				"command": "gitlens.views.fileHistory.setShowAvatarsOff",
				"title": "隐藏头像"
			},
			{
				"command": "gitlens.views.fileHistory.setShowAvatarsOn",
				"title": "显示头像"
			},
			{
				"command": "gitlens.views.fileHistory.setShowMergeCommitsOff",
				"title": "隐藏合并提交"
			},
			{
				"command": "gitlens.views.fileHistory.setShowMergeCommitsOn",
				"title": "显示合并提交"
			},
			{
				"command": "gitlens.views.graph.openInTab",
				"title": "在编辑器中打开",
				"icon": "$(link-external)"
			},
			{
				"command": "gitlens.views.graph.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.graphDetails.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.highlightChanges",
				"title": "高亮显示自此提交以来的所有更改"
			},
			{
				"command": "gitlens.views.highlightRevisionChanges",
				"title": "高亮显示此提交的更改"
			},
			{
				"command": "gitlens.views.home.disablePreview",
				"title": "恢复旧主页视图",
				"icon": "$(discard)"
			},
			{
				"command": "gitlens.views.home.discussions",
				"title": "GitHub 讨论",
				"icon": "$(comment-discussion)"
			},
			{
				"command": "gitlens.views.home.enablePreview",
				"title": "切换到新主页视图",
				"icon": "$(redo)"
			},
			{
				"command": "gitlens.views.home.help",
				"title": "帮助中心",
				"icon": "$(question)"
			},
			{
				"command": "gitlens.views.home.info",
				"title": "了解主页视图",
				"icon": "$(question)"
			},
			{
				"command": "gitlens.views.home.issues",
				"title": "GitHub 问题",
				"icon": "$(feedback)"
			},
			{
				"command": "gitlens.views.home.previewFeedback",
				"title": "新主页视图反馈",
				"icon": "$(feedback)"
			},
			{
				"command": "gitlens.views.home.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.home.whatsNew",
				"title": "新功能（发行说明）",
				"icon": "$(megaphone)"
			},
			{
				"command": "gitlens.views.launchpad.copy",
				"title": "复制"
			},
			{
				"command": "gitlens.views.launchpad.info",
				"title": "了解启动板...",
				"icon": "$(info)"
			},
			{
				"command": "gitlens.views.launchpad.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.launchpad.regroup",
				"title": "与 GitLens 视图重新分组",
				"icon": "$(close)"
			},
			{
				"command": "gitlens.views.launchpad.setFilesLayoutToAuto",
				"title": "文件视图：自动",
				"icon": "$(list-tree)"
			},
			{
				"command": "gitlens.views.launchpad.setFilesLayoutToList",
				"title": "文件视图：列表",
				"icon": "$(gitlens-list-auto)"
			},
			{
				"command": "gitlens.views.launchpad.setFilesLayoutToTree",
				"title": "文件视图：树状",
				"icon": "$(list-flat)"
			},
			{
				"command": "gitlens.views.launchpad.setShowAvatarsOff",
				"title": "隐藏头像"
			},
			{
				"command": "gitlens.views.launchpad.setShowAvatarsOn",
				"title": "显示头像"
			},
			{
				"command": "gitlens.views.launchpad.viewOptionsTitle",
				"title": "启动板视图选项",
				"enablement": "false"
			},
			{
				"command": "gitlens.views.lineHistory.changeBase",
				"title": "更改基准...",
				"icon": "$(history)"
			},
			{
				"command": "gitlens.views.lineHistory.copy",
				"title": "复制"
			},
			{
				"command": "gitlens.views.lineHistory.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.lineHistory.setEditorFollowingOff",
				"title": "固定当前历史",
				"icon": "$(pin)"
			},
			{
				"command": "gitlens.views.lineHistory.setEditorFollowingOn",
				"title": "取消固定当前历史",
				"icon": "$(pinned)"
			},
			{
				"command": "gitlens.views.lineHistory.setShowAvatarsOff",
				"title": "隐藏头像"
			},
			{
				"command": "gitlens.views.lineHistory.setShowAvatarsOn",
				"title": "显示头像"
			},
			{
				"command": "gitlens.views.loadAllChildren",
				"title": "加载全部",
				"icon": "$(gitlens-expand)"
			},
			{
				"command": "gitlens.views.loadMoreChildren",
				"title": "加载更多"
			},
			{
				"command": "gitlens.views.mergeBranchInto",
				"title": "将分支合并到当前分支...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.mergeChangesWithWorking",
				"title": "合并更改（手动）..."
			},
			{
				"command": "gitlens.views.openBranchOnRemote",
				"title": "在远程打开分支",
				"icon": "$(globe)"
			},
			{
				"command": "gitlens.views.openBranchOnRemote.multi",
				"title": "在远程打开分支",
				"icon": "$(globe)"
			},
			{
				"command": "gitlens.views.openChangedFileDiffs",
				"title": "打开所有更改",
				"icon": "$(diff-multiple)"
			},
			{
				"command": "gitlens.views.openChangedFileDiffsIndividually",
				"title": "单独打开所有更改"
			},
			{
				"command": "gitlens.views.openChangedFileDiffsWithMergeBase",
				"title": "用共同基准打开所有更改",
				"icon": "$(diff-multiple)"
			},
			{
				"command": "gitlens.views.openChangedFileDiffsWithWorking",
				"title": "用工作区打开所有更改",
				"icon": "$(diff-multiple)"
			},
			{
				"command": "gitlens.views.openChangedFileDiffsWithWorkingIndividually",
				"title": "单独用工作区打开所有更改"
			},
			{
				"command": "gitlens.views.openChangedFileRevisions",
				"title": "打开修订文件"
			},
			{
				"command": "gitlens.views.openChangedFiles",
				"title": "打开文件"
			},
			{
				"command": "gitlens.views.openChanges",
				"title": "打开更改",
				"icon": "$(compare-changes)"
			},
			{
				"command": "gitlens.views.openChangesWithMergeBase",
				"title": "用共同基准打开更改"
			},
			{
				"command": "gitlens.views.openChangesWithWorking",
				"title": "用工作文件打开更改",
				"icon": "$(gitlens-compare-ref-working)"
			},
			{
				"command": "gitlens.views.openCommitOnRemote",
				"title": "在远程打开提交",
				"icon": "$(globe)"
			},
			{
				"command": "gitlens.views.openCommitOnRemote.multi",
				"title": "在远程打开多个提交",
				"icon": "$(globe)"
			},
			{
				"command": "gitlens.views.openDirectoryDiff",
				"title": "打开目录比较"
			},
			{
				"command": "gitlens.views.openDirectoryDiffWithWorking",
				"title": "目录比较工作区与此处"
			},
			{
				"command": "gitlens.views.openFile",
				"title": "打开文件",
				"icon": "$(go-to-file)"
			},
			{
				"command": "gitlens.views.openFileRevision",
				"title": "打开修订文件",
				"icon": "$(gitlens-open-revision)"
			},
			{
				"command": "gitlens.views.openInIntegratedTerminal",
				"title": "在集成终端中打开"
			},
			{
				"command": "gitlens.views.openInTerminal",
				"title": "在终端中打开"
			},
			{
				"command": "gitlens.views.openInWorktree",
				"title": "在工作树中打开",
				"icon": "$(empty-window)"
			},
			{
				"command": "gitlens.views.openOnlyChangedFiles",
				"title": "打开更改并关闭未更改文件"
			},
			{
				"command": "gitlens.views.openPausedOperationInRebaseEditor",
				"title": "在变基编辑器中打开",
				"icon": "$(edit)"
			},
			{
				"command": "gitlens.views.openPreviousChangesWithWorking",
				"title": "用工作文件打开上一个更改"
			},
			{
				"command": "gitlens.views.openPullRequest",
				"title": "打开拉取请求",
				"icon": "$(git-pull-request)"
			},
			{
				"command": "gitlens.views.openPullRequestChanges",
				"title": "打开拉取请求更改",
				"icon": "$(diff-multiple)"
			},
			{
				"command": "gitlens.views.openPullRequestComparison",
				"title": "比较拉取请求",
				"icon": "$(compare-changes)"
			},
			{
				"command": "gitlens.views.openUrl",
				"title": "打开 URL",
				"icon": "$(globe)"
			},
			{
				"command": "gitlens.views.openUrl.multi",
				"title": "打开 URL",
				"icon": "$(globe)"
			},
			{
				"command": "gitlens.views.openWorktree",
				"title": "打开工作树",
				"icon": "$(window)"
			},
			{
				"command": "gitlens.views.openWorktreeInNewWindow",
				"title": "在新窗口打开工作树",
				"icon": "$(empty-window)"
			},
			{
				"command": "gitlens.views.openWorktreeInNewWindow.multi",
				"title": "在新窗口打开工作树",
				"icon": "$(empty-window)"
			},
			{
				"command": "gitlens.views.patchDetails.close",
				"title": "关闭补丁",
				"icon": "$(close)"
			},
			{
				"command": "gitlens.views.patchDetails.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.pruneRemote",
				"title": "清理远程",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.publishBranch",
				"title": "发布分支",
				"icon": "$(cloud-upload)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.publishRepository",
				"title": "发布仓库",
				"icon": "$(cloud-upload)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.pull",
				"title": "拉取",
				"icon": "$(repo-pull)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.pullRequest.close",
				"title": "关闭",
				"icon": "$(close)"
			},
			{
				"command": "gitlens.views.pullRequest.copy",
				"title": "复制"
			},
			{
				"command": "gitlens.views.pullRequest.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.pullRequest.setFilesLayoutToAuto",
				"title": "文件视图：自动",
				"icon": "$(list-tree)"
			},
			{
				"command": "gitlens.views.pullRequest.setFilesLayoutToList",
				"title": "文件视图：列表",
				"icon": "$(gitlens-list-auto)"
			},
			{
				"command": "gitlens.views.pullRequest.setFilesLayoutToTree",
				"title": "文件视图：树状",
				"icon": "$(list-flat)"
			},
			{
				"command": "gitlens.views.pullRequest.setShowAvatarsOff",
				"title": "隐藏头像"
			},
			{
				"command": "gitlens.views.pullRequest.setShowAvatarsOn",
				"title": "显示头像"
			},
			{
				"command": "gitlens.views.push",
				"title": "推送",
				"icon": "$(repo-push)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.pushToCommit",
				"title": "推送到提交...",
				"icon": "$(repo-push)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.pushWithForce",
				"title": "强制推送",
				"icon": "$(repo-force-push)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.rebaseOntoBranch",
				"title": "将当前分支变基到分支...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.rebaseOntoCommit",
				"title": "将当前分支变基到提交...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.rebaseOntoUpstream",
				"title": "将当前分支变基到上游...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.refreshNode",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.remotes.copy",
				"title": "复制"
			},
			{
				"command": "gitlens.views.remotes.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.remotes.regroup",
				"title": "与 GitLens 视图重新分组",
				"icon": "$(close)"
			},
			{
				"command": "gitlens.views.remotes.setFilesLayoutToAuto",
				"title": "文件视图：自动",
				"icon": "$(list-tree)"
			},
			{
				"command": "gitlens.views.remotes.setFilesLayoutToList",
				"title": "文件视图：列表",
				"icon": "$(gitlens-list-auto)"
			},
			{
				"command": "gitlens.views.remotes.setFilesLayoutToTree",
				"title": "文件视图：树状",
				"icon": "$(list-flat)"
			},
			{
				"command": "gitlens.views.remotes.setLayoutToList",
				"title": "列表视图",
				"icon": "$(list-tree)"
			},
			{
				"command": "gitlens.views.remotes.setLayoutToTree",
				"title": "树状视图",
				"icon": "$(list-flat)"
			},
			{
				"command": "gitlens.views.remotes.setShowAvatarsOff",
				"title": "隐藏头像"
			},
			{
				"command": "gitlens.views.remotes.setShowAvatarsOn",
				"title": "显示头像"
			},
			{
				"command": "gitlens.views.remotes.setShowBranchPullRequestOff",
				"title": "隐藏分支拉取请求"
			},
			{
				"command": "gitlens.views.remotes.setShowBranchPullRequestOn",
				"title": "显示分支拉取请求"
			},
			{
				"command": "gitlens.views.remotes.viewOptionsTitle",
				"title": "远程视图选项",
				"enablement": "false"
			},
			{
				"command": "gitlens.views.removeRemote",
				"title": "移除远程...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.renameBranch",
				"title": "重命名分支...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.repositories.copy",
				"title": "复制"
			},
			{
				"command": "gitlens.views.repositories.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.repositories.regroup",
				"title": "与 GitLens 视图重新分组",
				"icon": "$(close)"
			},
			{
				"command": "gitlens.views.repositories.setAutoRefreshToOff",
				"title": "禁用自动刷新"
			},
			{
				"command": "gitlens.views.repositories.setAutoRefreshToOn",
				"title": "启用自动刷新"
			},
			{
				"command": "gitlens.views.repositories.setBranchesLayoutToList",
				"title": "分支视图：列表",
				"icon": "$(list-tree)"
			},
			{
				"command": "gitlens.views.repositories.setBranchesLayoutToTree",
				"title": "分支视图：树状",
				"icon": "$(list-flat)"
			},
			{
				"command": "gitlens.views.repositories.setBranchesShowBranchComparisonOff",
				"title": "隐藏分支比较"
			},
			{
				"command": "gitlens.views.repositories.setBranchesShowBranchComparisonOn",
				"title": "显示分支比较"
			},
			{
				"command": "gitlens.views.repositories.setFilesLayoutToAuto",
				"title": "文件视图：自动",
				"icon": "$(list-tree)"
			},
			{
				"command": "gitlens.views.repositories.setFilesLayoutToList",
				"title": "文件视图：列表",
				"icon": "$(gitlens-list-auto)"
			},
			{
				"command": "gitlens.views.repositories.setFilesLayoutToTree",
				"title": "文件视图：树状",
				"icon": "$(list-flat)"
			},
			{
				"command": "gitlens.views.repositories.setShowAvatarsOff",
				"title": "隐藏头像"
			},
			{
				"command": "gitlens.views.repositories.setShowAvatarsOn",
				"title": "显示头像"
			},
			{
				"command": "gitlens.views.repositories.setShowBranchComparisonOff",
				"title": "隐藏分支比较"
			},
			{
				"command": "gitlens.views.repositories.setShowBranchComparisonOn",
				"title": "显示分支比较"
			},
			{
				"command": "gitlens.views.repositories.setShowBranchesOff",
				"title": "隐藏分支"
			},
			{
				"command": "gitlens.views.repositories.setShowBranchesOn",
				"title": "显示分支"
			},
			{
				"command": "gitlens.views.repositories.setShowCommitsOff",
				"title": "隐藏提交"
			},
			{
				"command": "gitlens.views.repositories.setShowCommitsOn",
				"title": "显示提交"
			},
			{
				"command": "gitlens.views.repositories.setShowContributorsOff",
				"title": "隐藏贡献者"
			},
			{
				"command": "gitlens.views.repositories.setShowContributorsOn",
				"title": "显示贡献者"
			},
			{
				"command": "gitlens.views.repositories.setShowRemotesOff",
				"title": "隐藏远程"
			},
			{
				"command": "gitlens.views.repositories.setShowRemotesOn",
				"title": "显示远程"
			},
			{
				"command": "gitlens.views.repositories.setShowSectionOff",
				"title": "隐藏"
			},
			{
				"command": "gitlens.views.repositories.setShowStashesOff",
				"title": "隐藏存储"
			},
			{
				"command": "gitlens.views.repositories.setShowStashesOn",
				"title": "显示存储"
			},
			{
				"command": "gitlens.views.repositories.setShowTagsOff",
				"title": "隐藏标签"
			},
			{
				"command": "gitlens.views.repositories.setShowTagsOn",
				"title": "显示标签"
			},
			{
				"command": "gitlens.views.repositories.setShowUpstreamStatusOff",
				"title": "隐藏当前分支状态"
			},
			{
				"command": "gitlens.views.repositories.setShowUpstreamStatusOn",
				"title": "显示当前分支状态"
			},
			{
				"command": "gitlens.views.repositories.setShowWorktreesOff",
				"title": "隐藏工作树"
			},
			{
				"command": "gitlens.views.repositories.setShowWorktreesOn",
				"title": "显示工作树"
			},
			{
				"command": "gitlens.views.repositories.viewOptionsTitle",
				"title": "仓库视图选项",
				"enablement": "false"
			},
			{
				"command": "gitlens.views.resetCommit",
				"title": "将当前分支重置到上一个提交...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.resetToCommit",
				"title": "将当前分支重置到提交...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.resetToTip",
				"title": "将当前分支重置到最新提交...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.restore",
				"title": "恢复（检出）",
				"icon": "$(gitlens-switch)"
			},
			{
				"command": "gitlens.views.revealRepositoryInExplorer",
				"title": "在文件资源管理器中显示"
			},
			{
				"command": "gitlens.views.revealWorktreeInExplorer",
				"title": "在文件资源管理器中显示"
			},
			{
				"command": "gitlens.views.revert",
				"title": "还原提交...",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.scm.grouped.branches",
				"title": "分支",
				"icon": "$(gitlens-branches-view)",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.branches.detach",
				"title": "分离分支视图",
				"icon": "$(gitlens-branches-view)"
			},
			{
				"command": "gitlens.views.scm.grouped.branches.regroup",
				"title": "重新分组分支视图",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.branches.setAsDefault",
				"title": "设为默认视图"
			},
			{
				"command": "gitlens.views.scm.grouped.branches.visibility.hide",
				"title": "隐藏分支视图"
			},
			{
				"command": "gitlens.views.scm.grouped.branches.visibility.show",
				"title": "显示分支视图"
			},
			{
				"command": "gitlens.views.scm.grouped.commits",
				"title": "提交",
				"icon": "$(gitlens-commits-view)",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.commits.detach",
				"title": "分离提交视图",
				"icon": "$(gitlens-commits-view)"
			},
			{
				"command": "gitlens.views.scm.grouped.commits.regroup",
				"title": "重新分组提交视图",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.commits.setAsDefault",
				"title": "设为默认视图"
			},
			{
				"command": "gitlens.views.scm.grouped.commits.visibility.hide",
				"title": "隐藏提交视图"
			},
			{
				"command": "gitlens.views.scm.grouped.commits.visibility.show",
				"title": "显示提交视图"
			},
			{
				"command": "gitlens.views.scm.grouped.contributors",
				"title": "贡献者",
				"icon": "$(gitlens-contributors-view)",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.contributors.detach",
				"title": "分离贡献者视图",
				"icon": "$(gitlens-contributors-view)"
			},
			{
				"command": "gitlens.views.scm.grouped.contributors.regroup",
				"title": "重新分组贡献者视图",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.contributors.setAsDefault",
				"title": "设为默认视图"
			},
			{
				"command": "gitlens.views.scm.grouped.contributors.visibility.hide",
				"title": "隐藏贡献者视图"
			},
			{
				"command": "gitlens.views.scm.grouped.contributors.visibility.show",
				"title": "显示贡献者视图"
			},
			{
				"command": "gitlens.views.scm.grouped.detachAll",
				"title": "分离所有视图",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.launchpad",
				"title": "启动板",
				"icon": "$(gitlens-launchpad-view)",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.launchpad.detach",
				"title": "分离启动板视图",
				"icon": "$(gitlens-launchpad-view)"
			},
			{
				"command": "gitlens.views.scm.grouped.launchpad.regroup",
				"title": "重新分组启动板视图",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.launchpad.setAsDefault",
				"title": "设为默认视图"
			},
			{
				"command": "gitlens.views.scm.grouped.launchpad.visibility.hide",
				"title": "隐藏启动板视图"
			},
			{
				"command": "gitlens.views.scm.grouped.launchpad.visibility.show",
				"title": "显示启动板视图"
			},
			{
				"command": "gitlens.views.scm.grouped.refresh",
				"title": "刷新",
				"icon": "$(refresh)",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.regroupAll",
				"title": "重新分组所有视图",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.remotes",
				"title": "远程",
				"icon": "$(gitlens-remotes-view)",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.remotes.detach",
				"title": "分离远程视图",
				"icon": "$(gitlens-remotes-view)"
			},
			{
				"command": "gitlens.views.scm.grouped.remotes.regroup",
				"title": "重新分组远程视图",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.remotes.setAsDefault",
				"title": "设为默认视图"
			},
			{
				"command": "gitlens.views.scm.grouped.remotes.visibility.hide",
				"title": "隐藏远程视图"
			},
			{
				"command": "gitlens.views.scm.grouped.remotes.visibility.show",
				"title": "显示远程视图"
			},
			{
				"command": "gitlens.views.scm.grouped.repositories",
				"title": "仓库",
				"icon": "$(gitlens-repositories-view)",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.repositories.detach",
				"title": "分离仓库视图",
				"icon": "$(gitlens-repositories-view)"
			},
			{
				"command": "gitlens.views.scm.grouped.repositories.regroup",
				"title": "重新分组仓库视图",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.repositories.setAsDefault",
				"title": "设为默认视图"
			},
			{
				"command": "gitlens.views.scm.grouped.repositories.visibility.hide",
				"title": "隐藏仓库视图"
			},
			{
				"command": "gitlens.views.scm.grouped.repositories.visibility.show",
				"title": "显示仓库视图"
			},
			{
				"command": "gitlens.views.scm.grouped.searchAndCompare",
				"title": "搜索与比较",
				"icon": "$(gitlens-search-view)",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.searchAndCompare.detach",
				"title": "分离搜索与比较视图",
				"icon": "$(gitlens-search-view)"
			},
			{
				"command": "gitlens.views.scm.grouped.searchAndCompare.regroup",
				"title": "重新分组搜索与比较视图",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.searchAndCompare.setAsDefault",
				"title": "设为默认视图"
			},
			{
				"command": "gitlens.views.scm.grouped.searchAndCompare.visibility.hide",
				"title": "隐藏搜索与比较视图"
			},
			{
				"command": "gitlens.views.scm.grouped.searchAndCompare.visibility.show",
				"title": "显示搜索与比较视图"
			},
			{
				"command": "gitlens.views.scm.grouped.stashes",
				"title": "存储",
				"icon": "$(gitlens-stashes-view)",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.stashes.detach",
				"title": "分离存储视图",
				"icon": "$(gitlens-stashes-view)"
			},
			{
				"command": "gitlens.views.scm.grouped.stashes.regroup",
				"title": "重新分组存储视图",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.stashes.setAsDefault",
				"title": "设为默认视图"
			},
			{
				"command": "gitlens.views.scm.grouped.stashes.visibility.hide",
				"title": "隐藏存储视图"
			},
			{
				"command": "gitlens.views.scm.grouped.stashes.visibility.show",
				"title": "显示存储视图"
			},
			{
				"command": "gitlens.views.scm.grouped.tags",
				"title": "标签",
				"icon": "$(gitlens-tags-view)",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.tags.detach",
				"title": "分离标签视图",
				"icon": "$(gitlens-tags-view)"
			},
			{
				"command": "gitlens.views.scm.grouped.tags.regroup",
				"title": "重新分组标签视图",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.tags.setAsDefault",
				"title": "设为默认视图"
			},
			{
				"command": "gitlens.views.scm.grouped.tags.visibility.hide",
				"title": "隐藏标签视图"
			},
			{
				"command": "gitlens.views.scm.grouped.tags.visibility.show",
				"title": "显示标签视图"
			},
			{
				"command": "gitlens.views.scm.grouped.worktrees",
				"title": "工作树",
				"icon": "$(gitlens-worktrees-view)",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.worktrees.detach",
				"title": "分离工作树视图",
				"icon": "$(gitlens-worktrees-view)"
			},
			{
				"command": "gitlens.views.scm.grouped.worktrees.regroup",
				"title": "重新分组工作树视图",
				"enablement": "!gitlens:views:scm:grouped:welcome"
			},
			{
				"command": "gitlens.views.scm.grouped.worktrees.setAsDefault",
				"title": "设为默认视图"
			},
			{
				"command": "gitlens.views.scm.grouped.worktrees.visibility.hide",
				"title": "隐藏工作树视图"
			},
			{
				"command": "gitlens.views.scm.grouped.worktrees.visibility.show",
				"title": "显示工作树视图"
			},
			{
				"command": "gitlens.views.searchAndCompare.clear",
				"title": "清除结果",
				"icon": "$(clear-all)"
			},
			{
				"command": "gitlens.views.searchAndCompare.copy",
				"title": "复制"
			},
			{
				"command": "gitlens.views.searchAndCompare.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.searchAndCompare.regroup",
				"title": "与 GitLens 视图重新分组",
				"icon": "$(close)"
			},
			{
				"command": "gitlens.views.searchAndCompare.searchCommits",
				"title": "搜索提交...",
				"icon": "$(search)"
			},
			{
				"command": "gitlens.views.searchAndCompare.selectForCompare",
				"title": "比较引用...",
				"icon": "$(compare-changes)"
			},
			{
				"command": "gitlens.views.searchAndCompare.setFilesLayoutToAuto",
				"title": "文件视图：自动",
				"icon": "$(list-tree)"
			},
			{
				"command": "gitlens.views.searchAndCompare.setFilesLayoutToList",
				"title": "文件视图：列表",
				"icon": "$(gitlens-list-auto)"
			},
			{
				"command": "gitlens.views.searchAndCompare.setFilesLayoutToTree",
				"title": "文件视图：树状",
				"icon": "$(list-flat)"
			},
			{
				"command": "gitlens.views.searchAndCompare.setShowAvatarsOff",
				"title": "隐藏头像"
			},
			{
				"command": "gitlens.views.searchAndCompare.setShowAvatarsOn",
				"title": "显示头像"
			},
			{
				"command": "gitlens.views.searchAndCompare.swapComparison",
				"title": "交换比较",
				"icon": "$(arrow-swap)",
				"enablement": "viewItem =~ /gitlens:compare:results(?!:)\\b(?!.*?\\b\\+working\\b)/"
			},
			{
				"command": "gitlens.views.searchAndCompare.viewOptionsTitle",
				"title": "搜索与比较视图选项",
				"enablement": "false"
			},
			{
				"command": "gitlens.views.selectFileForCompare",
				"title": "选择用于比较"
			},
			{
				"command": "gitlens.views.selectForCompare",
				"title": "选择用于比较"
			},
			{
				"command": "gitlens.views.setAsDefault",
				"title": "设为默认"
			},
			{
				"command": "gitlens.views.setBranchComparisonToBranch",
				"title": "与分支（HEAD）比较",
				"icon": "$(compare-changes)"
			},
			{
				"command": "gitlens.views.setBranchComparisonToWorking",
				"title": "与工作区比较",
				"icon": "$(compare-changes)"
			},
			{
				"command": "gitlens.views.setContributorsStatisticsOff",
				"title": "隐藏贡献者统计",
				"icon": "$(graph-line)"
			},
			{
				"command": "gitlens.views.setContributorsStatisticsOn",
				"title": "显示贡献者统计",
				"icon": "$(graph-line)"
			},
			{
				"command": "gitlens.views.setResultsCommitsFilterAuthors",
				"title": "按作者筛选提交...",
				"icon": "$(filter)"
			},
			{
				"command": "gitlens.views.setResultsCommitsFilterOff",
				"title": "清除筛选",
				"icon": "$(filter-filled)"
			},
			{
				"command": "gitlens.views.setResultsFilesFilterOff",
				"title": "清除筛选"
			},
			{
				"command": "gitlens.views.setResultsFilesFilterOnLeft",
				"title": "仅显示左侧文件",
				"enablement": "viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~left\\b)/"
			},
			{
				"command": "gitlens.views.setResultsFilesFilterOnRight",
				"title": "仅显示右侧文件",
				"enablement": "viewItem =~ /gitlens:results:files\\b(?!.*?\\b\\+filtered~right\\b)/"
			},
			{
				"command": "gitlens.views.setShowRelativeDateMarkersOff",
				"title": "隐藏日期标记"
			},
			{
				"command": "gitlens.views.setShowRelativeDateMarkersOn",
				"title": "显示日期标记"
			},
			{
				"command": "gitlens.views.skipPausedOperation",
				"title": "跳过",
				"icon": "$(debug-step-over)"
			},
			{
				"command": "gitlens.views.stageDirectory",
				"title": "暂存所有更改",
				"icon": "$(add)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.stageFile",
				"title": "暂存更改",
				"icon": "$(add)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.star",
				"title": "添加到收藏",
				"icon": "$(star-empty)"
			},
			{
				"command": "gitlens.views.star.multi",
				"title": "添加到收藏",
				"icon": "$(star-empty)"
			},
			{
				"command": "gitlens.views.stash.apply",
				"title": "应用存储...",
				"icon": "$(gitlens-stash-pop)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.stash.delete",
				"title": "丢弃存储...",
				"icon": "$(trash)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.stash.delete.multi",
				"title": "丢弃多个存储...",
				"icon": "$(trash)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.stash.rename",
				"title": "重命名存储...",
				"icon": "$(edit)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.stashes.copy",
				"title": "复制"
			},
			{
				"command": "gitlens.views.stashes.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.stashes.regroup",
				"title": "与 GitLens 视图重新分组",
				"icon": "$(close)"
			},
			{
				"command": "gitlens.views.stashes.setFilesLayoutToAuto",
				"title": "文件视图：自动",
				"icon": "$(list-tree)"
			},
			{
				"command": "gitlens.views.stashes.setFilesLayoutToList",
				"title": "文件视图：列表",
				"icon": "$(gitlens-list-auto)"
			},
			{
				"command": "gitlens.views.stashes.setFilesLayoutToTree",
				"title": "文件视图：树状",
				"icon": "$(list-flat)"
			},
			{
				"command": "gitlens.views.stashes.viewOptionsTitle",
				"title": "存储视图选项",
				"enablement": "false"
			},
			{
				"command": "gitlens.views.switchToAnotherBranch",
				"title": "切换到其他分支...",
				"icon": "$(gitlens-switch)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.switchToBranch",
				"title": "切换到分支...",
				"icon": "$(gitlens-switch)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.switchToCommit",
				"title": "检出提交...",
				"icon": "$(gitlens-switch)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.switchToTag",
				"title": "检出标签...",
				"icon": "$(gitlens-switch)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.tags.copy",
				"title": "复制"
			},
			{
				"command": "gitlens.views.tags.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.tags.regroup",
				"title": "与 GitLens 视图重新分组",
				"icon": "$(close)"
			},
			{
				"command": "gitlens.views.tags.setFilesLayoutToAuto",
				"title": "文件视图：自动",
				"icon": "$(list-tree)"
			},
			{
				"command": "gitlens.views.tags.setFilesLayoutToList",
				"title": "文件视图：列表",
				"icon": "$(gitlens-list-auto)"
			},
			{
				"command": "gitlens.views.tags.setFilesLayoutToTree",
				"title": "文件视图：树状",
				"icon": "$(list-flat)"
			},
			{
				"command": "gitlens.views.tags.setLayoutToList",
				"title": "列表视图",
				"icon": "$(list-tree)"
			},
			{
				"command": "gitlens.views.tags.setLayoutToTree",
				"title": "树状视图",
				"icon": "$(list-flat)"
			},
			{
				"command": "gitlens.views.tags.setShowAvatarsOff",
				"title": "隐藏头像"
			},
			{
				"command": "gitlens.views.tags.setShowAvatarsOn",
				"title": "显示头像"
			},
			{
				"command": "gitlens.views.tags.viewOptionsTitle",
				"title": "标签视图选项",
				"enablement": "false"
			},
			{
				"command": "gitlens.views.timeline.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.title.createBranch",
				"title": "创建分支...",
				"icon": "$(add)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.title.createTag",
				"title": "创建标签...",
				"icon": "$(add)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.title.createWorktree",
				"title": "创建工作树...",
				"icon": "$(add)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.undoCommit",
				"title": "撤销提交",
				"icon": "$(discard)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.unsetAsDefault",
				"title": "取消设为默认"
			},
			{
				"command": "gitlens.views.unstageDirectory",
				"title": "取消暂存所有更改",
				"icon": "$(remove)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.unstageFile",
				"title": "取消暂存更改",
				"icon": "$(remove)",
				"enablement": "!operationInProgress"
			},
			{
				"command": "gitlens.views.unstar",
				"title": "从收藏移除",
				"icon": "$(star-full)"
			},
			{
				"command": "gitlens.views.unstar.multi",
				"title": "从收藏移除",
				"icon": "$(star-full)"
			},
			{
				"command": "gitlens.views.workspaces.addRepos",
				"title": "添加仓库...",
				"icon": "$(add)"
			},
			{
				"command": "gitlens.views.workspaces.addReposFromLinked",
				"title": "从已关联工作区添加仓库..."
			},
			{
				"command": "gitlens.views.workspaces.changeAutoAddSetting",
				"title": "更改关联工作区自动添加行为..."
			},
			{
				"command": "gitlens.views.workspaces.convert",
				"title": "转换为云工作区...",
				"icon": "$(cloud-upload)"
			},
			{
				"command": "gitlens.views.workspaces.copy",
				"title": "复制"
			},
			{
				"command": "gitlens.views.workspaces.create",
				"title": "创建云工作区...",
				"category": "GitLens",
				"icon": "$(add)"
			},
			{
				"command": "gitlens.views.workspaces.createLocal",
				"title": "创建 VS Code 工作区...",
				"icon": "$(empty-window)"
			},
			{
				"command": "gitlens.views.workspaces.delete",
				"title": "删除工作区...",
				"icon": "$(trash)"
			},
			{
				"command": "gitlens.views.workspaces.info",
				"title": "了解云工作区...",
				"icon": "$(info)"
			},
			{
				"command": "gitlens.views.workspaces.locateAllRepos",
				"title": "定位仓库...",
				"icon": "$(location)"
			},
			{
				"command": "gitlens.views.workspaces.openLocal",
				"title": "在当前窗口打开 VS Code 工作区...",
				"icon": "$(window)"
			},
			{
				"command": "gitlens.views.workspaces.openLocalNewWindow",
				"title": "在新窗口打开 VS Code 工作区...",
				"icon": "$(window)"
			},
			{
				"command": "gitlens.views.workspaces.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.workspaces.repo.addToWindow",
				"title": "将仓库添加到 VS Code 工作区"
			},
			{
				"command": "gitlens.views.workspaces.repo.locate",
				"title": "定位仓库...",
				"icon": "$(location)"
			},
			{
				"command": "gitlens.views.workspaces.repo.open",
				"title": "打开仓库",
				"icon": "$(window)"
			},
			{
				"command": "gitlens.views.workspaces.repo.openInNewWindow",
				"title": "在新窗口打开仓库",
				"icon": "$(empty-window)"
			},
			{
				"command": "gitlens.views.workspaces.repo.remove",
				"title": "从工作区移除...",
				"icon": "$(trash)"
			},
			{
				"command": "gitlens.views.worktrees.copy",
				"title": "复制"
			},
			{
				"command": "gitlens.views.worktrees.refresh",
				"title": "刷新",
				"icon": "$(refresh)"
			},
			{
				"command": "gitlens.views.worktrees.regroup",
				"title": "与 GitLens 视图重新分组",
				"icon": "$(close)"
			},
			{
				"command": "gitlens.views.worktrees.setFilesLayoutToAuto",
				"title": "文件视图：自动",
				"icon": "$(list-tree)"
			},
			{
				"command": "gitlens.views.worktrees.setFilesLayoutToList",
				"title": "文件视图：列表",
				"icon": "$(gitlens-list-auto)"
			},
			{
				"command": "gitlens.views.worktrees.setFilesLayoutToTree",
				"title": "文件视图：树状",
				"icon": "$(list-flat)"
			},
			{
				"command": "gitlens.views.worktrees.setLayoutToList",
				"title": "列表视图",
				"icon": "$(list-tree)"
			},
			{
				"command": "gitlens.views.worktrees.setLayoutToTree",
				"title": "树状视图",
				"icon": "$(list-flat)"
			},
			{
				"command": "gitlens.views.worktrees.setShowAvatarsOff",
				"title": "隐藏头像"
			},
			{
				"command": "gitlens.views.worktrees.setShowAvatarsOn",
				"title": "显示头像"
			},
			{
				"command": "gitlens.views.worktrees.setShowBranchComparisonOff",
				"title": "隐藏分支比较"
			},
			{
				"command": "gitlens.views.worktrees.setShowBranchComparisonOn",
				"title": "显示分支比较"
			},
			{
				"command": "gitlens.views.worktrees.setShowBranchPullRequestOff",
				"title": "隐藏分支拉取请求"
			},
			{
				"command": "gitlens.views.worktrees.setShowBranchPullRequestOn",
				"title": "显示分支拉取请求"
			},
			{
				"command": "gitlens.views.worktrees.setShowStashesOff",
				"title": "隐藏存储"
			},
			{
				"command": "gitlens.views.worktrees.setShowStashesOn",
				"title": "显示存储"
			},
			{
				"command": "gitlens.views.worktrees.viewOptionsTitle",
				"title": "工作树视图选项",
				"enablement": "false"
			}
		],
		"icons": {
			"gitlens-commit-horizontal": {
				"description": "提交-水平 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f101"
				}
			},
			"gitlens-graph": {
				"description": "图形 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f102"
				}
			},
			"gitlens-next-commit": {
				"description": "下一个提交 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f103"
				}
			},
			"gitlens-prev-commit-menu": {
				"description": "上一个提交菜单 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f104"
				}
			},
			"gitlens-prev-commit": {
				"description": "上一个提交 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f105"
				}
			},
			"gitlens-compare-ref-working": {
				"description": "比较-引用-工作区 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f106"
				}
			},
			"gitlens-branches-view": {
				"description": "分支视图 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f107"
				}
			},
			"gitlens-commit-view": {
				"description": "提交视图 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f108"
				}
			},
			"gitlens-commits-view": {
				"description": "提交列表视图 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f109"
				}
			},
			"gitlens-compare-view": {
				"description": "比较视图 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f10a"
				}
			},
			"gitlens-contributors-view": {
				"description": "贡献者视图 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f10b"
				}
			},
			"gitlens-history-view": {
				"description": "历史视图 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f10c"
				}
			},
			"gitlens-history": {
				"description": "历史 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f10c"
				}
			},
			"gitlens-remotes-view": {
				"description": "远程视图 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f10d"
				}
			},
			"gitlens-repositories-view": {
				"description": "仓库视图 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f10e"
				}
			},
			"gitlens-search-view": {
				"description": "搜索视图 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f10f"
				}
			},
			"gitlens-stashes-view": {
				"description": "存储视图 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f110"
				}
			},
			"gitlens-stashes": {
				"description": "存储 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f110"
				}
			},
			"gitlens-tags-view": {
				"description": "标签视图 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f111"
				}
			},
			"gitlens-worktrees-view": {
				"description": "工作树视图 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f112"
				}
			},
			"gitlens-gitlens": {
				"description": "GitLens 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f113"
				}
			},
			"gitlens-stash-pop": {
				"description": "弹出存储 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f114"
				}
			},
			"gitlens-stash-save": {
				"description": "保存存储 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f115"
				}
			},
			"gitlens-unplug": {
				"description": "断开连接 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f116"
				}
			},
			"gitlens-open-revision": {
				"description": "打开修订 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f117"
				}
			},
			"gitlens-switch": {
				"description": "切换 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f118"
				}
			},
			"gitlens-expand": {
				"description": "展开 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f119"
				}
			},
			"gitlens-list-auto": {
				"description": "自动列表 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f11a"
				}
			},
			"gitlens-pinned-filled": {
				"description": "已固定-填充 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f11c"
				}
			},
			"gitlens-clock": {
				"description": "时钟 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f11d"
				}
			},
			"gitlens-provider-azdo": {
				"description": "Azure DevOps 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f11e"
				}
			},
			"gitlens-provider-bitbucket": {
				"description": "Bitbucket 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f11f"
				}
			},
			"gitlens-provider-gerrit": {
				"description": "Gerrit 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f120"
				}
			},
			"gitlens-provider-gitea": {
				"description": "Gitea 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f121"
				}
			},
			"gitlens-provider-github": {
				"description": "GitHub 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f122"
				}
			},
			"gitlens-provider-gitlab": {
				"description": "GitLab 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f123"
				}
			},
			"gitlens-gitlens-inspect": {
				"description": "GitLens 检查 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f124"
				}
			},
			"gitlens-workspaces-view": {
				"description": "工作区视图 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f125"
				}
			},
			"gitlens-confirm-checked": {
				"description": "确认-选中 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f126"
				}
			},
			"gitlens-confirm-unchecked": {
				"description": "确认-未选中 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f127"
				}
			},
			"gitlens-cloud-patch": {
				"description": "云补丁 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f128"
				}
			},
			"gitlens-cloud-patch-share": {
				"description": "云补丁分享 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f129"
				}
			},
			"gitlens-inspect": {
				"description": "检查 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f12a"
				}
			},
			"gitlens-repository-filled": {
				"description": "仓库-填充 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f12b"
				}
			},
			"gitlens-gitlens-filled": {
				"description": "GitLens-填充 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f12c"
				}
			},
			"gitlens-code-suggestion": {
				"description": "代码建议 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f12d"
				}
			},
			"gitlens-provider-jira": {
				"description": "Jira 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f133"
				}
			},
			"gitlens-play-button": {
				"description": "播放按钮 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f134"
				}
			},
			"gitlens-rocket-filled": {
				"description": "火箭-填充 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f135"
				}
			},
			"gitlens-branches-view-filled": {
				"description": "分支视图-填充 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f136"
				}
			},
			"gitlens-commits-view-filled": {
				"description": "提交列表视图-填充 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f137"
				}
			},
			"gitlens-contributors-view-filled": {
				"description": "贡献者视图-填充 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f138"
				}
			},
			"gitlens-remotes-view-filled": {
				"description": "远程视图-填充 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f139"
				}
			},
			"gitlens-repositories-view-filled": {
				"description": "仓库视图-填充 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f13a"
				}
			},
			"gitlens-search-view-filled": {
				"description": "搜索视图-填充 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f13b"
				}
			},
			"gitlens-stashes-view-filled": {
				"description": "存储视图-填充 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f13c"
				}
			},
			"gitlens-tags-view-filled": {
				"description": "标签视图-填充 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f13d"
				}
			},
			"gitlens-worktrees-view-filled": {
				"description": "工作树视图-填充 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f13e"
				}
			},
			"gitlens-launchpad-view": {
				"description": "启动板视图 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f13f"
				}
			},
			"gitlens-launchpad-view-filled": {
				"description": "启动板视图-填充 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f140"
				}
			},
			"gitlens-merge-target": {
				"description": "合并目标 图标",
				"default": {
					"fontPath": "dist/glicons.woff2",
					"fontCharacter": "\\f141"
				}
			}
		},
		"menus": {
			"commandPalette": [
				{
					"command": "gitlens.addAuthors",
					"when": "gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.ai.generateChangelog",
					"when": "gitlens:enabled && !gitlens:untrusted && gitlens:gk:organization:ai:enabled"
				},
				{
					"command": "gitlens.ai.generateCommitMessage",
					"when": "gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && gitlens:gk:organization:ai:enabled && config.gitlens.ai.generateCommitMessage.enabled"
				},
				{
					"command": "gitlens.annotations.nextChange",
					"when": "false"
				},
				{
					"command": "gitlens.annotations.previousChange",
					"when": "false"
				},
				{
					"command": "gitlens.applyPatchFromClipboard",
					"when": "gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.associateIssueWithBranch",
					"when": "gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.browseRepoAtRevision",
					"when": "!gitlens:hasVirtualFolders && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
				},
				{
					"command": "gitlens.browseRepoAtRevisionInNewWindow",
					"when": "!gitlens:hasVirtualFolders && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
				},
				{
					"command": "gitlens.browseRepoBeforeRevision",
					"when": "!gitlens:hasVirtualFolders && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
				},
				{
					"command": "gitlens.browseRepoBeforeRevisionInNewWindow",
					"when": "!gitlens:hasVirtualFolders && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
				},
				{
					"command": "gitlens.clearFileAnnotations",
					"when": "resource in gitlens:tabs:blameable && (gitlens:window:annotated || resource in gitlens:tabs:annotated)"
				},
				{
					"command": "gitlens.closeUnchangedFiles",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.compareHeadWith",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.compareWith",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.compareWorkingWith",
					"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.computingFileAnnotations",
					"when": "false"
				},
				{
					"command": "gitlens.connectRemoteProvider",
					"when": "config.gitlens.integrations.enabled && gitlens:repos:withHostingIntegrations && !gitlens:repos:withHostingIntegrationsConnected"
				},
				{
					"command": "gitlens.copyCurrentBranch",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.copyDeepLinkToBranch",
					"when": "false"
				},
				{
					"command": "gitlens.copyDeepLinkToCommit",
					"when": "false"
				},
				{
					"command": "gitlens.copyDeepLinkToComparison",
					"when": "false"
				},
				{
					"command": "gitlens.copyDeepLinkToFile",
					"when": "false"
				},
				{
					"command": "gitlens.copyDeepLinkToFileAtRevision",
					"when": "false"
				},
				{
					"command": "gitlens.copyDeepLinkToLines",
					"when": "false"
				},
				{
					"command": "gitlens.copyDeepLinkToRepo",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.copyDeepLinkToTag",
					"when": "false"
				},
				{
					"command": "gitlens.copyDeepLinkToWorkspace",
					"when": "false"
				},
				{
					"command": "gitlens.copyMessageToClipboard",
					"when": "resource in gitlens:tabs:blameable"
				},
				{
					"command": "gitlens.copyPatchToClipboard",
					"when": "gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.copyRelativePathToClipboard",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.copyRemoteBranchesUrl",
					"when": "false"
				},
				{
					"command": "gitlens.copyRemoteBranchUrl",
					"when": "false"
				},
				{
					"command": "gitlens.copyRemoteCommitUrl",
					"when": "gitlens:repos:withRemotes"
				},
				{
					"command": "gitlens.copyRemoteComparisonUrl",
					"when": "false"
				},
				{
					"command": "gitlens.copyRemoteFileUrlFrom",
					"when": "gitlens:repos:withRemotes"
				},
				{
					"command": "gitlens.copyRemoteFileUrlToClipboard",
					"when": "gitlens:repos:withRemotes"
				},
				{
					"command": "gitlens.copyRemoteFileUrlWithoutRange",
					"when": "false"
				},
				{
					"command": "gitlens.copyRemotePullRequestUrl",
					"when": "false"
				},
				{
					"command": "gitlens.copyRemoteRepositoryUrl",
					"when": "false"
				},
				{
					"command": "gitlens.copyShaToClipboard",
					"when": "resource in gitlens:tabs:blameable"
				},
				{
					"command": "gitlens.copyWorkingChangesToWorktree",
					"when": "gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.createCloudPatch",
					"when": "gitlens:enabled && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled"
				},
				{
					"command": "gitlens.createPatch",
					"when": "false && gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.createPullRequestOnRemote",
					"when": "gitlens:repos:withRemotes"
				},
				{
					"command": "gitlens.diffDirectory",
					"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.diffDirectoryWithHead",
					"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.diffFolderWithRevision",
					"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.diffFolderWithRevisionFrom",
					"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.diffLineWithPrevious",
					"when": "resource in gitlens:tabs:blameable"
				},
				{
					"command": "gitlens.diffLineWithWorking",
					"when": "resource in gitlens:tabs:blameable"
				},
				{
					"command": "gitlens.diffWithNext",
					"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && !isInDiffEditor"
				},
				{
					"command": "gitlens.diffWithNextInDiffLeft",
					"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor && !isInDiffRightEditor"
				},
				{
					"command": "gitlens.diffWithNextInDiffRight",
					"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffRightEditor"
				},
				{
					"command": "gitlens.diffWithPrevious",
					"when": "resource in gitlens:tabs:tracked && !isInDiffEditor"
				},
				{
					"command": "gitlens.diffWithPreviousInDiffLeft",
					"when": "resource in gitlens:tabs:tracked && isInDiffEditor && !isInDiffRightEditor"
				},
				{
					"command": "gitlens.diffWithPreviousInDiffRight",
					"when": "resource in gitlens:tabs:tracked && isInDiffRightEditor"
				},
				{
					"command": "gitlens.diffWithRevision",
					"when": "resource in gitlens:tabs:tracked"
				},
				{
					"command": "gitlens.diffWithRevisionFrom",
					"when": "resource in gitlens:tabs:tracked"
				},
				{
					"command": "gitlens.diffWithWorking",
					"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
				},
				{
					"command": "gitlens.diffWithWorkingInDiffLeft",
					"when": "false"
				},
				{
					"command": "gitlens.diffWithWorkingInDiffRight",
					"when": "false"
				},
				{
					"command": "gitlens.disableDebugLogging",
					"when": "config.gitlens.outputLevel == debug"
				},
				{
					"command": "gitlens.disableRebaseEditor",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.disconnectRemoteProvider",
					"when": "config.gitlens.integrations.enabled && gitlens:repos:withHostingIntegrationsConnected"
				},
				{
					"command": "gitlens.enableDebugLogging",
					"when": "config.gitlens.outputLevel != debug"
				},
				{
					"command": "gitlens.enableRebaseEditor",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.externalDiff",
					"when": "!gitlens:hasVirtualFolders && resource in gitlens:tabs:tracked"
				},
				{
					"command": "gitlens.externalDiffAll",
					"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.fetchRepositories",
					"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.ghpr.views.openOrCreateWorktree",
					"when": "false"
				},
				{
					"command": "gitlens.gitCommands",
					"when": "!gitlens:disabled"
				},
				{
					"command": "gitlens.gitCommands.branch",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.branch.create",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.branch.delete",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.branch.prune",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.branch.rename",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.checkout",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.cherryPick",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.history",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.merge",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.rebase",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.remote",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.remote.add",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.remote.prune",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.remote.remove",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.reset",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.revert",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.show",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.stash",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.stash.drop",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.stash.list",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.stash.pop",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.stash.push",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.stash.rename",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.status",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.switch",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.tag",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.tag.create",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.tag.delete",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.worktree",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.worktree.create",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.worktree.delete",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gitCommands.worktree.open",
					"when": "!gitlens:disabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.gk.switchOrganization",
					"when": "gitlens:gk:hasOrganizations"
				},
				{
					"command": "gitlens.graph.addAuthor",
					"when": "false"
				},
				{
					"command": "gitlens.graph.ai.generateChangelogFrom",
					"when": "false"
				},
				{
					"command": "gitlens.graph.ai.generateCommitMessage",
					"when": "false"
				},
				{
					"command": "gitlens.graph.associateIssueWithBranch",
					"when": "false"
				},
				{
					"command": "gitlens.graph.cherryPick",
					"when": "false"
				},
				{
					"command": "gitlens.graph.cherryPick.multi",
					"when": "false"
				},
				{
					"command": "gitlens.graph.columnAuthorOff",
					"when": "false"
				},
				{
					"command": "gitlens.graph.columnAuthorOn",
					"when": "false"
				},
				{
					"command": "gitlens.graph.columnChangesOff",
					"when": "false"
				},
				{
					"command": "gitlens.graph.columnChangesOn",
					"when": "false"
				},
				{
					"command": "gitlens.graph.columnDateTimeOff",
					"when": "false"
				},
				{
					"command": "gitlens.graph.columnDateTimeOn",
					"when": "false"
				},
				{
					"command": "gitlens.graph.columnGraphCompact",
					"when": "false"
				},
				{
					"command": "gitlens.graph.columnGraphDefault",
					"when": "false"
				},
				{
					"command": "gitlens.graph.columnGraphOff",
					"when": "false"
				},
				{
					"command": "gitlens.graph.columnGraphOn",
					"when": "false"
				},
				{
					"command": "gitlens.graph.columnMessageOff",
					"when": "false"
				},
				{
					"command": "gitlens.graph.columnMessageOn",
					"when": "false"
				},
				{
					"command": "gitlens.graph.columnRefOff",
					"when": "false"
				},
				{
					"command": "gitlens.graph.columnRefOn",
					"when": "false"
				},
				{
					"command": "gitlens.graph.columnShaOff",
					"when": "false"
				},
				{
					"command": "gitlens.graph.columnShaOn",
					"when": "false"
				},
				{
					"command": "gitlens.graph.commitViaSCM",
					"when": "false"
				},
				{
					"command": "gitlens.graph.compareAncestryWithWorking",
					"when": "false"
				},
				{
					"command": "gitlens.graph.compareBranchWithHead",
					"when": "false"
				},
				{
					"command": "gitlens.graph.compareSelectedCommits.multi",
					"when": "false"
				},
				{
					"command": "gitlens.graph.compareWithHead",
					"when": "false"
				},
				{
					"command": "gitlens.graph.compareWithMergeBase",
					"when": "false"
				},
				{
					"command": "gitlens.graph.compareWithUpstream",
					"when": "false"
				},
				{
					"command": "gitlens.graph.compareWithWorking",
					"when": "false"
				},
				{
					"command": "gitlens.graph.copy",
					"when": "false"
				},
				{
					"command": "gitlens.graph.copyDeepLinkToBranch",
					"when": "false"
				},
				{
					"command": "gitlens.graph.copyDeepLinkToCommit",
					"when": "false"
				},
				{
					"command": "gitlens.graph.copyDeepLinkToRepo",
					"when": "false"
				},
				{
					"command": "gitlens.graph.copyDeepLinkToTag",
					"when": "false"
				},
				{
					"command": "gitlens.graph.copyMessage",
					"when": "false"
				},
				{
					"command": "gitlens.graph.copyRemoteBranchUrl",
					"when": "false"
				},
				{
					"command": "gitlens.graph.copyRemoteCommitUrl",
					"when": "false"
				},
				{
					"command": "gitlens.graph.copyRemoteCommitUrl.multi",
					"when": "false"
				},
				{
					"command": "gitlens.graph.copySha",
					"when": "false"
				},
				{
					"command": "gitlens.graph.copyWorkingChangesToWorktree",
					"when": "false"
				},
				{
					"command": "gitlens.graph.createBranch",
					"when": "false"
				},
				{
					"command": "gitlens.graph.createCloudPatch",
					"when": "false"
				},
				{
					"command": "gitlens.graph.createPatch",
					"when": "false"
				},
				{
					"command": "gitlens.graph.createPullRequest",
					"when": "false"
				},
				{
					"command": "gitlens.graph.createTag",
					"when": "false"
				},
				{
					"command": "gitlens.graph.createWorktree",
					"when": "false"
				},
				{
					"command": "gitlens.graph.deleteBranch",
					"when": "false"
				},
				{
					"command": "gitlens.graph.deleteTag",
					"when": "false"
				},
				{
					"command": "gitlens.graph.fetch",
					"when": "false"
				},
				{
					"command": "gitlens.graph.hideLocalBranch",
					"when": "false"
				},
				{
					"command": "gitlens.graph.hideRefGroup",
					"when": "false"
				},
				{
					"command": "gitlens.graph.hideRemote",
					"when": "false"
				},
				{
					"command": "gitlens.graph.hideRemoteBranch",
					"when": "false"
				},
				{
					"command": "gitlens.graph.hideTag",
					"when": "false"
				},
				{
					"command": "gitlens.graph.mergeBranchInto",
					"when": "false"
				},
				{
					"command": "gitlens.graph.openBranchOnRemote",
					"when": "false"
				},
				{
					"command": "gitlens.graph.openChangedFileDiffs",
					"when": "false"
				},
				{
					"command": "gitlens.graph.openChangedFileDiffsIndividually",
					"when": "false"
				},
				{
					"command": "gitlens.graph.openChangedFileDiffsWithMergeBase",
					"when": "false"
				},
				{
					"command": "gitlens.graph.openChangedFileDiffsWithWorking",
					"when": "false"
				},
				{
					"command": "gitlens.graph.openChangedFileDiffsWithWorkingIndividually",
					"when": "false"
				},
				{
					"command": "gitlens.graph.openChangedFileRevisions",
					"when": "false"
				},
				{
					"command": "gitlens.graph.openChangedFiles",
					"when": "false"
				},
				{
					"command": "gitlens.graph.openCommitOnRemote",
					"when": "false"
				},
				{
					"command": "gitlens.graph.openCommitOnRemote.multi",
					"when": "false"
				},
				{
					"command": "gitlens.graph.openInWorktree",
					"when": "false"
				},
				{
					"command": "gitlens.graph.openOnlyChangedFiles",
					"when": "false"
				},
				{
					"command": "gitlens.graph.openPullRequest",
					"when": "false"
				},
				{
					"command": "gitlens.graph.openPullRequestChanges",
					"when": "false"
				},
				{
					"command": "gitlens.graph.openPullRequestComparison",
					"when": "false"
				},
				{
					"command": "gitlens.graph.openPullRequestOnRemote",
					"when": "false"
				},
				{
					"command": "gitlens.graph.openWorktree",
					"when": "false"
				},
				{
					"command": "gitlens.graph.openWorktreeInNewWindow",
					"when": "false"
				},
				{
					"command": "gitlens.graph.publishBranch",
					"when": "false"
				},
				{
					"command": "gitlens.graph.pull",
					"when": "false"
				},
				{
					"command": "gitlens.graph.push",
					"when": "false"
				},
				{
					"command": "gitlens.graph.pushWithForce",
					"when": "false"
				},
				{
					"command": "gitlens.graph.rebaseOntoBranch",
					"when": "false"
				},
				{
					"command": "gitlens.graph.rebaseOntoCommit",
					"when": "false"
				},
				{
					"command": "gitlens.graph.rebaseOntoUpstream",
					"when": "false"
				},
				{
					"command": "gitlens.graph.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.graph.renameBranch",
					"when": "false"
				},
				{
					"command": "gitlens.graph.resetColumnsCompact",
					"when": "false"
				},
				{
					"command": "gitlens.graph.resetColumnsDefault",
					"when": "false"
				},
				{
					"command": "gitlens.graph.resetCommit",
					"when": "false"
				},
				{
					"command": "gitlens.graph.resetToCommit",
					"when": "false"
				},
				{
					"command": "gitlens.graph.resetToTag",
					"when": "false"
				},
				{
					"command": "gitlens.graph.resetToTip",
					"when": "false"
				},
				{
					"command": "gitlens.graph.revert",
					"when": "false"
				},
				{
					"command": "gitlens.graph.scrollMarkerLocalBranchOff",
					"when": "false"
				},
				{
					"command": "gitlens.graph.scrollMarkerLocalBranchOn",
					"when": "false"
				},
				{
					"command": "gitlens.graph.scrollMarkerPullRequestOff",
					"when": "false"
				},
				{
					"command": "gitlens.graph.scrollMarkerPullRequestOn",
					"when": "false"
				},
				{
					"command": "gitlens.graph.scrollMarkerRemoteBranchOff",
					"when": "false"
				},
				{
					"command": "gitlens.graph.scrollMarkerRemoteBranchOn",
					"when": "false"
				},
				{
					"command": "gitlens.graph.scrollMarkerStashOff",
					"when": "false"
				},
				{
					"command": "gitlens.graph.scrollMarkerStashOn",
					"when": "false"
				},
				{
					"command": "gitlens.graph.scrollMarkerTagOff",
					"when": "false"
				},
				{
					"command": "gitlens.graph.scrollMarkerTagOn",
					"when": "false"
				},
				{
					"command": "gitlens.graph.shareAsCloudPatch",
					"when": "false"
				},
				{
					"command": "gitlens.graph.showInDetailsView",
					"when": "false"
				},
				{
					"command": "gitlens.graph.split",
					"when": "gitlens:enabled && config.gitlens.graph.allowMultiple"
				},
				{
					"command": "gitlens.graph.stash.apply",
					"when": "false"
				},
				{
					"command": "gitlens.graph.stash.delete",
					"when": "false"
				},
				{
					"command": "gitlens.graph.stash.rename",
					"when": "false"
				},
				{
					"command": "gitlens.graph.stash.save",
					"when": "false"
				},
				{
					"command": "gitlens.graph.switchToAnotherBranch",
					"when": "false"
				},
				{
					"command": "gitlens.graph.switchToBranch",
					"when": "false"
				},
				{
					"command": "gitlens.graph.switchToCommit",
					"when": "false"
				},
				{
					"command": "gitlens.graph.switchToEditorLayout",
					"when": "gitlens:enabled && config.gitlens.graph.layout != editor"
				},
				{
					"command": "gitlens.graph.switchToPanelLayout",
					"when": "gitlens:enabled && config.gitlens.graph.layout != panel"
				},
				{
					"command": "gitlens.graph.switchToTag",
					"when": "false"
				},
				{
					"command": "gitlens.graph.undoCommit",
					"when": "false"
				},
				{
					"command": "gitlens.inviteToLiveShare",
					"when": "false"
				},
				{
					"command": "gitlens.launchpad.indicator.toggle",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.openAssociatedPullRequestOnRemote",
					"when": "gitlens:repos:withRemotes"
				},
				{
					"command": "gitlens.openBlamePriorToChange",
					"when": "resource in gitlens:tabs:tracked"
				},
				{
					"command": "gitlens.openBranchesOnRemote",
					"when": "gitlens:repos:withRemotes"
				},
				{
					"command": "gitlens.openBranchOnRemote",
					"when": "gitlens:repos:withRemotes"
				},
				{
					"command": "gitlens.openChangedFiles",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.openCloudPatch",
					"when": "false"
				},
				{
					"command": "gitlens.openCommitOnRemote",
					"when": "gitlens:repos:withRemotes"
				},
				{
					"command": "gitlens.openComparisonOnRemote",
					"when": "false"
				},
				{
					"command": "gitlens.openCurrentBranchOnRemote",
					"when": "gitlens:repos:withRemotes"
				},
				{
					"command": "gitlens.openFileFromRemote",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.openFileHistory",
					"when": "resource in gitlens:tabs:tracked"
				},
				{
					"command": "gitlens.openFileOnRemote",
					"when": "gitlens:repos:withRemotes"
				},
				{
					"command": "gitlens.openFileOnRemoteFrom",
					"when": "gitlens:repos:withRemotes"
				},
				{
					"command": "gitlens.openFileRevision",
					"when": "resource in gitlens:tabs:tracked"
				},
				{
					"command": "gitlens.openFileRevisionFrom",
					"when": "resource in gitlens:tabs:tracked"
				},
				{
					"command": "gitlens.openFolderHistory",
					"when": "false"
				},
				{
					"command": "gitlens.openOnlyChangedFiles",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.openPatch",
					"when": "false && gitlens:enabled"
				},
				{
					"command": "gitlens.openPullRequestOnRemote",
					"when": "false"
				},
				{
					"command": "gitlens.openRepoOnRemote",
					"when": "gitlens:repos:withRemotes"
				},
				{
					"command": "gitlens.openRevisionFile",
					"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor"
				},
				{
					"command": "gitlens.openRevisionFileInDiffLeft",
					"when": "false"
				},
				{
					"command": "gitlens.openRevisionFileInDiffRight",
					"when": "false"
				},
				{
					"command": "gitlens.openWorkingFile",
					"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
				},
				{
					"command": "gitlens.openWorkingFileInDiffLeft",
					"when": "false"
				},
				{
					"command": "gitlens.openWorkingFileInDiffRight",
					"when": "false"
				},
				{
					"command": "gitlens.pastePatchFromClipboard",
					"when": "gitlens:enabled && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.plus.cloudIntegrations.connect",
					"when": "false"
				},
				{
					"command": "gitlens.plus.cloudIntegrations.manage",
					"when": "gitlens:plus"
				},
				{
					"command": "gitlens.plus.hide",
					"when": "config.gitlens.plusFeatures.enabled"
				},
				{
					"command": "gitlens.plus.login",
					"when": "!gitlens:plus"
				},
				{
					"command": "gitlens.plus.manage",
					"when": "gitlens:plus"
				},
				{
					"command": "gitlens.plus.reactivateProTrial",
					"when": "gitlens:plus:state == 5"
				},
				{
					"command": "gitlens.plus.referFriend",
					"when": "gitlens:plus:state == 6"
				},
				{
					"command": "gitlens.plus.refreshRepositoryAccess",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.plus.restore",
					"when": "!config.gitlens.plusFeatures.enabled"
				},
				{
					"command": "gitlens.plus.signUp",
					"when": "!gitlens:plus"
				},
				{
					"command": "gitlens.plus.simulateSubscription",
					"when": "gitlens:enabled && gitlens:debugging"
				},
				{
					"command": "gitlens.plus.startPreviewTrial",
					"when": "false && !gitlens:plus"
				},
				{
					"command": "gitlens.pullRepositories",
					"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.pushRepositories",
					"when": "gitlens:repos:withRemotes && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.quickOpenFileHistory",
					"when": "resource in gitlens:tabs:tracked"
				},
				{
					"command": "gitlens.resetAIKey",
					"when": "gitlens:enabled && gitlens:gk:organization:ai:enabled"
				},
				{
					"command": "gitlens.revealCommitInView",
					"when": "resource in gitlens:tabs:blameable"
				},
				{
					"command": "gitlens.scm.ai.generateCommitMessage",
					"when": "false"
				},
				{
					"command": "gitlens.shareAsCloudPatch",
					"when": "gitlens:enabled && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled"
				},
				{
					"command": "gitlens.showBranchesView",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showCommitDetailsView",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showCommitInView",
					"when": "resource in gitlens:tabs:blameable"
				},
				{
					"command": "gitlens.showCommitSearch",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showCommitsInView",
					"when": "resource in gitlens:tabs:blameable"
				},
				{
					"command": "gitlens.showCommitsView",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showContributorsView",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showDraftsView",
					"when": "gitlens:enabled && gitlens:gk:organization:drafts:enabled"
				},
				{
					"command": "gitlens.showFileHistoryView",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showFileInTimeline",
					"when": "gitlens:enabled && resource in gitlens:tabs:tracked"
				},
				{
					"command": "gitlens.showFolderInTimeline",
					"when": "false"
				},
				{
					"command": "gitlens.showGraph",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showGraphPage",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showGraphView",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showInCommitGraph",
					"when": "false"
				},
				{
					"command": "gitlens.showInCommitGraphView",
					"when": "false"
				},
				{
					"command": "gitlens.showInDetailsView",
					"when": "false"
				},
				{
					"command": "gitlens.showLastQuickPick",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showLaunchpad",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showLaunchpadView",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showLineCommitInView",
					"when": "resource in gitlens:tabs:blameable"
				},
				{
					"command": "gitlens.showLineHistoryView",
					"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.showPatchDetailsPage",
					"when": "gitlens:enabled && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled"
				},
				{
					"command": "gitlens.showQuickBranchHistory",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showQuickCommitDetails",
					"when": "false"
				},
				{
					"command": "gitlens.showQuickCommitFileDetails",
					"when": "resource in gitlens:tabs:blameable"
				},
				{
					"command": "gitlens.showQuickFileHistory",
					"when": "resource in gitlens:tabs:tracked"
				},
				{
					"command": "gitlens.showQuickRepoHistory",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showQuickRepoStatus",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showQuickRevisionDetails",
					"when": "gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
				},
				{
					"command": "gitlens.showQuickRevisionDetailsInDiffLeft",
					"when": "false"
				},
				{
					"command": "gitlens.showQuickRevisionDetailsInDiffRight",
					"when": "false"
				},
				{
					"command": "gitlens.showQuickStashList",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showRemotesView",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showRepositoriesView",
					"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.showSearchAndCompareView",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showSettingsPage!branches-view",
					"when": "false"
				},
				{
					"command": "gitlens.showSettingsPage!commit-graph",
					"when": "false"
				},
				{
					"command": "gitlens.showSettingsPage!commits-view",
					"when": "false"
				},
				{
					"command": "gitlens.showSettingsPage!contributors-view",
					"when": "false"
				},
				{
					"command": "gitlens.showSettingsPage!file-annotations",
					"when": "false"
				},
				{
					"command": "gitlens.showSettingsPage!file-history-view",
					"when": "false"
				},
				{
					"command": "gitlens.showSettingsPage!line-history-view",
					"when": "false"
				},
				{
					"command": "gitlens.showSettingsPage!remotes-view",
					"when": "false"
				},
				{
					"command": "gitlens.showSettingsPage!repositories-view",
					"when": "false"
				},
				{
					"command": "gitlens.showSettingsPage!search-compare-view",
					"when": "false"
				},
				{
					"command": "gitlens.showSettingsPage!stashes-view",
					"when": "false"
				},
				{
					"command": "gitlens.showSettingsPage!tags-view",
					"when": "false"
				},
				{
					"command": "gitlens.showSettingsPage!views",
					"when": "false"
				},
				{
					"command": "gitlens.showSettingsPage!worktrees-view",
					"when": "false"
				},
				{
					"command": "gitlens.showStashesView",
					"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.showTagsView",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showTimelinePage",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showTimelineView",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.showWorkspacesView",
					"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.showWorktreesView",
					"when": "gitlens:enabled && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.startWork",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.stashApply",
					"when": "gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.stashSave",
					"when": "gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.stashSaveFiles",
					"when": "false"
				},
				{
					"command": "gitlens.switchAIModel",
					"when": "gitlens:enabled && gitlens:gk:organization:ai:enabled"
				},
				{
					"command": "gitlens.switchMode",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.timeline.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.timeline.split",
					"when": "gitlens:enabled && config.gitlens.visualHistory.allowMultiple"
				},
				{
					"command": "gitlens.toggleCodeLens",
					"when": "!gitlens:disabled && !gitlens:disabledToggleCodeLens"
				},
				{
					"command": "gitlens.toggleFileBlame",
					"when": "resource in gitlens:tabs:blameable || config.gitlens.blame.toggleMode == window"
				},
				{
					"command": "gitlens.toggleFileBlameInDiffLeft",
					"when": "false"
				},
				{
					"command": "gitlens.toggleFileBlameInDiffRight",
					"when": "false"
				},
				{
					"command": "gitlens.toggleFileChanges",
					"when": "(resource in gitlens:tabs:blameable  || config.gitlens.changes.toggleMode == window) && !gitlens:hasVirtualFolders"
				},
				{
					"command": "gitlens.toggleFileChangesOnly",
					"when": "false"
				},
				{
					"command": "gitlens.toggleFileHeatmap",
					"when": "resource in gitlens:tabs:blameable || config.gitlens.heatmap.toggleMode == window"
				},
				{
					"command": "gitlens.toggleFileHeatmapInDiffLeft",
					"when": "false"
				},
				{
					"command": "gitlens.toggleFileHeatmapInDiffRight",
					"when": "false"
				},
				{
					"command": "gitlens.toggleGraph",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.toggleLineBlame",
					"when": "!gitlens:disabled"
				},
				{
					"command": "gitlens.toggleMaximizedGraph",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.toggleReviewMode",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.toggleZenMode",
					"when": "gitlens:enabled"
				},
				{
					"command": "gitlens.views.abortPausedOperation",
					"when": "false"
				},
				{
					"command": "gitlens.views.addAuthor",
					"when": "false"
				},
				{
					"command": "gitlens.views.addAuthor.multi",
					"when": "false"
				},
				{
					"command": "gitlens.views.addAuthors",
					"when": "false"
				},
				{
					"command": "gitlens.views.addPullRequestRemote",
					"when": "false"
				},
				{
					"command": "gitlens.views.addRemote",
					"when": "false"
				},
				{
					"command": "gitlens.views.ai.generateChangelog",
					"when": "false"
				},
				{
					"command": "gitlens.views.ai.generateChangelogFrom",
					"when": "false"
				},
				{
					"command": "gitlens.views.applyChanges",
					"when": "false"
				},
				{
					"command": "gitlens.views.associateIssueWithBranch",
					"when": "false"
				},
				{
					"command": "gitlens.views.branches.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.branches.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.branches.regroup",
					"when": "false"
				},
				{
					"command": "gitlens.views.branches.setFilesLayoutToAuto",
					"when": "false"
				},
				{
					"command": "gitlens.views.branches.setFilesLayoutToList",
					"when": "false"
				},
				{
					"command": "gitlens.views.branches.setFilesLayoutToTree",
					"when": "false"
				},
				{
					"command": "gitlens.views.branches.setLayoutToList",
					"when": "false"
				},
				{
					"command": "gitlens.views.branches.setLayoutToTree",
					"when": "false"
				},
				{
					"command": "gitlens.views.branches.setShowAvatarsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.branches.setShowAvatarsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.branches.setShowBranchComparisonOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.branches.setShowBranchComparisonOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.branches.setShowBranchPullRequestOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.branches.setShowBranchPullRequestOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.branches.setShowRemoteBranchesOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.branches.setShowRemoteBranchesOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.branches.setShowStashesOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.branches.setShowStashesOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.branches.viewOptionsTitle",
					"when": "false"
				},
				{
					"command": "gitlens.views.browseRepoAtRevision",
					"when": "false"
				},
				{
					"command": "gitlens.views.browseRepoAtRevisionInNewWindow",
					"when": "false"
				},
				{
					"command": "gitlens.views.browseRepoBeforeRevision",
					"when": "false"
				},
				{
					"command": "gitlens.views.browseRepoBeforeRevisionInNewWindow",
					"when": "false"
				},
				{
					"command": "gitlens.views.cherryPick",
					"when": "false"
				},
				{
					"command": "gitlens.views.cherryPick.multi",
					"when": "false"
				},
				{
					"command": "gitlens.views.clearComparison",
					"when": "false"
				},
				{
					"command": "gitlens.views.clearReviewed",
					"when": "false"
				},
				{
					"command": "gitlens.views.closeRepository",
					"when": "false"
				},
				{
					"command": "gitlens.views.collapseNode",
					"when": "false"
				},
				{
					"command": "gitlens.views.commitDetails.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.commits.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.commits.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.commits.regroup",
					"when": "false"
				},
				{
					"command": "gitlens.views.commits.setCommitsFilterAuthors",
					"when": "false"
				},
				{
					"command": "gitlens.views.commits.setCommitsFilterOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.commits.setFilesLayoutToAuto",
					"when": "false"
				},
				{
					"command": "gitlens.views.commits.setFilesLayoutToList",
					"when": "false"
				},
				{
					"command": "gitlens.views.commits.setFilesLayoutToTree",
					"when": "false"
				},
				{
					"command": "gitlens.views.commits.setShowAvatarsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.commits.setShowAvatarsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.commits.setShowBranchComparisonOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.commits.setShowBranchComparisonOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.commits.setShowBranchPullRequestOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.commits.setShowBranchPullRequestOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.commits.setShowMergeCommitsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.commits.setShowMergeCommitsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.commits.setShowStashesOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.commits.setShowStashesOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.commits.viewOptionsTitle",
					"when": "false"
				},
				{
					"command": "gitlens.views.compareAncestryWithWorking",
					"when": "false"
				},
				{
					"command": "gitlens.views.compareBranchWithHead",
					"when": "false"
				},
				{
					"command": "gitlens.views.compareFileWithSelected",
					"when": "false"
				},
				{
					"command": "gitlens.views.compareWithHead",
					"when": "false"
				},
				{
					"command": "gitlens.views.compareWithMergeBase",
					"when": "false"
				},
				{
					"command": "gitlens.views.compareWithSelected",
					"when": "false"
				},
				{
					"command": "gitlens.views.compareWithUpstream",
					"when": "false"
				},
				{
					"command": "gitlens.views.compareWithWorking",
					"when": "false"
				},
				{
					"command": "gitlens.views.continuePausedOperation",
					"when": "false"
				},
				{
					"command": "gitlens.views.contributors.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.contributors.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.contributors.regroup",
					"when": "false"
				},
				{
					"command": "gitlens.views.contributors.setFilesLayoutToAuto",
					"when": "false"
				},
				{
					"command": "gitlens.views.contributors.setFilesLayoutToList",
					"when": "false"
				},
				{
					"command": "gitlens.views.contributors.setFilesLayoutToTree",
					"when": "false"
				},
				{
					"command": "gitlens.views.contributors.setShowAllBranchesOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.contributors.setShowAllBranchesOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.contributors.setShowAvatarsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.contributors.setShowAvatarsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.contributors.setShowMergeCommitsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.contributors.setShowMergeCommitsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.contributors.setShowStatisticsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.contributors.setShowStatisticsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.contributors.viewOptionsTitle",
					"when": "false"
				},
				{
					"command": "gitlens.views.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.copyAsMarkdown",
					"when": "false"
				},
				{
					"command": "gitlens.views.copyRemoteCommitUrl",
					"when": "false"
				},
				{
					"command": "gitlens.views.copyRemoteCommitUrl.multi",
					"when": "false"
				},
				{
					"command": "gitlens.views.copyUrl",
					"when": "false"
				},
				{
					"command": "gitlens.views.copyUrl.multi",
					"when": "false"
				},
				{
					"command": "gitlens.views.createBranch",
					"when": "false"
				},
				{
					"command": "gitlens.views.createPullRequest",
					"when": "false"
				},
				{
					"command": "gitlens.views.createTag",
					"when": "false"
				},
				{
					"command": "gitlens.views.createWorktree",
					"when": "false"
				},
				{
					"command": "gitlens.views.deleteBranch",
					"when": "false"
				},
				{
					"command": "gitlens.views.deleteBranch.multi",
					"when": "false"
				},
				{
					"command": "gitlens.views.deleteTag",
					"when": "false"
				},
				{
					"command": "gitlens.views.deleteTag.multi",
					"when": "false"
				},
				{
					"command": "gitlens.views.deleteWorktree",
					"when": "false"
				},
				{
					"command": "gitlens.views.deleteWorktree.multi",
					"when": "false"
				},
				{
					"command": "gitlens.views.dismissNode",
					"when": "false"
				},
				{
					"command": "gitlens.views.draft.open",
					"when": "false"
				},
				{
					"command": "gitlens.views.draft.openOnWeb",
					"when": "false"
				},
				{
					"command": "gitlens.views.drafts.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.drafts.create",
					"when": "false"
				},
				{
					"command": "gitlens.views.drafts.delete",
					"when": "false"
				},
				{
					"command": "gitlens.views.drafts.info",
					"when": "false"
				},
				{
					"command": "gitlens.views.drafts.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.drafts.setShowAvatarsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.drafts.setShowAvatarsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.editNode",
					"when": "false"
				},
				{
					"command": "gitlens.views.expandNode",
					"when": "false"
				},
				{
					"command": "gitlens.views.fetch",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.changeBase",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.setCursorFollowingOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.setCursorFollowingOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.setEditorFollowingOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.setEditorFollowingOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.setRenameFollowingOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.setRenameFollowingOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.setShowAllBranchesOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.setShowAllBranchesOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.setShowAvatarsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.setShowAvatarsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.setShowMergeCommitsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.fileHistory.setShowMergeCommitsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.graph.openInTab",
					"when": "false"
				},
				{
					"command": "gitlens.views.graph.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.graphDetails.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.highlightChanges",
					"when": "false"
				},
				{
					"command": "gitlens.views.highlightRevisionChanges",
					"when": "false"
				},
				{
					"command": "gitlens.views.home.disablePreview",
					"when": "false"
				},
				{
					"command": "gitlens.views.home.discussions",
					"when": "false"
				},
				{
					"command": "gitlens.views.home.enablePreview",
					"when": "false"
				},
				{
					"command": "gitlens.views.home.help",
					"when": "false"
				},
				{
					"command": "gitlens.views.home.info",
					"when": "false"
				},
				{
					"command": "gitlens.views.home.issues",
					"when": "false"
				},
				{
					"command": "gitlens.views.home.previewFeedback",
					"when": "false"
				},
				{
					"command": "gitlens.views.home.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.home.whatsNew",
					"when": "false"
				},
				{
					"command": "gitlens.views.launchpad.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.launchpad.info",
					"when": "false"
				},
				{
					"command": "gitlens.views.launchpad.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.launchpad.regroup",
					"when": "false"
				},
				{
					"command": "gitlens.views.launchpad.setFilesLayoutToAuto",
					"when": "false"
				},
				{
					"command": "gitlens.views.launchpad.setFilesLayoutToList",
					"when": "false"
				},
				{
					"command": "gitlens.views.launchpad.setFilesLayoutToTree",
					"when": "false"
				},
				{
					"command": "gitlens.views.launchpad.setShowAvatarsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.launchpad.setShowAvatarsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.launchpad.viewOptionsTitle",
					"when": "false"
				},
				{
					"command": "gitlens.views.lineHistory.changeBase",
					"when": "false"
				},
				{
					"command": "gitlens.views.lineHistory.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.lineHistory.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.lineHistory.setEditorFollowingOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.lineHistory.setEditorFollowingOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.lineHistory.setShowAvatarsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.lineHistory.setShowAvatarsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.loadAllChildren",
					"when": "false"
				},
				{
					"command": "gitlens.views.loadMoreChildren",
					"when": "false"
				},
				{
					"command": "gitlens.views.mergeBranchInto",
					"when": "false"
				},
				{
					"command": "gitlens.views.mergeChangesWithWorking",
					"when": "false"
				},
				{
					"command": "gitlens.views.openBranchOnRemote",
					"when": "false"
				},
				{
					"command": "gitlens.views.openBranchOnRemote.multi",
					"when": "false"
				},
				{
					"command": "gitlens.views.openChangedFileDiffs",
					"when": "false"
				},
				{
					"command": "gitlens.views.openChangedFileDiffsIndividually",
					"when": "false"
				},
				{
					"command": "gitlens.views.openChangedFileDiffsWithMergeBase",
					"when": "false"
				},
				{
					"command": "gitlens.views.openChangedFileDiffsWithWorking",
					"when": "false"
				},
				{
					"command": "gitlens.views.openChangedFileDiffsWithWorkingIndividually",
					"when": "false"
				},
				{
					"command": "gitlens.views.openChangedFileRevisions",
					"when": "false"
				},
				{
					"command": "gitlens.views.openChangedFiles",
					"when": "false"
				},
				{
					"command": "gitlens.views.openChanges",
					"when": "false"
				},
				{
					"command": "gitlens.views.openChangesWithMergeBase",
					"when": "false"
				},
				{
					"command": "gitlens.views.openChangesWithWorking",
					"when": "false"
				},
				{
					"command": "gitlens.views.openCommitOnRemote",
					"when": "false"
				},
				{
					"command": "gitlens.views.openCommitOnRemote.multi",
					"when": "false"
				},
				{
					"command": "gitlens.views.openDirectoryDiff",
					"when": "false"
				},
				{
					"command": "gitlens.views.openDirectoryDiffWithWorking",
					"when": "false"
				},
				{
					"command": "gitlens.views.openFile",
					"when": "false"
				},
				{
					"command": "gitlens.views.openFileRevision",
					"when": "false"
				},
				{
					"command": "gitlens.views.openInIntegratedTerminal",
					"when": "false"
				},
				{
					"command": "gitlens.views.openInTerminal",
					"when": "false"
				},
				{
					"command": "gitlens.views.openInWorktree",
					"when": "false"
				},
				{
					"command": "gitlens.views.openOnlyChangedFiles",
					"when": "false"
				},
				{
					"command": "gitlens.views.openPausedOperationInRebaseEditor",
					"when": "false"
				},
				{
					"command": "gitlens.views.openPreviousChangesWithWorking",
					"when": "false"
				},
				{
					"command": "gitlens.views.openPullRequest",
					"when": "false"
				},
				{
					"command": "gitlens.views.openPullRequestChanges",
					"when": "false"
				},
				{
					"command": "gitlens.views.openPullRequestComparison",
					"when": "false"
				},
				{
					"command": "gitlens.views.openUrl",
					"when": "false"
				},
				{
					"command": "gitlens.views.openUrl.multi",
					"when": "false"
				},
				{
					"command": "gitlens.views.openWorktree",
					"when": "false"
				},
				{
					"command": "gitlens.views.openWorktreeInNewWindow",
					"when": "false"
				},
				{
					"command": "gitlens.views.openWorktreeInNewWindow.multi",
					"when": "false"
				},
				{
					"command": "gitlens.views.patchDetails.close",
					"when": "false"
				},
				{
					"command": "gitlens.views.patchDetails.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.pruneRemote",
					"when": "false"
				},
				{
					"command": "gitlens.views.publishBranch",
					"when": "false"
				},
				{
					"command": "gitlens.views.publishRepository",
					"when": "false"
				},
				{
					"command": "gitlens.views.pull",
					"when": "false"
				},
				{
					"command": "gitlens.views.pullRequest.close",
					"when": "false"
				},
				{
					"command": "gitlens.views.pullRequest.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.pullRequest.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.pullRequest.setFilesLayoutToAuto",
					"when": "false"
				},
				{
					"command": "gitlens.views.pullRequest.setFilesLayoutToList",
					"when": "false"
				},
				{
					"command": "gitlens.views.pullRequest.setFilesLayoutToTree",
					"when": "false"
				},
				{
					"command": "gitlens.views.pullRequest.setShowAvatarsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.pullRequest.setShowAvatarsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.push",
					"when": "false"
				},
				{
					"command": "gitlens.views.pushToCommit",
					"when": "false"
				},
				{
					"command": "gitlens.views.pushWithForce",
					"when": "false"
				},
				{
					"command": "gitlens.views.rebaseOntoBranch",
					"when": "false"
				},
				{
					"command": "gitlens.views.rebaseOntoCommit",
					"when": "false"
				},
				{
					"command": "gitlens.views.rebaseOntoUpstream",
					"when": "false"
				},
				{
					"command": "gitlens.views.refreshNode",
					"when": "false"
				},
				{
					"command": "gitlens.views.remotes.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.remotes.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.remotes.regroup",
					"when": "false"
				},
				{
					"command": "gitlens.views.remotes.setFilesLayoutToAuto",
					"when": "false"
				},
				{
					"command": "gitlens.views.remotes.setFilesLayoutToList",
					"when": "false"
				},
				{
					"command": "gitlens.views.remotes.setFilesLayoutToTree",
					"when": "false"
				},
				{
					"command": "gitlens.views.remotes.setLayoutToList",
					"when": "false"
				},
				{
					"command": "gitlens.views.remotes.setLayoutToTree",
					"when": "false"
				},
				{
					"command": "gitlens.views.remotes.setShowAvatarsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.remotes.setShowAvatarsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.remotes.setShowBranchPullRequestOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.remotes.setShowBranchPullRequestOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.remotes.viewOptionsTitle",
					"when": "false"
				},
				{
					"command": "gitlens.views.removeRemote",
					"when": "false"
				},
				{
					"command": "gitlens.views.renameBranch",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.regroup",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setAutoRefreshToOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setAutoRefreshToOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setBranchesLayoutToList",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setBranchesLayoutToTree",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setBranchesShowBranchComparisonOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setBranchesShowBranchComparisonOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setFilesLayoutToAuto",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setFilesLayoutToList",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setFilesLayoutToTree",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowAvatarsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowAvatarsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowBranchComparisonOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowBranchComparisonOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowBranchesOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowBranchesOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowCommitsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowCommitsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowContributorsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowContributorsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowRemotesOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowRemotesOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowSectionOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowStashesOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowStashesOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowTagsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowTagsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowUpstreamStatusOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowUpstreamStatusOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowWorktreesOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.setShowWorktreesOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.repositories.viewOptionsTitle",
					"when": "false"
				},
				{
					"command": "gitlens.views.resetCommit",
					"when": "false"
				},
				{
					"command": "gitlens.views.resetToCommit",
					"when": "false"
				},
				{
					"command": "gitlens.views.resetToTip",
					"when": "false"
				},
				{
					"command": "gitlens.views.restore",
					"when": "false"
				},
				{
					"command": "gitlens.views.revealRepositoryInExplorer",
					"when": "false"
				},
				{
					"command": "gitlens.views.revealWorktreeInExplorer",
					"when": "false"
				},
				{
					"command": "gitlens.views.revert",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.branches",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.branches.detach",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.branches.regroup",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.branches.setAsDefault",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.branches.visibility.hide",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.branches.visibility.show",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.commits",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.commits.detach",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.commits.regroup",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.commits.setAsDefault",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.commits.visibility.hide",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.commits.visibility.show",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.contributors",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.contributors.detach",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.contributors.regroup",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.contributors.setAsDefault",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.contributors.visibility.hide",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.contributors.visibility.show",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.detachAll",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.launchpad",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.launchpad.detach",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.launchpad.regroup",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.launchpad.setAsDefault",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.launchpad.visibility.hide",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.launchpad.visibility.show",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.regroupAll",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.remotes",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.remotes.detach",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.remotes.regroup",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.remotes.setAsDefault",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.remotes.visibility.hide",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.remotes.visibility.show",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.repositories",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.repositories.detach",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.repositories.regroup",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.repositories.setAsDefault",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.repositories.visibility.hide",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.repositories.visibility.show",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.searchAndCompare",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.searchAndCompare.detach",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.searchAndCompare.regroup",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.searchAndCompare.setAsDefault",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.searchAndCompare.visibility.hide",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.searchAndCompare.visibility.show",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.stashes",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.stashes.detach",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.stashes.regroup",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.stashes.setAsDefault",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.stashes.visibility.hide",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.stashes.visibility.show",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.tags",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.tags.detach",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.tags.regroup",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.tags.setAsDefault",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.tags.visibility.hide",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.tags.visibility.show",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.worktrees",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.worktrees.detach",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.worktrees.regroup",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.worktrees.setAsDefault",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.worktrees.visibility.hide",
					"when": "false"
				},
				{
					"command": "gitlens.views.scm.grouped.worktrees.visibility.show",
					"when": "false"
				},
				{
					"command": "gitlens.views.searchAndCompare.clear",
					"when": "false"
				},
				{
					"command": "gitlens.views.searchAndCompare.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.searchAndCompare.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.searchAndCompare.regroup",
					"when": "false"
				},
				{
					"command": "gitlens.views.searchAndCompare.searchCommits",
					"when": "false"
				},
				{
					"command": "gitlens.views.searchAndCompare.selectForCompare",
					"when": "false"
				},
				{
					"command": "gitlens.views.searchAndCompare.setFilesLayoutToAuto",
					"when": "false"
				},
				{
					"command": "gitlens.views.searchAndCompare.setFilesLayoutToList",
					"when": "false"
				},
				{
					"command": "gitlens.views.searchAndCompare.setFilesLayoutToTree",
					"when": "false"
				},
				{
					"command": "gitlens.views.searchAndCompare.setShowAvatarsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.searchAndCompare.setShowAvatarsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.searchAndCompare.swapComparison",
					"when": "false"
				},
				{
					"command": "gitlens.views.searchAndCompare.viewOptionsTitle",
					"when": "false"
				},
				{
					"command": "gitlens.views.selectFileForCompare",
					"when": "false"
				},
				{
					"command": "gitlens.views.selectForCompare",
					"when": "false"
				},
				{
					"command": "gitlens.views.setAsDefault",
					"when": "false"
				},
				{
					"command": "gitlens.views.setBranchComparisonToBranch",
					"when": "false"
				},
				{
					"command": "gitlens.views.setBranchComparisonToWorking",
					"when": "false"
				},
				{
					"command": "gitlens.views.setContributorsStatisticsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.setContributorsStatisticsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.setResultsCommitsFilterAuthors",
					"when": "false"
				},
				{
					"command": "gitlens.views.setResultsCommitsFilterOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.setResultsFilesFilterOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.setResultsFilesFilterOnLeft",
					"when": "false"
				},
				{
					"command": "gitlens.views.setResultsFilesFilterOnRight",
					"when": "false"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.skipPausedOperation",
					"when": "false"
				},
				{
					"command": "gitlens.views.stageDirectory",
					"when": "false"
				},
				{
					"command": "gitlens.views.stageFile",
					"when": "false"
				},
				{
					"command": "gitlens.views.star",
					"when": "false"
				},
				{
					"command": "gitlens.views.star.multi",
					"when": "false"
				},
				{
					"command": "gitlens.views.stash.apply",
					"when": "false"
				},
				{
					"command": "gitlens.views.stash.delete",
					"when": "false"
				},
				{
					"command": "gitlens.views.stash.delete.multi",
					"when": "false"
				},
				{
					"command": "gitlens.views.stash.rename",
					"when": "false"
				},
				{
					"command": "gitlens.views.stashes.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.stashes.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.stashes.regroup",
					"when": "false"
				},
				{
					"command": "gitlens.views.stashes.setFilesLayoutToAuto",
					"when": "false"
				},
				{
					"command": "gitlens.views.stashes.setFilesLayoutToList",
					"when": "false"
				},
				{
					"command": "gitlens.views.stashes.setFilesLayoutToTree",
					"when": "false"
				},
				{
					"command": "gitlens.views.stashes.viewOptionsTitle",
					"when": "false"
				},
				{
					"command": "gitlens.views.switchToAnotherBranch",
					"when": "false"
				},
				{
					"command": "gitlens.views.switchToBranch",
					"when": "false"
				},
				{
					"command": "gitlens.views.switchToCommit",
					"when": "false"
				},
				{
					"command": "gitlens.views.switchToTag",
					"when": "false"
				},
				{
					"command": "gitlens.views.tags.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.tags.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.tags.regroup",
					"when": "false"
				},
				{
					"command": "gitlens.views.tags.setFilesLayoutToAuto",
					"when": "false"
				},
				{
					"command": "gitlens.views.tags.setFilesLayoutToList",
					"when": "false"
				},
				{
					"command": "gitlens.views.tags.setFilesLayoutToTree",
					"when": "false"
				},
				{
					"command": "gitlens.views.tags.setLayoutToList",
					"when": "false"
				},
				{
					"command": "gitlens.views.tags.setLayoutToTree",
					"when": "false"
				},
				{
					"command": "gitlens.views.tags.setShowAvatarsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.tags.setShowAvatarsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.tags.viewOptionsTitle",
					"when": "false"
				},
				{
					"command": "gitlens.views.timeline.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.title.createBranch",
					"when": "false"
				},
				{
					"command": "gitlens.views.title.createTag",
					"when": "false"
				},
				{
					"command": "gitlens.views.title.createWorktree",
					"when": "false"
				},
				{
					"command": "gitlens.views.undoCommit",
					"when": "false"
				},
				{
					"command": "gitlens.views.unsetAsDefault",
					"when": "false"
				},
				{
					"command": "gitlens.views.unstageDirectory",
					"when": "false"
				},
				{
					"command": "gitlens.views.unstageFile",
					"when": "false"
				},
				{
					"command": "gitlens.views.unstar",
					"when": "false"
				},
				{
					"command": "gitlens.views.unstar.multi",
					"when": "false"
				},
				{
					"command": "gitlens.views.workspaces.addRepos",
					"when": "false"
				},
				{
					"command": "gitlens.views.workspaces.addReposFromLinked",
					"when": "false"
				},
				{
					"command": "gitlens.views.workspaces.changeAutoAddSetting",
					"when": "false"
				},
				{
					"command": "gitlens.views.workspaces.convert",
					"when": "false"
				},
				{
					"command": "gitlens.views.workspaces.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.workspaces.create",
					"when": "gitlens:plus"
				},
				{
					"command": "gitlens.views.workspaces.createLocal",
					"when": "false"
				},
				{
					"command": "gitlens.views.workspaces.delete",
					"when": "false"
				},
				{
					"command": "gitlens.views.workspaces.info",
					"when": "false"
				},
				{
					"command": "gitlens.views.workspaces.locateAllRepos",
					"when": "false"
				},
				{
					"command": "gitlens.views.workspaces.openLocal",
					"when": "false"
				},
				{
					"command": "gitlens.views.workspaces.openLocalNewWindow",
					"when": "false"
				},
				{
					"command": "gitlens.views.workspaces.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.workspaces.repo.addToWindow",
					"when": "false"
				},
				{
					"command": "gitlens.views.workspaces.repo.locate",
					"when": "false"
				},
				{
					"command": "gitlens.views.workspaces.repo.open",
					"when": "false"
				},
				{
					"command": "gitlens.views.workspaces.repo.openInNewWindow",
					"when": "false"
				},
				{
					"command": "gitlens.views.workspaces.repo.remove",
					"when": "false"
				},
				{
					"command": "gitlens.views.worktrees.copy",
					"when": "false"
				},
				{
					"command": "gitlens.views.worktrees.refresh",
					"when": "false"
				},
				{
					"command": "gitlens.views.worktrees.regroup",
					"when": "false"
				},
				{
					"command": "gitlens.views.worktrees.setFilesLayoutToAuto",
					"when": "false"
				},
				{
					"command": "gitlens.views.worktrees.setFilesLayoutToList",
					"when": "false"
				},
				{
					"command": "gitlens.views.worktrees.setFilesLayoutToTree",
					"when": "false"
				},
				{
					"command": "gitlens.views.worktrees.setLayoutToList",
					"when": "false"
				},
				{
					"command": "gitlens.views.worktrees.setLayoutToTree",
					"when": "false"
				},
				{
					"command": "gitlens.views.worktrees.setShowAvatarsOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.worktrees.setShowAvatarsOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.worktrees.setShowBranchComparisonOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.worktrees.setShowBranchComparisonOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.worktrees.setShowBranchPullRequestOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.worktrees.setShowBranchPullRequestOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.worktrees.setShowStashesOff",
					"when": "false"
				},
				{
					"command": "gitlens.views.worktrees.setShowStashesOn",
					"when": "false"
				},
				{
					"command": "gitlens.views.worktrees.viewOptionsTitle",
					"when": "false"
				}
			],
			"editor/context": [
				{
					"command": "gitlens.openWorkingFile",
					"when": "resourceScheme == gitlens && editorTextFocus && config.gitlens.menus.editor.compare",
					"group": "1_z_gitlens@0"
				},
				{
					"submenu": "gitlens/editor/context/changes",
					"when": "resourceScheme in gitlens:schemes:trackable && editorTextFocus && config.gitlens.menus.editor.compare",
					"group": "1_z_gitlens_open@1"
				},
				{
					"submenu": "gitlens/editor/context/openOn",
					"when": "resourceScheme in gitlens:schemes:trackable && editorTextFocus && config.gitlens.menus.editor.remote && gitlens:repos:withRemotes",
					"group": "1_z_gitlens_open@2"
				},
				{
					"submenu": "gitlens/editor/annotations",
					"when": "resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:blameable && editorTextFocus && config.gitlens.menus.editor.blame",
					"group": "1_z_gitlens_open_file@1"
				},
				{
					"submenu": "gitlens/editor/history",
					"when": "resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && config.gitlens.menus.editor.history",
					"group": "1_z_gitlens_open_file@2"
				}
			],
			"editor/context/copy": [
				{
					"command": "gitlens.copyRelativePathToClipboard",
					"when": "resourceScheme in gitlens:schemes:trackable && editorTextFocus && config.gitlens.menus.editor.clipboard",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.copyDeepLinkToLines",
					"when": "resourceScheme in gitlens:schemes:trackable && editorTextFocus && config.gitlens.menus.editor.clipboard && editorHasSelection",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.copyDeepLinkToFile",
					"when": "resourceScheme in gitlens:schemes:trackable && editorTextFocus && config.gitlens.menus.editor.clipboard",
					"group": "1_gitlens@3"
				},
				{
					"command": "gitlens.copyDeepLinkToFileAtRevision",
					"when": "resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard",
					"group": "1_gitlens@4"
				},
				{
					"command": "gitlens.copyRemoteFileUrlToClipboard",
					"when": "resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard",
					"group": "1_gitlens_remote@1"
				},
				{
					"command": "gitlens.copyRemoteFileUrlFrom",
					"when": "resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard",
					"group": "1_gitlens_remote@2"
				},
				{
					"command": "gitlens.copyRemoteCommitUrl",
					"when": "resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard",
					"group": "1_gitlens_remote@3"
				},
				{
					"command": "gitlens.copyShaToClipboard",
					"when": "resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.copyMessageToClipboard",
					"when": "resourceScheme in gitlens:schemes:trackable && resource in gitlens:tabs:tracked && editorTextFocus && config.gitlens.menus.editor.clipboard",
					"group": "3_gitlens@2"
				}
			],
			"editor/lineNumber/context": [
				{
					"submenu": "gitlens/editor/lineNumber/context/share",
					"when": "resourceScheme in gitlens:schemes:trackable && config.gitlens.menus.editorGutter.share && gitlens:repos:withRemotes",
					"group": "2_gitlens@2"
				},
				{
					"submenu": "gitlens/editor/lineNumber/context/changes",
					"when": "resourceScheme in gitlens:schemes:trackable && config.gitlens.menus.editorGutter.compare",
					"group": "3_gitlens@1"
				},
				{
					"submenu": "gitlens/editor/lineNumber/context/openOn",
					"when": "resourceScheme in gitlens:schemes:trackable && config.gitlens.menus.editorGutter.remote && gitlens:repos:withRemotes",
					"group": "3_gitlens@2"
				}
			],
			"editor/title": [
				{
					"command": "gitlens.graph.refresh",
					"when": "activeWebviewPanelId === gitlens.graph",
					"group": "navigation@-99"
				},
				{
					"command": "gitlens.timeline.refresh",
					"when": "activeWebviewPanelId === gitlens.timeline",
					"group": "navigation@-99"
				},
				{
					"submenu": "gitlens/graph/configuration",
					"when": "activeWebviewPanelId === gitlens.graph",
					"group": "navigation@-98"
				},
				{
					"command": "gitlens.graph.split",
					"when": "activeWebviewPanelId == gitlens.graph && resourceScheme == webview-panel && config.gitlens.graph.allowMultiple",
					"group": "navigation@-97"
				},
				{
					"command": "gitlens.timeline.split",
					"when": "activeWebviewPanelId == gitlens.timeline && resourceScheme == webview-panel && config.gitlens.visualHistory.allowMultiple",
					"group": "navigation@-97"
				},
				{
					"command": "gitlens.clearFileAnnotations",
					"when": "resource in gitlens:tabs:blameable && (gitlens:window:annotated == computed || (resource in gitlens:tabs:annotated && resource not in gitlens:tabs:annotated:computing)) && config.gitlens.menus.editorGroup.blame",
					"group": "navigation@100"
				},
				{
					"command": "gitlens.computingFileAnnotations",
					"when": "resource in gitlens:tabs:blameable && (gitlens:window:annotated == computing || resource in gitlens:tabs:annotated:computing) && config.gitlens.menus.editorGroup.blame",
					"group": "navigation@100"
				},
				{
					"command": "gitlens.toggleFileBlame",
					"when": "resource in gitlens:tabs:blameable && resource not in gitlens:tabs:annotated && config.gitlens.menus.editorGroup.blame && config.gitlens.fileAnnotations.command == blame",
					"group": "navigation@100",
					"alt": "gitlens.toggleFileHeatmap"
				},
				{
					"command": "gitlens.toggleFileChanges",
					"when": "resource in gitlens:tabs:blameable && resource not in gitlens:tabs:annotated && config.gitlens.menus.editorGroup.blame && config.gitlens.fileAnnotations.command == changes && !gitlens:hasVirtualFolders",
					"group": "navigation@100",
					"alt": "gitlens.toggleFileBlame"
				},
				{
					"command": "gitlens.toggleFileHeatmap",
					"when": "resource in gitlens:tabs:blameable && resource not in gitlens:tabs:annotated && config.gitlens.menus.editorGroup.blame && config.gitlens.fileAnnotations.command == heatmap",
					"group": "navigation@100",
					"alt": "gitlens.toggleFileBlame"
				},
				{
					"submenu": "gitlens/editor/annotations",
					"when": "resource in gitlens:tabs:blameable && resource not in gitlens:tabs:annotated && config.gitlens.menus.editorGroup.blame && !config.gitlens.fileAnnotations.command && !gitlens:window:annotated",
					"group": "navigation@100"
				},
				{
					"command": "gitlens.diffWithPrevious",
					"when": "resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && !isInDiffEditor",
					"group": "navigation@97",
					"alt": "gitlens.diffWithRevision"
				},
				{
					"command": "gitlens.diffWithPreviousInDiffLeft",
					"when": "resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffEditor && !isInDiffRightEditor",
					"group": "navigation@97",
					"alt": "gitlens.diffWithRevision"
				},
				{
					"command": "gitlens.diffWithPreviousInDiffRight",
					"when": "resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor",
					"group": "navigation@97",
					"alt": "gitlens.diffWithRevision"
				},
				{
					"command": "gitlens.showQuickRevisionDetails",
					"when": "resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && !isInDiffEditor",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.showQuickRevisionDetailsInDiffLeft",
					"when": "resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffEditor && !isInDiffRightEditor",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.showQuickRevisionDetailsInDiffRight",
					"when": "resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.diffWithNext",
					"when": "resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && !isInDiffEditor",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.diffWithNextInDiffLeft",
					"when": "resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffEditor && !isInDiffRightEditor",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.diffWithNextInDiffRight",
					"when": "resource in gitlens:tabs:tracked && config.gitlens.menus.editorGroup.compare && isInDiffRightEditor",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.openWorkingFile",
					"when": "resourceScheme == git && gitlens:enabled && !isInDiffEditor",
					"group": "navigation@-98"
				},
				{
					"command": "gitlens.diffWithWorking",
					"when": "resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && !isInDiffEditor",
					"group": "navigation@-99"
				},
				{
					"command": "gitlens.diffWithWorkingInDiffLeft",
					"when": "resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor",
					"group": "navigation@-99"
				},
				{
					"command": "gitlens.diffWithWorkingInDiffRight",
					"when": "resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffRightEditor",
					"group": "navigation@-99"
				},
				{
					"command": "gitlens.openWorkingFile",
					"when": "resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && !isInDiffEditor",
					"group": "navigation@-98"
				},
				{
					"command": "gitlens.openWorkingFileInDiffLeft",
					"when": "resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor",
					"group": "navigation@-98"
				},
				{
					"command": "gitlens.openWorkingFileInDiffRight",
					"when": "resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffRightEditor",
					"group": "navigation@-98"
				},
				{
					"command": "gitlens.openRevisionFileInDiffLeft",
					"when": "resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor",
					"group": "navigation@-97"
				},
				{
					"command": "gitlens.openRevisionFileInDiffRight",
					"when": "resourceScheme =~ /^(gitlens|pr)$/ && gitlens:enabled && isInDiffRightEditor",
					"group": "navigation@-97"
				},
				{
					"command": "gitlens.openPatch",
					"when": "false && editorLangId == diff"
				}
			],
			"editor/title/context": [
				{
					"command": "gitlens.graph.split",
					"when": "activeWebviewPanelId == gitlens.graph && resourceScheme == webview-panel && config.gitlens.graph.allowMultiple",
					"group": "6_split_in_group_gitlens@2"
				},
				{
					"command": "gitlens.timeline.split",
					"when": "activeWebviewPanelId == gitlens.timeline && resourceScheme == webview-panel && config.gitlens.visualHistory.allowMultiple",
					"group": "6_split_in_group_gitlens@2"
				},
				{
					"command": "gitlens.openWorkingFile",
					"when": "resourceScheme == gitlens && resourceScheme in gitlens:schemes:trackable",
					"group": "2_a_gitlens@0"
				},
				{
					"command": "gitlens.copyRemoteFileUrlWithoutRange",
					"when": "resourceScheme in gitlens:schemes:trackable && gitlens:enabled && config.gitlens.menus.editorTab.clipboard && gitlens:repos:withRemotes",
					"group": "1_cutcopypaste@100"
				},
				{
					"command": "gitlens.copyRemoteFileUrlFrom",
					"when": "resourceScheme in gitlens:schemes:trackable && gitlens:enabled && config.gitlens.menus.editorTab.clipboard && gitlens:repos:withRemotes",
					"group": "1_cutcopypaste@101"
				},
				{
					"submenu": "gitlens/editor/changes",
					"when": "resourceScheme in gitlens:schemes:trackable && gitlens:enabled && config.gitlens.menus.editorTab.compare",
					"group": "2_a_gitlens_open@1"
				},
				{
					"submenu": "gitlens/editor/openOn",
					"when": "resourceScheme in gitlens:schemes:trackable && gitlens:enabled && config.gitlens.menus.editorTab.remote && gitlens:repos:withRemotes",
					"group": "2_a_gitlens_open@2"
				},
				{
					"submenu": "gitlens/editor/history",
					"when": "resourceScheme in gitlens:schemes:trackable && gitlens:enabled && config.gitlens.menus.editorTab.history",
					"group": "2_a_gitlens_open_file@1"
				}
			],
			"explorer/context": [
				{
					"submenu": "gitlens/explorer/changes",
					"when": "!explorerResourceIsRoot && gitlens:enabled && config.gitlens.menus.explorer.compare",
					"group": "4_t_gitlens@0"
				},
				{
					"submenu": "gitlens/explorer/openOn",
					"when": "!explorerResourceIsRoot && gitlens:enabled && config.gitlens.menus.explorer.remote && gitlens:repos:withRemotes",
					"group": "4_t_gitlens@1"
				},
				{
					"submenu": "gitlens/explorer/file/history",
					"when": "!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.history && !listMultiSelection",
					"group": "4_timeline@0"
				},
				{
					"submenu": "gitlens/explorer/folder/history",
					"when": "(explorerResourceIsRoot || explorerResourceIsFolder) && gitlens:enabled && !listMultiSelection && config.gitlens.menus.explorer.history",
					"group": "4_timeline@0"
				},
				{
					"command": "gitlens.copyRemoteFileUrlWithoutRange",
					"when": "!explorerResourceIsRoot && gitlens:enabled && config.gitlens.menus.explorer.clipboard && gitlens:repos:withRemotes",
					"group": "6_copypath@100"
				},
				{
					"command": "gitlens.copyRemoteFileUrlFrom",
					"when": "!explorerResourceIsRoot && gitlens:enabled && config.gitlens.menus.explorer.clipboard && gitlens:repos:withRemotes",
					"group": "6_copypath@101"
				}
			],
			"extension/context": [
				{
					"command": "gitlens.getStarted",
					"when": "extension =~ /^eamodio.gitlens?$/ && extensionStatus == installed",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.showSettingsPage",
					"when": "extension =~ /^eamodio.gitlens?$/ && extensionStatus == installed",
					"group": "9_gitlens@3"
				}
			],
			"git.commit": [
				{
					"command": "gitlens.addAuthors",
					"when": "gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders && config.gitlens.menus.scmRepository.authors",
					"group": "4_gitlens@1"
				},
				{
					"command": "gitlens.copyPatchToClipboard",
					"when": "gitlens:enabled && scmProvider == git && config.gitlens.menus.scmRepository.patch",
					"group": "4_gitlens@2"
				},
				{
					"command": "gitlens.shareAsCloudPatch",
					"when": "gitlens:enabled && scmProvider == git && config.gitlens.menus.scmRepository.patch",
					"group": "4_gitlens@3"
				},
				{
					"command": "gitlens.scm.ai.generateCommitMessage",
					"when": "gitlens:enabled && !gitlens:readonly && !gitlens:untrusted && gitlens:gk:organization:ai:enabled && config.gitlens.ai.generateCommitMessage.enabled && config.gitlens.menus.scmRepository.generateCommitMessage",
					"group": "4_gitlens@4"
				}
			],
			"gitlens/commit/browse": [
				{
					"command": "gitlens.views.browseRepoAtRevision",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.views.browseRepoBeforeRevision",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.views.browseRepoAtRevisionInNewWindow",
					"group": "1_gitlens@3"
				},
				{
					"command": "gitlens.views.browseRepoBeforeRevisionInNewWindow",
					"group": "1_gitlens@4"
				}
			],
			"gitlens/commit/changes": [
				{
					"command": "gitlens.views.openChangedFileDiffs",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.views.openChangedFileDiffsIndividually",
					"when": "config.gitlens.views.openChangesInMultiDiffEditor",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.views.openChangedFileDiffsWithWorking",
					"group": "1_gitlens@3"
				},
				{
					"command": "gitlens.views.openChangedFileDiffsWithWorkingIndividually",
					"when": "config.gitlens.views.openChangesInMultiDiffEditor",
					"group": "1_gitlens@4"
				},
				{
					"command": "gitlens.views.openChangedFiles",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.views.openChangedFileRevisions",
					"group": "2_gitlens@2"
				},
				{
					"command": "gitlens.views.openOnlyChangedFiles",
					"group": "2_gitlens@3"
				}
			],
			"gitlens/commit/copy": [
				{
					"command": "gitlens.copyShaToClipboard",
					"when": "viewItem =~ /gitlens:(?!(commit|file|remote|repo-folder|repository|stash)\\b)/",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.copyMessageToClipboard",
					"when": "viewItem =~ /gitlens:(?!(commit|file|remote|repo-folder|repository|stash)\\b)/",
					"group": "1_gitlens@3"
				},
				{
					"command": "gitlens.copyRemoteBranchUrl",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/",
					"group": "1_gitlens@4"
				}
			],
			"gitlens/commit/file/changes": [
				{
					"command": "gitlens.views.openChangesWithWorking",
					"when": "viewItem =~ /gitlens:file\\b(?!.*?\\b\\+conflicted\\b)/",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.views.openPreviousChangesWithWorking",
					"when": "viewItem =~ /gitlens:file\\b(?!.*?\\b\\+(conflicted|stashed|staged|unstaged)\\b)/",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.diffWithRevision",
					"group": "1_gitlens@3"
				},
				{
					"command": "gitlens.diffWithRevisionFrom",
					"group": "1_gitlens@4"
				},
				{
					"command": "gitlens.externalDiff",
					"when": "viewItem =~ /gitlens:file\\b(?!.*?\\b\\+conflicted\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_@1"
				},
				{
					"command": "gitlens.views.highlightChanges",
					"when": "viewItem =~ /gitlens:file\\b((?=.*?\\b\\+(committed|stashed)\\b)|:results)/",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.views.highlightRevisionChanges",
					"when": "viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/",
					"group": "2_gitlens@2"
				},
				{
					"command": "gitlens.views.openChangesWithMergeBase",
					"when": "viewItem =~ /gitlens:file:results\\b/",
					"group": "1_gitlens@2"
				}
			],
			"gitlens/commit/file/commit": [
				{
					"command": "gitlens.showInDetailsView",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/",
					"group": "navigation@1"
				},
				{
					"command": "gitlens.showInCommitGraph",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)\\b/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/",
					"group": "navigation@2"
				},
				{
					"command": "gitlens.views.openCommitOnRemote",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && gitlens:repos:withRemotes",
					"group": "navigation@3",
					"alt": "gitlens.copyRemoteCommitUrl"
				},
				{
					"command": "gitlens.revealCommitInView",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/",
					"group": "navigation@4"
				},
				{
					"command": "gitlens.views.undoCommit",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+HEAD\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@0"
				},
				{
					"command": "gitlens.views.push",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.pushToCommit",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.revert",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@3"
				},
				{
					"command": "gitlens.views.resetToCommit",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@4"
				},
				{
					"command": "gitlens.views.resetCommit",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@5"
				},
				{
					"command": "gitlens.views.rebaseOntoCommit",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@6"
				},
				{
					"command": "gitlens.views.switchToCommit",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@7"
				},
				{
					"command": "gitlens.views.createBranch",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_secondary_actions@1"
				},
				{
					"command": "gitlens.createPatch",
					"when": "false && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/",
					"group": "1_gitlens_secondary_actions@2"
				},
				{
					"command": "gitlens.createCloudPatch",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && config.gitlens.cloudPatches.enabled && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted",
					"group": "1_gitlens_secondary_actions@3"
				},
				{
					"command": "gitlens.views.createTag",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_secondary_actions@4"
				}
			],
			"gitlens/commit/file/history": [
				{
					"command": "gitlens.openFileHistory",
					"when": "view != gitlens.views.fileHistory/",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.showFileInTimeline",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.quickOpenFileHistory",
					"group": "1_gitlens_quick@1"
				}
			],
			"gitlens/comparison/results/files/filter": [
				{
					"command": "gitlens.views.setResultsFilesFilterOff",
					"when": "viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/",
					"group": "navigation@1"
				},
				{
					"command": "gitlens.views.setResultsFilesFilterOnLeft",
					"group": "navigation_1@1"
				},
				{
					"command": "gitlens.views.setResultsFilesFilterOnRight",
					"group": "navigation_1@2"
				}
			],
			"gitlens/comparison/results/files/filter/inline": [
				{
					"command": "gitlens.views.setResultsFilesFilterOff",
					"when": "viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/",
					"group": "navigation@1"
				},
				{
					"command": "gitlens.views.setResultsFilesFilterOnLeft",
					"group": "navigation_1@1"
				},
				{
					"command": "gitlens.views.setResultsFilesFilterOnRight",
					"group": "navigation_1@2"
				}
			],
			"gitlens/comparison/results/files/filtered": [
				{
					"command": "gitlens.views.setResultsFilesFilterOff",
					"when": "viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/",
					"group": "navigation@1"
				},
				{
					"command": "gitlens.views.setResultsFilesFilterOnLeft",
					"group": "navigation_1@1"
				},
				{
					"command": "gitlens.views.setResultsFilesFilterOnRight",
					"group": "navigation_1@2"
				}
			],
			"gitlens/comparison/results/files/filtered/inline": [
				{
					"command": "gitlens.views.setResultsFilesFilterOff",
					"when": "viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filtered\\b)/",
					"group": "navigation@1"
				},
				{
					"command": "gitlens.views.setResultsFilesFilterOnLeft",
					"group": "navigation_1@1"
				},
				{
					"command": "gitlens.views.setResultsFilesFilterOnRight",
					"group": "navigation_1@2"
				}
			],
			"gitlens/editor/annotations": [
				{
					"command": "gitlens.clearFileAnnotations",
					"when": "resource in gitlens:tabs:blameable && (gitlens:window:annotated || resource in gitlens:tabs:annotated)",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.toggleFileBlame",
					"when": "resource in gitlens:tabs:blameable && !isInDiffEditor",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.toggleFileBlameInDiffLeft",
					"when": "resource in gitlens:tabs:blameable && isInDiffEditor && !isInDiffRightEditor",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.toggleFileBlameInDiffRight",
					"when": "resource in gitlens:tabs:blameable && isInDiffRightEditor",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.toggleFileHeatmap",
					"when": "resource in gitlens:tabs:blameable && !isInDiffEditor",
					"group": "2_gitlens@2"
				},
				{
					"command": "gitlens.toggleFileHeatmapInDiffLeft",
					"when": "resource in gitlens:tabs:blameable && isInDiffEditor && !isInDiffRightEditor",
					"group": "2_gitlens@2"
				},
				{
					"command": "gitlens.toggleFileHeatmapInDiffRight",
					"when": "resource in gitlens:tabs:blameable && isInDiffRightEditor",
					"group": "2_gitlens@2"
				},
				{
					"command": "gitlens.toggleFileChanges",
					"when": "resource in gitlens:tabs:blameable && !gitlens:hasVirtualFolders",
					"group": "2_gitlens@3"
				},
				{
					"command": "gitlens.showSettingsPage!file-annotations",
					"when": "resource in gitlens:tabs:blameable",
					"group": "8_gitlens@1"
				}
			],
			"gitlens/editor/changes": [
				{
					"command": "gitlens.diffWithPrevious",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.diffWithWorking",
					"when": "resourceScheme == gitlens",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.diffWithRevision",
					"group": "1_gitlens@3"
				},
				{
					"command": "gitlens.diffWithRevisionFrom",
					"group": "1_gitlens@4"
				}
			],
			"gitlens/editor/context/changes": [
				{
					"command": "gitlens.diffLineWithPrevious",
					"when": "resource in gitlens:tabs:tracked && editorTextFocus",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.diffLineWithWorking",
					"when": "resource in gitlens:tabs:tracked && editorTextFocus",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.diffWithPrevious",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.diffWithWorking",
					"when": "resourceScheme == gitlens",
					"group": "2_gitlens@2"
				},
				{
					"command": "gitlens.diffWithRevision",
					"group": "2_gitlens@3"
				},
				{
					"command": "gitlens.diffWithRevisionFrom",
					"group": "2_gitlens@4"
				},
				{
					"command": "gitlens.showQuickCommitFileDetails",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.showCommitsInView",
					"when": "editorTextFocus && editorHasSelection",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.showLineCommitInView",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.showQuickRevisionDetails",
					"when": "resourceScheme =~ /^(gitlens|git|pr)$/ && gitlens:enabled && !isInDiffEditor",
					"group": "3_gitlens_1@1"
				},
				{
					"command": "gitlens.showQuickRevisionDetailsInDiffLeft",
					"when": "resourceScheme =~ /^(gitlens|git|pr)$/ && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor",
					"group": "3_gitlens_1@1"
				},
				{
					"command": "gitlens.showQuickRevisionDetailsInDiffRight",
					"when": "resourceScheme =~ /^(gitlens|git|pr)$/ && gitlens:enabled && isInDiffRightEditor",
					"group": "3_gitlens_1@1"
				}
			],
			"gitlens/editor/context/openOn": [
				{
					"command": "gitlens.openFileOnRemote",
					"group": "1_gitlens@2",
					"alt": "gitlens.copyRemoteFileUrlToClipboard"
				},
				{
					"command": "gitlens.openFileOnRemoteFrom",
					"group": "1_gitlens@3",
					"alt": "gitlens.copyRemoteFileUrlFrom"
				},
				{
					"command": "gitlens.openCommitOnRemote",
					"group": "1_gitlens_commit@1",
					"alt": "gitlens.copyRemoteCommitUrl"
				}
			],
			"gitlens/editor/history": [
				{
					"command": "gitlens.openFileHistory",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.showFileInTimeline",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.quickOpenFileHistory",
					"group": "1_gitlens_quick@1"
				}
			],
			"gitlens/editor/lineNumber/context/changes": [
				{
					"command": "gitlens.diffLineWithPrevious",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.diffLineWithWorking",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.showQuickCommitFileDetails",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.showLineCommitInView",
					"group": "3_gitlens@2"
				}
			],
			"gitlens/editor/lineNumber/context/openOn": [
				{
					"command": "gitlens.openFileOnRemote",
					"group": "1_gitlens@2",
					"alt": "gitlens.copyRemoteFileUrlToClipboard"
				},
				{
					"command": "gitlens.openFileOnRemoteFrom",
					"group": "1_gitlens@3",
					"alt": "gitlens.copyRemoteFileUrlFrom"
				},
				{
					"command": "gitlens.openCommitOnRemote",
					"group": "1_gitlens_commit@1",
					"alt": "gitlens.copyRemoteCommitUrl"
				}
			],
			"gitlens/editor/lineNumber/context/share": [
				{
					"command": "gitlens.copyDeepLinkToLines",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.copyDeepLinkToFile",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.copyDeepLinkToFileAtRevision",
					"when": "resource in gitlens:tabs:tracked",
					"group": "1_gitlens@3"
				},
				{
					"command": "gitlens.copyRemoteFileUrlToClipboard",
					"group": "1_gitlens_remote@2"
				},
				{
					"command": "gitlens.copyRemoteFileUrlFrom",
					"group": "1_gitlens_remote@3"
				},
				{
					"command": "gitlens.copyRemoteCommitUrl",
					"group": "1_gitlens_remote_commit@1"
				}
			],
			"gitlens/editor/openOn": [
				{
					"command": "gitlens.openFileOnRemote",
					"group": "1_gitlens@1",
					"alt": "gitlens.copyRemoteFileUrlWithoutRange"
				},
				{
					"command": "gitlens.openFileOnRemoteFrom",
					"group": "1_gitlens@2",
					"alt": "gitlens.copyRemoteFileUrlFrom"
				}
			],
			"gitlens/explorer/changes": [
				{
					"command": "gitlens.diffFolderWithRevision",
					"when": "explorerResourceIsFolder && !gitlens:hasVirtualFolders",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.diffWithPrevious",
					"when": "!explorerResourceIsFolder",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.diffFolderWithRevisionFrom",
					"when": "explorerResourceIsFolder && !gitlens:hasVirtualFolders",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.diffWithRevision",
					"when": "!explorerResourceIsFolder",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.diffWithRevisionFrom",
					"when": "!explorerResourceIsFolder",
					"group": "1_gitlens@3"
				}
			],
			"gitlens/explorer/file/history": [
				{
					"command": "gitlens.openFileHistory",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.showFileInTimeline",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.quickOpenFileHistory",
					"group": "1_gitlens_quick@1"
				}
			],
			"gitlens/explorer/folder/history": [
				{
					"command": "gitlens.openFolderHistory",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.showFolderInTimeline",
					"group": "1_gitlens@2"
				}
			],
			"gitlens/explorer/openOn": [
				{
					"command": "gitlens.openFileOnRemote",
					"group": "1_gitlens@1",
					"alt": "gitlens.copyRemoteFileUrlWithoutRange"
				},
				{
					"command": "gitlens.openFileOnRemoteFrom",
					"group": "1_gitlens@2",
					"alt": "gitlens.copyRemoteFileUrlFrom"
				}
			],
			"gitlens/graph/commit/changes": [
				{
					"command": "gitlens.graph.openChangedFileDiffs",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.graph.openChangedFileDiffsIndividually",
					"when": "config.gitlens.views.openChangesInMultiDiffEditor",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.graph.openChangedFileDiffsWithWorking",
					"when": "webviewItem != gitlens:wip",
					"group": "1_gitlens@3"
				},
				{
					"command": "gitlens.graph.openChangedFileDiffsWithWorkingIndividually",
					"when": "config.gitlens.views.openChangesInMultiDiffEditor",
					"group": "1_gitlens@4"
				},
				{
					"command": "gitlens.graph.openChangedFiles",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.graph.openChangedFileRevisions",
					"group": "2_gitlens@2"
				},
				{
					"command": "gitlens.graph.openOnlyChangedFiles",
					"group": "2_gitlens@3"
				}
			],
			"gitlens/graph/configuration": [
				{
					"command": "gitlens.graph.switchToEditorLayout",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.graph.switchToPanelLayout",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.showSettingsPage!commit-graph",
					"group": "9_gitlens@1"
				}
			],
			"gitlens/graph/markers": [
				{
					"command": "gitlens.graph.scrollMarkerLocalBranchOff",
					"when": "webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:localBranches:enabled\\b/",
					"group": "4_settings@1"
				},
				{
					"command": "gitlens.graph.scrollMarkerLocalBranchOn",
					"when": "webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:localBranches:disabled\\b/",
					"group": "4_settings@1"
				},
				{
					"command": "gitlens.graph.scrollMarkerRemoteBranchOff",
					"when": "webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:remoteBranches:enabled\\b/",
					"group": "4_settings@2"
				},
				{
					"command": "gitlens.graph.scrollMarkerRemoteBranchOn",
					"when": "webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:remoteBranches:disabled\\b/",
					"group": "4_settings@2"
				},
				{
					"command": "gitlens.graph.scrollMarkerPullRequestOff",
					"when": "webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:pullRequests:enabled\\b/",
					"group": "4_settings@3"
				},
				{
					"command": "gitlens.graph.scrollMarkerPullRequestOn",
					"when": "webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:pullRequests:disabled\\b/",
					"group": "4_settings@3"
				},
				{
					"command": "gitlens.graph.scrollMarkerStashOff",
					"when": "webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:stashes:enabled\\b/",
					"group": "4_settings@4"
				},
				{
					"command": "gitlens.graph.scrollMarkerStashOn",
					"when": "webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:stashes:disabled\\b/",
					"group": "4_settings@4"
				},
				{
					"command": "gitlens.graph.scrollMarkerTagOff",
					"when": "webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:tags:enabled\\b/",
					"group": "4_settings@5"
				},
				{
					"command": "gitlens.graph.scrollMarkerTagOn",
					"when": "webviewItem =~ /gitlens:graph:settings\\b/ && webviewItemValue =~ /\\bscrollMarker:tags:disabled\\b/",
					"group": "4_settings@5"
				}
			],
			"gitlens/scm/resourceFolder/changes": [
				{
					"command": "gitlens.diffFolderWithRevision",
					"when": "!gitlens:hasVirtualFolders",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.diffFolderWithRevisionFrom",
					"when": "!gitlens:hasVirtualFolders",
					"group": "1_gitlens@2"
				}
			],
			"gitlens/scm/resourceFolder/history": [
				{
					"command": "gitlens.openFolderHistory",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.showFolderInTimeline",
					"group": "1_gitlens@2"
				}
			],
			"gitlens/scm/resourceGroup/changes": [
				{
					"command": "gitlens.externalDiffAll",
					"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.diffDirectoryWithHead",
					"when": "!gitlens:hasVirtualFolders",
					"group": "2_gitlens@2"
				},
				{
					"command": "gitlens.diffDirectory",
					"when": "!gitlens:hasVirtualFolders",
					"group": "2_gitlens@3"
				}
			],
			"gitlens/scm/resourceState/changes": [
				{
					"command": "gitlens.diffWithRevision",
					"when": "!gitlens:hasVirtualFolders",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.diffWithRevisionFrom",
					"when": "!gitlens:hasVirtualFolders",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.externalDiff",
					"when": "!gitlens:readonly && !gitlens:untrusted && !gitlens:hasVirtualFolders",
					"group": "2_gitlens@1"
				}
			],
			"gitlens/scm/resourceState/history": [
				{
					"command": "gitlens.openFileHistory",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.showFileInTimeline",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.quickOpenFileHistory",
					"group": "1_gitlens_quick@1"
				}
			],
			"gitlens/scm/resourceState/openOn": [
				{
					"command": "gitlens.openFileOnRemote",
					"group": "1_gitlens@1",
					"alt": "gitlens.copyRemoteFileUrlWithoutRange"
				},
				{
					"command": "gitlens.openFileOnRemoteFrom",
					"group": "1_gitlens@2",
					"alt": "gitlens.copyRemoteFileUrlFrom"
				}
			],
			"gitlens/share": [
				{
					"command": "gitlens.copyRemoteFileUrlWithoutRange",
					"when": "scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && !listMultiSelection && gitlens:enabled && gitlens:repos:withRemotes",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.copyRemoteFileUrlFrom",
					"when": "scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && !listMultiSelection && gitlens:enabled && gitlens:repos:withRemotes",
					"group": "2_gitlens@2"
				},
				{
					"command": "gitlens.copyDeepLinkToBranch",
					"when": "viewItem =~ /gitlens:(branch\\b(?=.*?\\b\\+(remote|tracking)\\b)|status:upstream(?!:none))\\b/ && !listMultiSelection",
					"group": "1_gitlens@50"
				},
				{
					"command": "gitlens.copyDeepLinkToRepo",
					"when": "viewItem =~ /gitlens:(branch\\b(?=.*?\\b\\+(remote|tracking)\\b)|remote|repo-folder|repository|status:upstream(?!:none))\\b/ && !listMultiSelection",
					"group": "1_gitlens@99"
				},
				{
					"command": "gitlens.copyRemoteBranchUrl",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/ && !listMultiSelection && gitlens:repos:withRemotes",
					"group": "2_gitlens@50"
				},
				{
					"command": "gitlens.shareAsCloudPatch",
					"when": "viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b)|stash|compare:results(?!:))\\b/ && config.gitlens.cloudPatches.enabled && !listMultiSelection && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted",
					"group": "1_a_gitlens@1"
				},
				{
					"command": "gitlens.copyDeepLinkToCommit",
					"when": "viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b))/ && !listMultiSelection",
					"group": "1_gitlens@25"
				},
				{
					"command": "gitlens.views.copyRemoteCommitUrl",
					"when": "viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b))/ && !listMultiSelection && gitlens:repos:withRemotes",
					"group": "2_gitlens@25"
				},
				{
					"command": "gitlens.views.copyRemoteCommitUrl.multi",
					"when": "viewItem =~ /gitlens:(commit|file\\b(?=.*?\\b\\+committed\\b))/ && listMultiSelection && gitlens:repos:withRemotes",
					"group": "2_gitlens@25"
				},
				{
					"command": "gitlens.copyDeepLinkToComparison",
					"when": "viewItem =~ /gitlens:compare:(branch(?=.*?\\b\\+comparing\\b)|results(?!:))\\b/ && !listMultiSelection",
					"group": "1_gitlens@25"
				},
				{
					"command": "gitlens.copyRemoteComparisonUrl",
					"when": "viewItem =~ /gitlens:compare:(results(:commits|(?!:))|branch\\b(?=.*?\\b\\+comparing\\b))/ && !listMultiSelection && gitlens:repos:withRemotes",
					"group": "2_gitlens@50"
				},
				{
					"command": "gitlens.copyDeepLinkToFile",
					"when": "viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && !listMultiSelection && gitlens:repos:withRemotes",
					"group": "1_gitlens@26"
				},
				{
					"command": "gitlens.copyDeepLinkToFileAtRevision",
					"when": "viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && !listMultiSelection && gitlens:repos:withRemotes",
					"group": "1_gitlens@27"
				},
				{
					"command": "gitlens.copyRemoteFileUrlWithoutRange",
					"when": "viewItem =~ /gitlens:(file\\b(?=.*?\\b\\+committed\\b)|history:(file|line)|status:file)\\b/ && !listMultiSelection && gitlens:repos:withRemotes",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.copyRemoteFileUrlFrom",
					"when": "viewItem =~ /gitlens:(file\\b(?=.*?\\b\\+committed\\b)|history:(file|line)|status:file)\\b/ && !listMultiSelection && gitlens:repos:withRemotes",
					"group": "2_gitlens@2"
				},
				{
					"command": "gitlens.copyRemoteRepositoryUrl",
					"when": "viewItem =~ /gitlens:(remote|repo-folder|repository)\\b/ && !listMultiSelection && gitlens:repos:withRemotes",
					"group": "2_gitlens@99"
				},
				{
					"command": "gitlens.copyDeepLinkToTag",
					"when": "viewItem =~ /gitlens:tag\\b/ && !listMultiSelection",
					"group": "1_gitlens@50"
				},
				{
					"command": "gitlens.copyDeepLinkToWorkspace",
					"when": "viewItem =~ /gitlens:workspace\\b/ && !listMultiSelection",
					"group": "1_gitlens@25"
				},
				{
					"command": "gitlens.graph.copyDeepLinkToBranch",
					"when": "webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/ && !listMultiSelection",
					"group": "1_gitlens@50"
				},
				{
					"command": "gitlens.graph.copyDeepLinkToRepo",
					"when": "webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/ && !listMultiSelection",
					"group": "1_gitlens@99"
				},
				{
					"command": "gitlens.graph.copyRemoteBranchUrl",
					"when": "webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)/ && !listMultiSelection && gitlens:repos:withRemotes",
					"group": "2_gitlens@50"
				},
				{
					"command": "gitlens.graph.shareAsCloudPatch",
					"when": "webviewItem =~ /gitlens:(commit|stash)\\b/ && config.gitlens.cloudPatches.enabled && !listMultiSelection && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted",
					"group": "1_a_gitlens@1"
				},
				{
					"command": "gitlens.graph.copyDeepLinkToCommit",
					"when": "webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection",
					"group": "1_gitlens@25"
				},
				{
					"command": "gitlens.graph.copyRemoteCommitUrl",
					"when": "webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && gitlens:repos:withRemotes",
					"group": "2_gitlens@25"
				},
				{
					"command": "gitlens.graph.copyDeepLinkToTag",
					"when": "webviewItem =~ /gitlens:tag\\b/ && !listMultiSelection",
					"group": "1_gitlens@50"
				},
				{
					"command": "gitlens.graph.copyRemoteCommitUrl.multi",
					"when": "webviewItems =~ /gitlens:commit\\b/ && listMultiSelection && gitlens:repos:withRemotes",
					"group": "2_gitlens@25"
				}
			],
			"gitlens/view/repositories/sections": [
				{
					"command": "gitlens.views.repositories.setShowBranchComparisonOff",
					"when": "config.gitlens.views.repositories.showBranchComparison",
					"group": "1_gitlens@0"
				},
				{
					"command": "gitlens.views.repositories.setShowBranchComparisonOn",
					"when": "!config.gitlens.views.repositories.showBranchComparison",
					"group": "1_gitlens@0"
				},
				{
					"command": "gitlens.views.repositories.setShowUpstreamStatusOff",
					"when": "config.gitlens.views.repositories.showUpstreamStatus",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.views.repositories.setShowUpstreamStatusOn",
					"when": "!config.gitlens.views.repositories.showUpstreamStatus",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.views.repositories.setShowCommitsOff",
					"when": "config.gitlens.views.repositories.showCommits",
					"group": "2_gitlens@2"
				},
				{
					"command": "gitlens.views.repositories.setShowCommitsOn",
					"when": "!config.gitlens.views.repositories.showCommits",
					"group": "2_gitlens@2"
				},
				{
					"command": "gitlens.views.repositories.setShowBranchesOff",
					"when": "config.gitlens.views.repositories.showBranches",
					"group": "2_gitlens@3"
				},
				{
					"command": "gitlens.views.repositories.setShowBranchesOn",
					"when": "!config.gitlens.views.repositories.showBranches",
					"group": "2_gitlens@3"
				},
				{
					"command": "gitlens.views.repositories.setShowRemotesOff",
					"when": "config.gitlens.views.repositories.showRemotes",
					"group": "2_gitlens@4"
				},
				{
					"command": "gitlens.views.repositories.setShowRemotesOn",
					"when": "!config.gitlens.views.repositories.showRemotes",
					"group": "2_gitlens@4"
				},
				{
					"command": "gitlens.views.repositories.setShowStashesOff",
					"when": "config.gitlens.views.repositories.showStashes && !gitlens:hasVirtualFolders",
					"group": "2_gitlens@5"
				},
				{
					"command": "gitlens.views.repositories.setShowStashesOn",
					"when": "!config.gitlens.views.repositories.showStashes && !gitlens:hasVirtualFolders",
					"group": "2_gitlens@5"
				},
				{
					"command": "gitlens.views.repositories.setShowTagsOff",
					"when": "config.gitlens.views.repositories.showTags",
					"group": "2_gitlens@6"
				},
				{
					"command": "gitlens.views.repositories.setShowTagsOn",
					"when": "!config.gitlens.views.repositories.showTags",
					"group": "2_gitlens@6"
				},
				{
					"command": "gitlens.views.repositories.setShowWorktreesOff",
					"when": "config.gitlens.views.repositories.showWorktrees",
					"group": "2_gitlens@7"
				},
				{
					"command": "gitlens.views.repositories.setShowWorktreesOn",
					"when": "!config.gitlens.views.repositories.showWorktrees",
					"group": "2_gitlens@7"
				},
				{
					"command": "gitlens.views.repositories.setShowContributorsOff",
					"when": "config.gitlens.views.repositories.showContributors",
					"group": "2_gitlens@8"
				},
				{
					"command": "gitlens.views.repositories.setShowContributorsOn",
					"when": "!config.gitlens.views.repositories.showContributors",
					"group": "2_gitlens@8"
				}
			],
			"gitlens/view/searchAndCompare/new": [
				{
					"command": "gitlens.views.searchAndCompare.searchCommits",
					"when": "view == gitlens.views.searchAndCompare || (view === gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare)",
					"group": "navigation@10"
				},
				{
					"command": "gitlens.views.searchAndCompare.selectForCompare",
					"when": "view == gitlens.views.searchAndCompare || (view === gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare)",
					"group": "navigation@11"
				}
			],
			"gitlens/views/grouped/branches": [
				{
					"command": "gitlens.views.switchToAnotherBranch",
					"when": "gitlens:views:scm:grouped:view == branches && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.title.createBranch",
					"when": "gitlens:views:scm:grouped:view == branches && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "3_gitlens@2"
				},
				{
					"submenu": "gitlens/views/grouped/more",
					"when": "gitlens:views:scm:grouped:view == branches",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.scm.grouped.branches.setAsDefault",
					"when": "gitlens:views:scm:grouped:view == branches && config.gitlens.views.scm.grouped.default != branches",
					"group": "9_gitlens@2"
				},
				{
					"command": "gitlens.views.scm.grouped.branches.detach",
					"when": "gitlens:views:scm:grouped:view == branches",
					"group": "9_gitlens@3"
				}
			],
			"gitlens/views/grouped/commits": [
				{
					"command": "gitlens.pushRepositories",
					"when": "gitlens:views:scm:grouped:view == commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "2_gitlens_actions@1"
				},
				{
					"command": "gitlens.pullRepositories",
					"when": "gitlens:views:scm:grouped:view == commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "2_gitlens_actions@2"
				},
				{
					"command": "gitlens.fetchRepositories",
					"when": "gitlens:views:scm:grouped:view == commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "2_gitlens_actions@3"
				},
				{
					"command": "gitlens.views.switchToAnotherBranch",
					"when": "gitlens:views:scm:grouped:view == commits && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "2_gitlens_actions_@0"
				},
				{
					"command": "gitlens.views.commits.setCommitsFilterOff",
					"when": "gitlens:views:scm:grouped:view == commits && gitlens:views:commits:filtered",
					"group": "8_gitlens_@0"
				},
				{
					"command": "gitlens.views.commits.setCommitsFilterAuthors",
					"when": "gitlens:views:scm:grouped:view == commits",
					"group": "8_gitlens_@1"
				},
				{
					"command": "gitlens.showGraph",
					"when": "gitlens:views:scm:grouped:view == commits && gitlens:plus:enabled",
					"group": "8_gitlens_toggles@0"
				},
				{
					"submenu": "gitlens/views/grouped/more",
					"when": "gitlens:views:scm:grouped:view == commits",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.scm.grouped.commits.setAsDefault",
					"when": "gitlens:views:scm:grouped:view == commits && config.gitlens.views.scm.grouped.default != commits",
					"group": "9_gitlens@2"
				},
				{
					"command": "gitlens.views.scm.grouped.commits.detach",
					"when": "gitlens:views:scm:grouped:view == commits",
					"group": "9_gitlens@3"
				}
			],
			"gitlens/views/grouped/contributors": [
				{
					"command": "gitlens.views.addAuthors",
					"when": "gitlens:views:scm:grouped:view == contributors && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "2_gitlens_actions@1"
				},
				{
					"submenu": "gitlens/views/grouped/more",
					"when": "gitlens:views:scm:grouped:view == contributors",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.scm.grouped.contributors.setAsDefault",
					"when": "gitlens:views:scm:grouped:view == contributors && config.gitlens.views.scm.grouped.default != contributors",
					"group": "9_gitlens@2"
				},
				{
					"command": "gitlens.views.scm.grouped.contributors.detach",
					"when": "gitlens:views:scm:grouped:view == contributors",
					"group": "9_gitlens@3"
				}
			],
			"gitlens/views/grouped/detachOrRegroup": [
				{
					"command": "gitlens.views.scm.grouped.commits.detach",
					"when": "view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.commits",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.views.scm.grouped.commits.regroup",
					"when": "view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.commits",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.views.scm.grouped.branches.detach",
					"when": "view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.branches",
					"group": "2_gitlens@2"
				},
				{
					"command": "gitlens.views.scm.grouped.branches.regroup",
					"when": "view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.branches",
					"group": "2_gitlens@2"
				},
				{
					"command": "gitlens.views.scm.grouped.remotes.detach",
					"when": "view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.remotes",
					"group": "2_gitlens@3"
				},
				{
					"command": "gitlens.views.scm.grouped.remotes.regroup",
					"when": "view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.remotes",
					"group": "2_gitlens@3"
				},
				{
					"command": "gitlens.views.scm.grouped.stashes.detach",
					"when": "view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.stashes",
					"group": "2_gitlens@4"
				},
				{
					"command": "gitlens.views.scm.grouped.stashes.regroup",
					"when": "view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.stashes && !gitlens:hasVirtualFolders",
					"group": "2_gitlens@4"
				},
				{
					"command": "gitlens.views.scm.grouped.tags.detach",
					"when": "view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.tags",
					"group": "2_gitlens@5"
				},
				{
					"command": "gitlens.views.scm.grouped.tags.regroup",
					"when": "view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.tags",
					"group": "2_gitlens@5"
				},
				{
					"command": "gitlens.views.scm.grouped.worktrees.detach",
					"when": "view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.worktrees && gitlens:plus:enabled && !gitlens:hasVirtualFolders",
					"group": "2_gitlens@6"
				},
				{
					"command": "gitlens.views.scm.grouped.worktrees.regroup",
					"when": "view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.worktrees && gitlens:plus:enabled && !gitlens:hasVirtualFolders",
					"group": "2_gitlens@6"
				},
				{
					"command": "gitlens.views.scm.grouped.contributors.detach",
					"when": "view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.contributors",
					"group": "2_gitlens@7"
				},
				{
					"command": "gitlens.views.scm.grouped.contributors.regroup",
					"when": "view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.contributors",
					"group": "2_gitlens@7"
				},
				{
					"command": "gitlens.views.scm.grouped.repositories.detach",
					"when": "view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.repositories",
					"group": "2_gitlens@8"
				},
				{
					"command": "gitlens.views.scm.grouped.repositories.regroup",
					"when": "view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.repositories",
					"group": "2_gitlens@8"
				},
				{
					"command": "gitlens.views.scm.grouped.searchAndCompare.detach",
					"when": "view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.searchAndCompare",
					"group": "2_gitlens@9"
				},
				{
					"command": "gitlens.views.scm.grouped.searchAndCompare.regroup",
					"when": "view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.searchAndCompare",
					"group": "2_gitlens@9"
				},
				{
					"command": "gitlens.views.scm.grouped.launchpad.detach",
					"when": "view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.launchpad",
					"group": "2_gitlens@10"
				},
				{
					"command": "gitlens.views.scm.grouped.launchpad.regroup",
					"when": "view == gitlens.views.scm.grouped && !config.gitlens.views.scm.grouped.views.launchpad",
					"group": "2_gitlens@10"
				},
				{
					"command": "gitlens.views.scm.grouped.detachAll",
					"when": "view == gitlens.views.scm.grouped",
					"group": "9_gitlens@98"
				},
				{
					"command": "gitlens.views.scm.grouped.regroupAll",
					"when": "view == gitlens.views.scm.grouped",
					"group": "9_gitlens@99"
				}
			],
			"gitlens/views/grouped/launchpad": [
				{
					"command": "gitlens.views.launchpad.info",
					"when": "gitlens:views:scm:grouped:view == launchpad",
					"group": "2_gitlens_actions@1"
				},
				{
					"submenu": "gitlens/views/grouped/more",
					"when": "gitlens:views:scm:grouped:view == launchpad",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.scm.grouped.launchpad.setAsDefault",
					"when": "gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.scm.grouped.default != launchpad",
					"group": "9_gitlens@2"
				},
				{
					"command": "gitlens.views.scm.grouped.launchpad.detach",
					"when": "gitlens:views:scm:grouped:view == launchpad",
					"group": "9_gitlens@3"
				}
			],
			"gitlens/views/grouped/more": [
				{
					"command": "gitlens.views.branches.setLayoutToList",
					"when": "gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.branches.layout == tree",
					"group": "3_gitlens@0"
				},
				{
					"command": "gitlens.views.branches.setLayoutToTree",
					"when": "gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.branches.layout == list",
					"group": "3_gitlens@0"
				},
				{
					"command": "gitlens.views.branches.setFilesLayoutToAuto",
					"when": "gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.files.layout == tree",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.branches.setFilesLayoutToList",
					"when": "gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.files.layout == auto",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.branches.setFilesLayoutToTree",
					"when": "gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.files.layout == list",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.branches.setShowAvatarsOff",
					"when": "gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.branches.setShowAvatarsOn",
					"when": "gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && !config.gitlens.views.branches.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.branches.setShowBranchComparisonOff",
					"when": "gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.showBranchComparison",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.branches.setShowBranchComparisonOn",
					"when": "gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && !config.gitlens.views.branches.showBranchComparison",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.branches.setShowBranchPullRequestOff",
					"when": "gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.pullRequests.enabled && config.gitlens.views.branches.pullRequests.showForBranches",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.branches.setShowBranchPullRequestOn",
					"when": "gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && !config.gitlens.views.branches.pullRequests.enabled && !config.gitlens.views.branches.pullRequests.showForBranches",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.branches.setShowRemoteBranchesOff",
					"when": "gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.showRemoteBranches && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@5"
				},
				{
					"command": "gitlens.views.branches.setShowRemoteBranchesOn",
					"when": "gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && !config.gitlens.views.branches.showRemoteBranches && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@5"
				},
				{
					"command": "gitlens.views.branches.setShowStashesOff",
					"when": "gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && config.gitlens.views.branches.showStashes && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@6"
				},
				{
					"command": "gitlens.views.branches.setShowStashesOn",
					"when": "gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped && !config.gitlens.views.branches.showStashes && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@6"
				},
				{
					"command": "gitlens.showSettingsPage!branches-view",
					"when": "gitlens:views:scm:grouped:view == branches && view == gitlens.views.scm.grouped",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.commits.setFilesLayoutToAuto",
					"when": "gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.files.layout == tree",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.commits.setFilesLayoutToList",
					"when": "gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.files.layout == auto",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.commits.setFilesLayoutToTree",
					"when": "gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.files.layout == list",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.commits.setShowAvatarsOff",
					"when": "gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.commits.setShowAvatarsOn",
					"when": "gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && !config.gitlens.views.commits.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.commits.setShowBranchComparisonOff",
					"when": "gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.showBranchComparison",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.commits.setShowBranchComparisonOn",
					"when": "gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && !config.gitlens.views.commits.showBranchComparison",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.commits.setShowBranchPullRequestOff",
					"when": "gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.pullRequests.enabled && config.gitlens.views.commits.pullRequests.showForBranches",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.commits.setShowBranchPullRequestOn",
					"when": "gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && !config.gitlens.views.commits.pullRequests.enabled && !config.gitlens.views.commits.pullRequests.showForBranches",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.commits.setShowMergeCommitsOff",
					"when": "gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && !gitlens:views:commits:hideMergeCommits",
					"group": "5_gitlens@5"
				},
				{
					"command": "gitlens.views.commits.setShowMergeCommitsOn",
					"when": "gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && gitlens:views:commits:hideMergeCommits",
					"group": "5_gitlens@5"
				},
				{
					"command": "gitlens.views.commits.setShowStashesOff",
					"when": "gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && config.gitlens.views.commits.showStashes && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@6"
				},
				{
					"command": "gitlens.views.commits.setShowStashesOn",
					"when": "gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped && !config.gitlens.views.commits.showStashes && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@6"
				},
				{
					"command": "gitlens.showSettingsPage!commits-view",
					"when": "gitlens:views:scm:grouped:view == commits && view == gitlens.views.scm.grouped",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.contributors.setShowAllBranchesOff",
					"when": "gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.contributors.showAllBranches",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.contributors.setShowAllBranchesOn",
					"when": "gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && !config.gitlens.views.contributors.showAllBranches",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.contributors.setFilesLayoutToAuto",
					"when": "gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.contributors.files.layout == tree",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.contributors.setFilesLayoutToList",
					"when": "gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.contributors.files.layout == auto",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.contributors.setFilesLayoutToTree",
					"when": "gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.contributors.files.layout == list",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.contributors.setShowAvatarsOff",
					"when": "gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.contributors.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.contributors.setShowAvatarsOn",
					"when": "gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && !config.gitlens.views.contributors.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.contributors.setShowMergeCommitsOff",
					"when": "gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && !gitlens:views:contributors:hideMergeCommits",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.contributors.setShowMergeCommitsOn",
					"when": "gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && gitlens:views:contributors:hideMergeCommits",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.contributors.setShowStatisticsOff",
					"when": "gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && config.gitlens.views.contributors.showStatistics",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.contributors.setShowStatisticsOn",
					"when": "gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped && !config.gitlens.views.contributors.showStatistics",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.showSettingsPage!contributors-view",
					"when": "gitlens:views:scm:grouped:view == contributors && view == gitlens.views.scm.grouped",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.launchpad.setFilesLayoutToAuto",
					"when": "gitlens:views:scm:grouped:view == launchpad && view == gitlens.views.scm.grouped && config.gitlens.views.launchpad.files.layout == tree",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.launchpad.setFilesLayoutToList",
					"when": "gitlens:views:scm:grouped:view == launchpad && view == gitlens.views.scm.grouped && config.gitlens.views.launchpad.files.layout == auto",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.launchpad.setFilesLayoutToTree",
					"when": "gitlens:views:scm:grouped:view == launchpad && view == gitlens.views.scm.grouped && config.gitlens.views.launchpad.files.layout == list",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.launchpad.setShowAvatarsOff",
					"when": "gitlens:views:scm:grouped:view == launchpad && view == gitlens.views.scm.grouped && config.gitlens.views.launchpad.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.launchpad.setShowAvatarsOn",
					"when": "gitlens:views:scm:grouped:view == launchpad && view == gitlens.views.scm.grouped && !config.gitlens.views.launchpad.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.remotes.setFilesLayoutToAuto",
					"when": "gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.files.layout == tree",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.remotes.setFilesLayoutToList",
					"when": "gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.files.layout == auto",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.remotes.setFilesLayoutToTree",
					"when": "gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.files.layout == list",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.remotes.setLayoutToList",
					"when": "gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.branches.layout == tree",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.remotes.setLayoutToTree",
					"when": "gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.branches.layout == list",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.remotes.setShowAvatarsOff",
					"when": "gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.remotes.setShowAvatarsOn",
					"when": "gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && !config.gitlens.views.remotes.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.remotes.setShowBranchPullRequestOff",
					"when": "gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.remotes.pullRequests.enabled && config.gitlens.views.remotes.pullRequests.showForBranches",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.remotes.setShowBranchPullRequestOn",
					"when": "gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && !config.gitlens.views.remotes.pullRequests.enabled && !config.gitlens.views.remotes.pullRequests.showForBranches",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.showSettingsPage!remotes-view",
					"when": "gitlens:views:scm:grouped:view == remotes && view == gitlens.views.scm.grouped",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.repositories.setAutoRefreshToOff",
					"when": "gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.repositories.autoRefresh && gitlens:views:repositories:autoRefresh",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.views.repositories.setAutoRefreshToOn",
					"when": "gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.repositories.autoRefresh && !gitlens:views:repositories:autoRefresh",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.views.repositories.setFilesLayoutToAuto",
					"when": "gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.repositories.files.layout == tree",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.repositories.setFilesLayoutToList",
					"when": "gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.repositories.files.layout == auto",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.repositories.setFilesLayoutToTree",
					"when": "gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.repositories.files.layout == list",
					"group": "3_gitlens@1"
				},
				{
					"submenu": "gitlens/view/repositories/sections",
					"when": "gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped",
					"group": "4_gitlens@1"
				},
				{
					"command": "gitlens.views.repositories.setShowAvatarsOff",
					"when": "gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.repositories.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.repositories.setShowAvatarsOn",
					"when": "gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && !config.gitlens.views.repositories.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.showSettingsPage!repositories-view",
					"when": "gitlens:views:scm:grouped:view == repositories && view == gitlens.views.scm.grouped",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.searchAndCompare.setFilesLayoutToAuto",
					"when": "gitlens:views:scm:grouped:view == searchAndCompare && view == gitlens.views.scm.grouped && config.gitlens.views.searchAndCompare.files.layout == tree",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.searchAndCompare.setFilesLayoutToList",
					"when": "gitlens:views:scm:grouped:view == searchAndCompare && view == gitlens.views.scm.grouped && config.gitlens.views.searchAndCompare.files.layout == auto",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.searchAndCompare.setFilesLayoutToTree",
					"when": "gitlens:views:scm:grouped:view == searchAndCompare && view == gitlens.views.scm.grouped && config.gitlens.views.searchAndCompare.files.layout == list",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.searchAndCompare.setShowAvatarsOff",
					"when": "gitlens:views:scm:grouped:view == searchAndCompare && view == gitlens.views.scm.grouped && config.gitlens.views.searchAndCompare.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.searchAndCompare.setShowAvatarsOn",
					"when": "gitlens:views:scm:grouped:view == searchAndCompare && view == gitlens.views.scm.grouped && !config.gitlens.views.searchAndCompare.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.showSettingsPage!search-compare-view",
					"when": "gitlens:views:scm:grouped:view == searchAndCompare && view == gitlens.views.scm.grouped",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.stashes.setFilesLayoutToAuto",
					"when": "gitlens:views:scm:grouped:view == stashes && view == gitlens.views.scm.grouped && config.gitlens.views.stashes.files.layout == tree",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.stashes.setFilesLayoutToList",
					"when": "gitlens:views:scm:grouped:view == stashes && view == gitlens.views.scm.grouped && config.gitlens.views.stashes.files.layout == auto",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.stashes.setFilesLayoutToTree",
					"when": "gitlens:views:scm:grouped:view == stashes && view == gitlens.views.scm.grouped && config.gitlens.views.stashes.files.layout == list",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.showSettingsPage!stashes-view",
					"when": "gitlens:views:scm:grouped:view == stashes && view == gitlens.views.scm.grouped",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.tags.setLayoutToList",
					"when": "gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.tags.branches.layout == tree",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.tags.setLayoutToTree",
					"when": "gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.tags.branches.layout == list",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.tags.setFilesLayoutToAuto",
					"when": "gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.tags.files.layout == tree",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.tags.setFilesLayoutToList",
					"when": "gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.tags.files.layout == auto",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.tags.setFilesLayoutToTree",
					"when": "gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.tags.files.layout == list",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.tags.setShowAvatarsOff",
					"when": "gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.tags.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.tags.setShowAvatarsOn",
					"when": "gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && !config.gitlens.views.tags.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.showSettingsPage!tags-view",
					"when": "gitlens:views:scm:grouped:view == tags && view == gitlens.views.scm.grouped",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.worktrees.setLayoutToList",
					"when": "gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.branches.layout == tree",
					"group": "3_gitlens@0"
				},
				{
					"command": "gitlens.views.worktrees.setLayoutToTree",
					"when": "gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.branches.layout == list",
					"group": "3_gitlens@0"
				},
				{
					"command": "gitlens.views.worktrees.setFilesLayoutToAuto",
					"when": "gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.files.layout == tree",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.worktrees.setFilesLayoutToList",
					"when": "gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.files.layout == auto",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.worktrees.setFilesLayoutToTree",
					"when": "gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.files.layout == list",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.worktrees.setShowAvatarsOff",
					"when": "gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.worktrees.setShowAvatarsOn",
					"when": "gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && !config.gitlens.views.worktrees.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.worktrees.setShowBranchComparisonOff",
					"when": "gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.showBranchComparison",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.worktrees.setShowBranchComparisonOn",
					"when": "gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && !config.gitlens.views.worktrees.showBranchComparison",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.worktrees.setShowBranchPullRequestOff",
					"when": "gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.pullRequests.enabled && config.gitlens.views.worktrees.pullRequests.showForBranches",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.worktrees.setShowBranchPullRequestOn",
					"when": "gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && !config.gitlens.views.worktrees.pullRequests.enabled && !config.gitlens.views.worktrees.pullRequests.showForBranches",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.worktrees.setShowStashesOff",
					"when": "gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && config.gitlens.views.worktrees.showStashes && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@5"
				},
				{
					"command": "gitlens.views.worktrees.setShowStashesOn",
					"when": "gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped && !config.gitlens.views.worktrees.showStashes && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@5"
				},
				{
					"command": "gitlens.showSettingsPage!worktrees-view",
					"when": "gitlens:views:scm:grouped:view == worktrees && view == gitlens.views.scm.grouped",
					"group": "9_gitlens@1"
				}
			],
			"gitlens/views/grouped/remotes": [
				{
					"command": "gitlens.views.addRemote",
					"when": "gitlens:views:scm:grouped:view == remotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "2_gitlens_actions@1"
				},
				{
					"submenu": "gitlens/views/grouped/more",
					"when": "gitlens:views:scm:grouped:view == remotes",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.scm.grouped.remotes.setAsDefault",
					"when": "gitlens:views:scm:grouped:view == remotes && config.gitlens.views.scm.grouped.default != remotes",
					"group": "9_gitlens@2"
				},
				{
					"command": "gitlens.views.scm.grouped.remotes.detach",
					"when": "gitlens:views:scm:grouped:view == remotes",
					"group": "9_gitlens@3"
				}
			],
			"gitlens/views/grouped/repositories": [
				{
					"command": "gitlens.pushRepositories",
					"when": "gitlens:views:scm:grouped:view == repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "2_gitlens_actions@1"
				},
				{
					"command": "gitlens.pullRepositories",
					"when": "gitlens:views:scm:grouped:view == repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "2_gitlens_actions@2"
				},
				{
					"command": "gitlens.fetchRepositories",
					"when": "gitlens:views:scm:grouped:view == repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "2_gitlens_actions@3"
				},
				{
					"submenu": "gitlens/views/grouped/more",
					"when": "gitlens:views:scm:grouped:view == repositories",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.scm.grouped.repositories.setAsDefault",
					"when": "gitlens:views:scm:grouped:view == repositories && config.gitlens.views.scm.grouped.default != repositories",
					"group": "9_gitlens@2"
				},
				{
					"command": "gitlens.views.scm.grouped.repositories.detach",
					"when": "gitlens:views:scm:grouped:view == repositories",
					"group": "9_gitlens@3"
				}
			],
			"gitlens/views/grouped/searchAndCompare": [
				{
					"command": "gitlens.views.searchAndCompare.clear",
					"when": "gitlens:views:scm:grouped:view == searchAndCompare",
					"group": "2_gitlens_actions_@1"
				},
				{
					"submenu": "gitlens/views/grouped/more",
					"when": "gitlens:views:scm:grouped:view == searchAndCompare",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.scm.grouped.searchAndCompare.setAsDefault",
					"when": "gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.scm.grouped.default != searchAndCompare",
					"group": "9_gitlens@2"
				},
				{
					"command": "gitlens.views.scm.grouped.searchAndCompare.detach",
					"when": "gitlens:views:scm:grouped:view == searchAndCompare",
					"group": "9_gitlens@3"
				},
				{
					"command": "gitlens.views.searchAndCompare.searchCommits",
					"when": "view == gitlens.views.searchAndCompare || (view === gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare)",
					"group": "2_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.searchAndCompare.selectForCompare",
					"when": "view == gitlens.views.searchAndCompare || (view === gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare)",
					"group": "2_gitlens_actions@2"
				}
			],
			"gitlens/views/grouped/stashes": [
				{
					"command": "gitlens.stashSave",
					"when": "gitlens:views:scm:grouped:view == stashes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "2_gitlens_actions@1"
				},
				{
					"command": "gitlens.stashApply",
					"when": "gitlens:views:scm:grouped:view == stashes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "2_gitlens_actions@2"
				},
				{
					"submenu": "gitlens/views/grouped/more",
					"when": "gitlens:views:scm:grouped:view == stashes",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.scm.grouped.stashes.setAsDefault",
					"when": "gitlens:views:scm:grouped:view == stashes && config.gitlens.views.scm.grouped.default != stashes",
					"group": "9_gitlens@2"
				},
				{
					"command": "gitlens.views.scm.grouped.stashes.detach",
					"when": "gitlens:views:scm:grouped:view == stashes",
					"group": "9_gitlens@3"
				}
			],
			"gitlens/views/grouped/tags": [
				{
					"command": "gitlens.views.title.createTag",
					"when": "gitlens:views:scm:grouped:view == tags && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "2_gitlens_actions@1"
				},
				{
					"submenu": "gitlens/views/grouped/more",
					"when": "gitlens:views:scm:grouped:view == tags",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.scm.grouped.tags.setAsDefault",
					"when": "gitlens:views:scm:grouped:view == tags && config.gitlens.views.scm.grouped.default != tags",
					"group": "9_gitlens@2"
				},
				{
					"command": "gitlens.views.scm.grouped.tags.detach",
					"when": "gitlens:views:scm:grouped:view == tags",
					"group": "9_gitlens@3"
				}
			],
			"gitlens/views/grouped/visibility": [
				{
					"command": "gitlens.views.scm.grouped.commits.visibility.hide",
					"when": "!config.gitlens.views.scm.grouped.hiddenViews.commits",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.views.scm.grouped.commits.visibility.show",
					"when": "config.gitlens.views.scm.grouped.hiddenViews.commits",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.views.scm.grouped.branches.visibility.hide",
					"when": "!config.gitlens.views.scm.grouped.hiddenViews.branches",
					"group": "2_gitlens@2"
				},
				{
					"command": "gitlens.views.scm.grouped.branches.visibility.show",
					"when": "config.gitlens.views.scm.grouped.hiddenViews.branches",
					"group": "2_gitlens@2"
				},
				{
					"command": "gitlens.views.scm.grouped.remotes.visibility.hide",
					"when": "!config.gitlens.views.scm.grouped.hiddenViews.remotes",
					"group": "2_gitlens@3"
				},
				{
					"command": "gitlens.views.scm.grouped.remotes.visibility.show",
					"when": "config.gitlens.views.scm.grouped.hiddenViews.remotes",
					"group": "2_gitlens@3"
				},
				{
					"command": "gitlens.views.scm.grouped.stashes.visibility.hide",
					"when": "!config.gitlens.views.scm.grouped.hiddenViews.stashes",
					"group": "2_gitlens@4"
				},
				{
					"command": "gitlens.views.scm.grouped.stashes.visibility.show",
					"when": "config.gitlens.views.scm.grouped.hiddenViews.stashes",
					"group": "2_gitlens@4"
				},
				{
					"command": "gitlens.views.scm.grouped.tags.visibility.hide",
					"when": "!config.gitlens.views.scm.grouped.hiddenViews.tags",
					"group": "2_gitlens@5"
				},
				{
					"command": "gitlens.views.scm.grouped.tags.visibility.show",
					"when": "config.gitlens.views.scm.grouped.hiddenViews.tags",
					"group": "2_gitlens@5"
				},
				{
					"command": "gitlens.views.scm.grouped.worktrees.visibility.hide",
					"when": "!config.gitlens.views.scm.grouped.hiddenViews.worktrees",
					"group": "2_gitlens@6"
				},
				{
					"command": "gitlens.views.scm.grouped.worktrees.visibility.show",
					"when": "config.gitlens.views.scm.grouped.hiddenViews.worktrees",
					"group": "2_gitlens@6"
				},
				{
					"command": "gitlens.views.scm.grouped.contributors.visibility.hide",
					"when": "!config.gitlens.views.scm.grouped.hiddenViews.contributors",
					"group": "2_gitlens@7"
				},
				{
					"command": "gitlens.views.scm.grouped.contributors.visibility.show",
					"when": "config.gitlens.views.scm.grouped.hiddenViews.contributors",
					"group": "2_gitlens@7"
				},
				{
					"command": "gitlens.views.scm.grouped.repositories.visibility.hide",
					"when": "!config.gitlens.views.scm.grouped.hiddenViews.repositories",
					"group": "2_gitlens@8"
				},
				{
					"command": "gitlens.views.scm.grouped.repositories.visibility.show",
					"when": "config.gitlens.views.scm.grouped.hiddenViews.repositories",
					"group": "2_gitlens@8"
				},
				{
					"command": "gitlens.views.scm.grouped.searchAndCompare.visibility.hide",
					"when": "!config.gitlens.views.scm.grouped.hiddenViews.searchAndCompare",
					"group": "2_gitlens@9"
				},
				{
					"command": "gitlens.views.scm.grouped.searchAndCompare.visibility.show",
					"when": "config.gitlens.views.scm.grouped.hiddenViews.searchAndCompare",
					"group": "2_gitlens@9"
				},
				{
					"command": "gitlens.views.scm.grouped.launchpad.visibility.hide",
					"when": "!config.gitlens.views.scm.grouped.hiddenViews.launchpad",
					"group": "2_gitlens@10"
				},
				{
					"command": "gitlens.views.scm.grouped.launchpad.visibility.show",
					"when": "config.gitlens.views.scm.grouped.hiddenViews.launchpad",
					"group": "2_gitlens@10"
				}
			],
			"gitlens/views/grouped/worktrees": [
				{
					"command": "gitlens.views.title.createWorktree",
					"when": "gitlens:views:scm:grouped:view == worktrees",
					"group": "2_gitlens_actions@1"
				},
				{
					"submenu": "gitlens/views/grouped/more",
					"when": "gitlens:views:scm:grouped:view == worktrees",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.scm.grouped.worktrees.setAsDefault",
					"when": "gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.scm.grouped.default != workspaces",
					"group": "9_gitlens@2"
				},
				{
					"command": "gitlens.views.scm.grouped.worktrees.detach",
					"when": "gitlens:views:scm:grouped:view == worktrees",
					"group": "9_gitlens@3"
				}
			],
			"menuBar/edit/copy": [
				{
					"command": "gitlens.copyRemoteFileUrlToClipboard",
					"when": "resource in gitlens:tabs:tracked && config.gitlens.menus.editor.clipboard",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.copyRemoteFileUrlFrom",
					"when": "resource in gitlens:tabs:tracked && config.gitlens.menus.editor.clipboard",
					"group": "1_gitlens@2"
				}
			],
			"scm/resourceFolder/context": [
				{
					"submenu": "gitlens/scm/resourceFolder/changes",
					"when": "scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.compare",
					"group": "2_gitlens@1"
				},
				{
					"submenu": "gitlens/scm/resourceFolder/history",
					"when": "scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.history",
					"group": "2_gitlens_1@1"
				},
				{
					"command": "gitlens.copyPatchToClipboard",
					"when": "scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.patch",
					"group": "7_cutcopypaste@97"
				}
			],
			"scm/resourceGroup/context": [
				{
					"command": "gitlens.stashSave",
					"when": "scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroupInline.stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@-1"
				},
				{
					"command": "gitlens.stashSave",
					"when": "scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_modification@100"
				},
				{
					"submenu": "gitlens/scm/resourceGroup/changes",
					"when": "scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.compare",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.openChangedFiles",
					"when": "scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.openClose",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.closeUnchangedFiles",
					"when": "scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.openClose",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.openOnlyChangedFiles",
					"when": "scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.openClose",
					"group": "3_gitlens@3"
				},
				{
					"command": "gitlens.copyPatchToClipboard",
					"when": "scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.patch",
					"group": "7_cutcopypaste@97"
				},
				{
					"command": "gitlens.shareAsCloudPatch",
					"when": "scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmGroup.patch",
					"group": "7_cutcopypaste@98"
				}
			],
			"scm/resourceState/context": [
				{
					"submenu": "gitlens/scm/resourceState/changes",
					"when": "scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.compare",
					"group": "navigation"
				},
				{
					"submenu": "gitlens/scm/resourceState/openOn",
					"when": "scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.remote && gitlens:repos:withRemotes",
					"group": "navigation"
				},
				{
					"command": "gitlens.stashSaveFiles",
					"when": "scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItemInline.stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@1"
				},
				{
					"submenu": "gitlens/scm/resourceState/history",
					"when": "scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.history",
					"group": "1_a_gitlens@2"
				},
				{
					"command": "gitlens.stashSaveFiles",
					"when": "scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_modification@2"
				},
				{
					"submenu": "gitlens/share",
					"when": "scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.share",
					"group": "7_a_gitlens_share@1"
				},
				{
					"command": "gitlens.copyPatchToClipboard",
					"when": "scmResourceGroup =~ /^(workingTree|index)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.patch",
					"group": "7_cutcopypaste@97"
				},
				{
					"command": "gitlens.copyRelativePathToClipboard",
					"when": "scmResourceGroup =~ /^(workingTree|index|merge)$/ && scmProvider == git && gitlens:enabled && config.gitlens.menus.scmItem.clipboard && gitlens:repos:withRemotes",
					"group": "7_cutcopypaste@98"
				}
			],
			"scm/sourceControl": [
				{
					"command": "gitlens.showGraph",
					"when": "scmProvider == git && gitlens:enabled && config.gitlens.menus.scm.graph && gitlens:plus:enabled && scmProviderRootUri not in gitlens:plus:disallowedRepos",
					"group": "6_gitlens@1"
				}
			],
			"scm/title": [
				{
					"command": "gitlens.scm.ai.generateCommitMessage",
					"when": "scmProvider == git && gitlens:enabled && config.gitlens.ai.generateCommitMessage.enabled && config.gitlens.menus.scmRepositoryInline.generateCommitMessage && gitlens:gk:organization:ai:enabled && !gitlens:readonly && !gitlens:untrusted",
					"group": "navigation@-3"
				},
				{
					"command": "gitlens.stashSave",
					"when": "scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepositoryInline.stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "navigation@-2"
				},
				{
					"command": "gitlens.showGraph",
					"when": "scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepositoryInline.graph && gitlens:plus:enabled && scmProviderRootUri not in gitlens:plus:disallowedRepos",
					"group": "navigation@-1"
				},
				{
					"command": "gitlens.addAuthors",
					"when": "scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepository.authors && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "2_z_gitlens@1"
				},
				{
					"command": "gitlens.copyPatchToClipboard",
					"when": "scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepository.patch",
					"group": "2_z_gitlens@2"
				},
				{
					"command": "gitlens.shareAsCloudPatch",
					"when": "scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepository.patch",
					"group": "2_z_gitlens@3"
				},
				{
					"command": "gitlens.scm.ai.generateCommitMessage",
					"when": "scmProvider == git && gitlens:enabled && config.gitlens.ai.generateCommitMessage.enabled && config.gitlens.menus.scmRepository.generateCommitMessage && gitlens:gk:organization:ai:enabled && !gitlens:readonly && !gitlens:untrusted",
					"group": "2_z_gitlens@4"
				},
				{
					"command": "gitlens.showGraph",
					"when": "scmProvider == git && gitlens:enabled && config.gitlens.menus.scmRepository.graph && gitlens:plus:enabled && scmProviderRootUri not in gitlens:plus:disallowedRepos",
					"group": "2_z_gitlens@5"
				}
			],
			"timeline/item/context": [
				{
					"command": "gitlens.openCommitOnRemote",
					"when": "false && gitlens:enabled && gitlens:repos:withRemotes && timelineItem =~ /git:file:commit\\b/",
					"group": "inline@99",
					"alt": "gitlens.copyRemoteCommitUrl"
				}
			],
			"view/item/context": [
				{
					"command": "gitlens.ghpr.views.openOrCreateWorktree",
					"when": "viewItem =~ /pullrequest(:local)?:nonactive|description/ && view == pr:github && config.gitlens.menus.ghpr.worktree && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.views.copy",
					"when": "viewItem =~ /gitlens:(?=(autolinked:item\\b|branch|commit|contributor|file(?!.*?\\b\\+(staged|unstaged))\\b|folder|history:line|launchpad:item|pullrequest|remote|repository|repo-folder|search:results|stash|tag|workspace|worktree)\\b)/",
					"group": "7_gitlens_cutcopypaste@1"
				},
				{
					"command": "gitlens.views.refreshNode",
					"when": "viewItem =~ /gitlens:(?!(file|message|date-marker)\\b)/",
					"group": "9_gitlens_z@99"
				},
				{
					"command": "gitlens.views.openUrl",
					"when": "viewItem =~ /gitlens:autolinked:item\\b/",
					"group": "inline@99",
					"alt": "gitlens.views.copyUrl"
				},
				{
					"command": "gitlens.views.openUrl",
					"when": "viewItem =~ /gitlens:autolinked:item\\b/ && !listMultiSelection",
					"group": "1_gitlens_actions@99"
				},
				{
					"command": "gitlens.views.openUrl.multi",
					"when": "viewItem =~ /gitlens:autolinked:item\\b/ && listMultiSelection",
					"group": "1_gitlens_actions@99"
				},
				{
					"command": "gitlens.views.copyUrl",
					"when": "viewItem =~ /gitlens:autolinked:item\\b/ && !listMultiSelection",
					"group": "7_gitlens_cutcopypaste@1"
				},
				{
					"command": "gitlens.views.copyUrl.multi",
					"when": "viewItem =~ /gitlens:autolinked:item\\b/ && listMultiSelection",
					"group": "7_gitlens_cutcopypaste@1"
				},
				{
					"command": "gitlens.views.copyAsMarkdown",
					"when": "viewItem =~ /gitlens:autolinked:item\\b/",
					"group": "7_gitlens_cutcopypaste@2"
				},
				{
					"command": "gitlens.connectRemoteProvider",
					"when": "viewItem =~ /gitlens:autolinked:items\\b/ && config.gitlens.integrations.enabled && gitlens:repos:withHostingIntegrations && !gitlens:repos:withHostingIntegrationsConnected",
					"group": "inline@98"
				},
				{
					"command": "gitlens.showSettingsPage!autolinks",
					"when": "viewItem =~ /gitlens:autolinked:items\\b/",
					"group": "inline@99"
				},
				{
					"command": "gitlens.connectRemoteProvider",
					"when": "viewItem =~ /gitlens:autolinked:items\\b/ && config.gitlens.integrations.enabled && gitlens:repos:withHostingIntegrations && !gitlens:repos:withHostingIntegrationsConnected",
					"group": "6_gitlens_actions@1"
				},
				{
					"command": "gitlens.showSettingsPage!autolinks",
					"when": "viewItem =~ /gitlens:autolinked:items\\b/ && !listMultiSelection",
					"group": "8_gitlens_actions@99"
				},
				{
					"command": "gitlens.views.openWorktree",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+worktree\\b)(?!.*?\\b\\+(current|closed|opened)\\b)/ && !gitlens:hasVirtualFolders",
					"group": "inline@7",
					"alt": "gitlens.views.openWorktreeInNewWindow"
				},
				{
					"command": "gitlens.views.switchToAnotherBranch",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@7"
				},
				{
					"command": "gitlens.views.switchToBranch",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|closed|checkedout|worktree)\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@7"
				},
				{
					"command": "gitlens.views.fetch",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)(?!.*?\\b\\+(ahead|behind|closed)\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@8",
					"alt": "gitlens.views.pull"
				},
				{
					"command": "gitlens.views.fetch",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+remote\\b)(?!.*?\\b\\+(ahead|behind|closed)\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@8"
				},
				{
					"command": "gitlens.views.publishBranch",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(closed|remote|tracking)\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@8"
				},
				{
					"command": "gitlens.views.pull",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@8",
					"alt": "gitlens.views.fetch"
				},
				{
					"command": "gitlens.views.push",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+(behind|closed)\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@8"
				},
				{
					"command": "gitlens.views.createPullRequest",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:action:createPullRequest && gitlens:repos:withRemotes",
					"group": "inline@9"
				},
				{
					"command": "gitlens.views.compareBranchWithHead",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders",
					"group": "inline@97",
					"alt": "gitlens.views.compareWithWorking"
				},
				{
					"command": "gitlens.views.compareBranchWithHead",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && gitlens:hasVirtualFolders",
					"group": "inline@97"
				},
				{
					"command": "gitlens.views.compareWithWorking",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders",
					"group": "inline@97"
				},
				{
					"command": "gitlens.views.openWorktree",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+worktree\\b)(?!.*?\\b\\+(current|closed|opened)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders",
					"group": "1_gitlens_action@1"
				},
				{
					"command": "gitlens.views.switchToAnotherBranch",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_action@1"
				},
				{
					"command": "gitlens.views.switchToBranch",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|closed|checkedout|worktree)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_action@1"
				},
				{
					"command": "gitlens.views.openWorktreeInNewWindow",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+worktree\\b)(?!.*?\\b\\+(current|closed|opened)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders",
					"group": "1_gitlens_action@2"
				},
				{
					"command": "gitlens.views.openInWorktree",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|closed|checkedout|worktree)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders",
					"group": "1_gitlens_action@3"
				},
				{
					"command": "gitlens.showInCommitGraph",
					"when": "viewItem =~ /gitlens:(branch|tag)\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection",
					"group": "1_gitlens_action@100"
				},
				{
					"command": "gitlens.views.publishBranch",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(closed|remote|tracking)\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.pull",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(behind|tracking)\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.push",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+(behind|closed)\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.fetch",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@3"
				},
				{
					"command": "gitlens.views.mergeBranchInto",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_1@1"
				},
				{
					"command": "gitlens.views.rebaseOntoBranch",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_1@2"
				},
				{
					"command": "gitlens.views.rebaseOntoUpstream",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+tracking\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_1@2"
				},
				{
					"command": "gitlens.views.resetToTip",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+rebase\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_1@3"
				},
				{
					"command": "gitlens.views.associateIssueWithBranch",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+remote\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_2@1"
				},
				{
					"command": "gitlens.views.renameBranch",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_2@2"
				},
				{
					"command": "gitlens.views.deleteBranch",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_2@3"
				},
				{
					"command": "gitlens.views.deleteBranch.multi",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)(?!.*?\\b\\+closed\\b)/ && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_2@3"
				},
				{
					"command": "gitlens.views.createBranch",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_3@7"
				},
				{
					"command": "gitlens.views.createTag",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_3@8"
				},
				{
					"command": "gitlens.views.createWorktree",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_3@9"
				},
				{
					"command": "gitlens.views.createPullRequest",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:action:createPullRequest && gitlens:repos:withRemotes",
					"group": "1_gitlens_actions_3@10"
				},
				{
					"command": "gitlens.views.ai.generateChangelogFrom",
					"when": "viewItem =~ /gitlens:(branch|tag)\\b/ && gitlens:gk:organization:ai:enabled && !gitlens:untrusted",
					"group": "1_gitlens_actions_3@100"
				},
				{
					"command": "gitlens.views.openBranchOnRemote",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/ && !listMultiSelection",
					"group": "2_gitlens_quickopen@1"
				},
				{
					"command": "gitlens.views.openBranchOnRemote.multi",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/ && listMultiSelection",
					"group": "2_gitlens_quickopen@1"
				},
				{
					"command": "gitlens.views.openChangedFileDiffsWithMergeBase",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection",
					"group": "3_gitlens_explore@11"
				},
				{
					"command": "gitlens.views.openDirectoryDiffWithWorking",
					"when": "viewItem =~ /gitlens:(branch|tag)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders",
					"group": "3_gitlens_explore@12"
				},
				{
					"submenu": "gitlens/commit/browse",
					"when": "viewItem =~ /gitlens:(branch|commit|file\\b(?=.*?\\b\\+committed\\b)|stash|tag)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders",
					"group": "3_gitlens_explore@100"
				},
				{
					"command": "gitlens.views.compareWithUpstream",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders",
					"group": "4_gitlens_compare@1"
				},
				{
					"command": "gitlens.views.compareBranchWithHead",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection",
					"group": "4_gitlens_compare@2"
				},
				{
					"command": "gitlens.views.compareWithMergeBase",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection",
					"group": "4_gitlens_compare@3"
				},
				{
					"command": "gitlens.views.compareWithWorking",
					"when": "viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders",
					"group": "4_gitlens_compare@4"
				},
				{
					"command": "gitlens.views.compareAncestryWithWorking",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders",
					"group": "4_gitlens_compare@5"
				},
				{
					"command": "gitlens.views.compareWithSelected",
					"when": "viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection && gitlens:views:canCompare",
					"group": "4_gitlens_compare@98"
				},
				{
					"command": "gitlens.views.selectForCompare",
					"when": "viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection",
					"group": "4_gitlens_compare@99"
				},
				{
					"submenu": "gitlens/share",
					"when": "viewItem =~ /gitlens:(branch|commit|compare:(branch(?=.*?\\b\\+comparing\\b)|results(:commits(?!:)|(?!:)))|remote|repo-folder|repository|stash|status:upstream|tag|workspace|file\\b(?=.*?\\b\\+committed\\b))\\b/",
					"group": "7_gitlens_a_share@1"
				},
				{
					"submenu": "gitlens/commit/copy",
					"when": "viewItem =~ /gitlens:(branch|commit|remote|repo-folder|repository|stash|tag|file\\b(?=.*?\\b\\+committed\\b))\\b/ && !listMultiSelection",
					"group": "7_gitlens_cutcopypaste@10"
				},
				{
					"command": "gitlens.views.star",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+starred\\b)/ && !listMultiSelection",
					"group": "8_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.star.multi",
					"when": "viewItem =~ /gitlens:branch\\b(?!.*?\\b\\+starred\\b)/ && listMultiSelection",
					"group": "8_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.unstar",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+starred\\b)/ && !listMultiSelection",
					"group": "8_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.unstar.multi",
					"when": "viewItem =~ /gitlens:branch\\b(?=.*?\\b\\+starred\\b)/ && listMultiSelection",
					"group": "8_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.repositories.setShowSectionOff",
					"when": "viewItem =~ /gitlens:(compare:branch(?=.*?\\b\\+root\\b)|branches|branch(?=.*?\\b\\+commits\\b)|reflog|remotes|stashes|status:upstream|tags)\\b/ && view == gitlens.views.repositories && !listMultiSelection",
					"group": "8_gitlens_toggles@99"
				},
				{
					"command": "gitlens.views.collapseNode",
					"when": "viewItem =~ /gitlens:(branch|commit|compare|contributor|folder|grouping|launchpad:item|pseudo:folder|pullrequest|remote|results|search|stash|status|tag|worktree)\\b/ && !listMultiSelection",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.expandNode",
					"when": "viewItem =~ /gitlens:(branch|commit|compare|contributor|folder|grouping|launchpad:item|pseudo:folder|pullrequest|remote|results|search|stash|status|tag|worktree)\\b/ && !listMultiSelection",
					"group": "9_gitlens@2"
				},
				{
					"command": "gitlens.views.switchToAnotherBranch",
					"when": "viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@10"
				},
				{
					"command": "gitlens.views.createBranch",
					"when": "viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@11"
				},
				{
					"command": "gitlens.views.repositories.setBranchesLayoutToList",
					"when": "viewItem =~ /gitlens:branches\\b/ && config.gitlens.views.repositories.branches.layout == tree",
					"group": "inline@50"
				},
				{
					"command": "gitlens.views.repositories.setBranchesLayoutToTree",
					"when": "viewItem =~ /gitlens:branches\\b/ && config.gitlens.views.repositories.branches.layout == list",
					"group": "inline@50"
				},
				{
					"command": "gitlens.openBranchesOnRemote",
					"when": "viewItem =~ /gitlens:branches\\b(?=.*?\\b\\+remotes\\b)/",
					"group": "inline@98",
					"alt": "gitlens.copyRemoteBranchesUrl"
				},
				{
					"command": "gitlens.views.switchToAnotherBranch",
					"when": "viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.createBranch",
					"when": "viewItem =~ /gitlens:branches\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.openBranchesOnRemote",
					"when": "viewItem =~ /gitlens:branches\\b(?=.*?\\b\\+remotes\\b)/ && !listMultiSelection",
					"group": "2_gitlens_quickopen@1"
				},
				{
					"command": "gitlens.views.repositories.setBranchesShowBranchComparisonOff",
					"when": "viewItem =~ /gitlens:branches\\b/ && view == gitlens.views.repositories && config.gitlens.views.repositories.branches.showBranchComparison && !listMultiSelection",
					"group": "8_gitlens_toggles@1"
				},
				{
					"command": "gitlens.views.repositories.setBranchesShowBranchComparisonOn",
					"when": "viewItem =~ /gitlens:branches\\b/ && view == gitlens.views.repositories && !config.gitlens.views.repositories.branches.showBranchComparison && !listMultiSelection",
					"group": "8_gitlens_toggles@1"
				},
				{
					"command": "gitlens.views.undoCommit",
					"when": "viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+HEAD\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@78"
				},
				{
					"command": "gitlens.views.push",
					"when": "viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@79",
					"alt": "gitlens.views.pushWithForce"
				},
				{
					"command": "gitlens.views.pushToCommit",
					"when": "viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@80"
				},
				{
					"command": "gitlens.views.openChangedFileDiffs",
					"when": "viewItem =~ /gitlens:(compare:results(?!:)\\b(?!.*?\\b\\+filtered\\b)|commit|stash|results:files|status-branch:files|status:upstream:(ahead|behind))\\b/ && config.gitlens.views.openChangesInMultiDiffEditor && !listMultiSelection",
					"group": "inline@90",
					"alt": "gitlens.views.openChangedFileDiffsWithWorking"
				},
				{
					"command": "gitlens.views.compareWithHead",
					"when": "viewItem =~ /gitlens:(commit|stash|tag)\\b/",
					"group": "inline@97",
					"alt": "gitlens.views.compareWithWorking"
				},
				{
					"command": "gitlens.copyShaToClipboard",
					"when": "viewItem =~ /gitlens:commit\\b/",
					"group": "inline@98",
					"alt": "gitlens.copyMessageToClipboard"
				},
				{
					"command": "gitlens.views.openCommitOnRemote",
					"when": "viewItem =~ /gitlens:commit\\b/ && gitlens:repos:withRemotes",
					"group": "inline@99",
					"alt": "gitlens.views.copyRemoteCommitUrl"
				},
				{
					"command": "gitlens.views.cherryPick",
					"when": "viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+(current|rebase)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.cherryPick.multi",
					"when": "viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+(current|rebase)\\b)/ && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.undoCommit",
					"when": "viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+HEAD\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.push",
					"when": "viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.pushToCommit",
					"when": "viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.revert",
					"when": "viewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@3"
				},
				{
					"command": "gitlens.views.resetToCommit",
					"when": "viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@4"
				},
				{
					"command": "gitlens.views.resetCommit",
					"when": "viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@5"
				},
				{
					"command": "gitlens.views.rebaseOntoCommit",
					"when": "viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@6"
				},
				{
					"command": "gitlens.views.switchToCommit",
					"when": "viewItem =~ /gitlens:commit\\b(?!.*?\\b\\+rebase\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@7"
				},
				{
					"command": "gitlens.views.createBranch",
					"when": "viewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_1@1"
				},
				{
					"command": "gitlens.createPatch",
					"when": "!listMultiSelection && false && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:(commit|stash)\\b/",
					"group": "1_gitlens_actions_1@2"
				},
				{
					"command": "gitlens.createCloudPatch",
					"when": "viewItem =~ /gitlens:(commit|stash)\\b/ && config.gitlens.cloudPatches.enabled && !listMultiSelection && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted",
					"group": "1_gitlens_actions_1@3"
				},
				{
					"command": "gitlens.views.createTag",
					"when": "viewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_1@4"
				},
				{
					"submenu": "gitlens/commit/changes",
					"when": "viewItem =~ /gitlens:(compare:results(?!:)\\b(?!.*?\\b\\+filtered\\b)|commit|stash|results:files|status-branch:files|status:upstream:(ahead|behind))\\b/ && !listMultiSelection",
					"group": "2_gitlens_quickopen@1"
				},
				{
					"command": "gitlens.showInDetailsView",
					"when": "viewItem =~ /gitlens:(commit|stash)\\b/ && !listMultiSelection",
					"group": "3_gitlens_explore@0"
				},
				{
					"command": "gitlens.showInCommitGraph",
					"when": "viewItem =~ /gitlens:(commit|stash)\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection",
					"group": "3_gitlens_explore@1"
				},
				{
					"command": "gitlens.revealCommitInView",
					"when": "viewItem =~ /gitlens:commit\\b/ && view =~ /gitlens\\.views\\.(?!commits|branches\\b)/ && !listMultiSelection",
					"group": "3_gitlens_explore@2"
				},
				{
					"command": "gitlens.views.openCommitOnRemote",
					"when": "viewItem =~ /gitlens:commit\\b/ && !listMultiSelection && gitlens:repos:withRemotes",
					"group": "3_gitlens_explore@2"
				},
				{
					"command": "gitlens.views.openCommitOnRemote.multi",
					"when": "viewItem =~ /gitlens:commit\\b/ && listMultiSelection && gitlens:repos:withRemotes",
					"group": "3_gitlens_explore@2"
				},
				{
					"command": "gitlens.views.compareWithHead",
					"when": "viewItem =~ /gitlens:(commit|stash|tag)\\b/ && !listMultiSelection",
					"group": "4_gitlens_compare@2"
				},
				{
					"command": "gitlens.copyShaToClipboard",
					"when": "viewItem =~ /gitlens:(commit|stash)\\b/ && !listMultiSelection",
					"group": "7_gitlens_cutcopypaste@3"
				},
				{
					"command": "gitlens.copyMessageToClipboard",
					"when": "viewItem =~ /gitlens:(commit|stash)\\b/ && !listMultiSelection",
					"group": "7_gitlens_cutcopypaste@4"
				},
				{
					"command": "gitlens.copyPatchToClipboard",
					"when": "viewItem =~ /gitlens:(commit|stash)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:untrusted",
					"group": "7_gitlens_cutcopypaste@97"
				},
				{
					"command": "gitlens.views.commits.setCommitsFilterAuthors",
					"when": "viewItem == gitlens:commits:current-branch && !gitlens:views:commits:filtered",
					"group": "inline@50"
				},
				{
					"command": "gitlens.views.commits.setCommitsFilterOff",
					"when": "viewItem == gitlens:commits:current-branch && gitlens:views:commits:filtered",
					"group": "inline@50"
				},
				{
					"command": "gitlens.views.setBranchComparisonToBranch",
					"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+working\\b)/",
					"group": "inline@2"
				},
				{
					"command": "gitlens.views.setBranchComparisonToWorking",
					"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+branch\\b)/",
					"group": "inline@2"
				},
				{
					"command": "gitlens.views.editNode",
					"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/",
					"group": "inline@96"
				},
				{
					"command": "gitlens.views.setResultsCommitsFilterOff",
					"when": "viewItem =~ /gitlens:compare:(results(?!:)|branch)\\b(?=.*?\\b\\+filtered\\b)/",
					"group": "inline@96"
				},
				{
					"command": "gitlens.views.refreshNode",
					"when": "viewItem =~ /gitlens:compare:(branch(?=.*?\\b\\+comparing\\b)|results(?!:))\\b/",
					"group": "inline@97"
				},
				{
					"command": "gitlens.views.clearComparison",
					"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/",
					"group": "inline@99"
				},
				{
					"command": "gitlens.views.setBranchComparisonToBranch",
					"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+working\\b)/ && !listMultiSelection",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.views.setBranchComparisonToWorking",
					"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+root\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+branch\\b)/ && !listMultiSelection",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.views.editNode",
					"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/ && !listMultiSelection",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.views.clearReviewed",
					"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/ && !listMultiSelection",
					"group": "1_gitlens@3"
				},
				{
					"command": "gitlens.views.clearComparison",
					"when": "viewItem =~ /gitlens:compare:branch\\b(?=.*?\\b\\+comparing\\b)/ && !listMultiSelection",
					"group": "1_gitlens@4"
				},
				{
					"command": "gitlens.openComparisonOnRemote",
					"when": "viewItem =~ /gitlens:compare:(branch\\b(?=.*?\\b\\+comparing\\b)|results(?!:))/ && !listMultiSelection && gitlens:repos:withRemotes",
					"group": "2_gitlens_quickopen@1"
				},
				{
					"command": "gitlens.copyPatchToClipboard",
					"when": "viewItem =~ /gitlens:compare:(branch|results(?!:))\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:untrusted",
					"group": "7_gitlens_cutcopypaste@97"
				},
				{
					"command": "gitlens.views.setResultsCommitsFilterOff",
					"when": "viewItem =~ /gitlens:compare:(results(?!:)|branch)\\b(?=.*?\\b\\+filtered\\b)/ && !listMultiSelection",
					"group": "7_gitlens_filter@1"
				},
				{
					"command": "gitlens.views.setResultsCommitsFilterAuthors",
					"when": "viewItem =~ /gitlens:compare:(results(?!:)|branch)\\b/ && !listMultiSelection",
					"group": "7_gitlens_filter@2"
				},
				{
					"command": "gitlens.views.branches.setShowBranchComparisonOff",
					"when": "viewItem =~ /gitlens:compare:branch\\b/ && view == gitlens.views.branches && !listMultiSelection",
					"group": "8_gitlens_toggles@1"
				},
				{
					"command": "gitlens.views.commits.setShowBranchComparisonOff",
					"when": "viewItem =~ /gitlens:compare:branch\\b/ && view == gitlens.views.commits && !listMultiSelection",
					"group": "8_gitlens_toggles@1"
				},
				{
					"command": "gitlens.views.repositories.setBranchesShowBranchComparisonOff",
					"when": "viewItem =~ /gitlens:compare:branch(?!.*?\\b\\+root\\b)\\b/ && view == gitlens.views.repositories && !listMultiSelection",
					"group": "8_gitlens_toggles@1"
				},
				{
					"command": "gitlens.views.dismissNode",
					"when": "viewItem =~ /gitlens:(compare:picker|(compare|search):results(?!:)\\b)\\b(?!:(commits|files))/",
					"group": "inline@99"
				},
				{
					"command": "gitlens.views.dismissNode",
					"when": "viewItem =~ /gitlens:(compare:picker:ref|(compare|search):results(?!:)\\b)\\b(?!:(commits|files))/ && !listMultiSelection",
					"group": "1_gitlens_actions@98"
				},
				{
					"command": "gitlens.views.searchAndCompare.swapComparison",
					"when": "viewItem =~ /gitlens:compare:results(?!:)\\b/",
					"group": "inline@96"
				},
				{
					"command": "gitlens.views.searchAndCompare.swapComparison",
					"when": "viewItem =~ /gitlens:compare:results(?!:)\\b(?!.*?\\b\\+working\\b)/ && !listMultiSelection",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.clearReviewed",
					"when": "viewItem =~ /gitlens:compare:results(?!:)/ && !listMultiSelection",
					"group": "1_gitlens_actions@3"
				},
				{
					"command": "gitlens.createPatch",
					"when": "!listMultiSelection && false && !gitlens:untrusted && !gitlens:hasVirtualFolders && viewItem =~ /gitlens:compare:results(?!:)\\b/",
					"group": "1_gitlens_secondary_actions@1"
				},
				{
					"command": "gitlens.createCloudPatch",
					"when": "viewItem =~ /gitlens:compare:results(?!:)\\b/ && config.gitlens.cloudPatches.enabled && !listMultiSelection && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted",
					"group": "1_gitlens_secondary_actions@2"
				},
				{
					"command": "gitlens.views.openDirectoryDiff",
					"when": "viewItem =~ /gitlens:compare:results(?!:)\\b/ && !listMultiSelection",
					"group": "2_gitlens_quickopen@2"
				},
				{
					"command": "gitlens.views.ai.generateChangelog",
					"when": "viewItem =~ /gitlens:compare:results:commits\\b/ && gitlens:gk:organization:ai:enabled && !gitlens:untrusted",
					"group": "inline@98"
				},
				{
					"command": "gitlens.openComparisonOnRemote",
					"when": "viewItem =~ /gitlens:compare:results:commits\\b/ && gitlens:repos:withRemotes",
					"group": "inline@99",
					"alt": "gitlens.copyRemoteComparisonUrl"
				},
				{
					"command": "gitlens.openComparisonOnRemote",
					"when": "viewItem =~ /gitlens:compare:results:commits\\b/ && !listMultiSelection && gitlens:repos:withRemotes",
					"group": "3_gitlens_explore@0"
				},
				{
					"command": "gitlens.views.ai.generateChangelog",
					"when": "viewItem =~ /gitlens:compare:results:commits\\b/ && !listMultiSelection && gitlens:gk:organization:ai:enabled && !gitlens:untrusted",
					"group": "4_gitlens_actions@2"
				},
				{
					"command": "gitlens.inviteToLiveShare",
					"when": "viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && gitlens:vsls && gitlens:vsls != guest",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.addAuthor",
					"when": "viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@2"
				},
				{
					"command": "gitlens.views.copy",
					"when": "viewItem =~ /gitlens:contributor\\b/",
					"group": "inline@98"
				},
				{
					"command": "gitlens.inviteToLiveShare",
					"when": "viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection && gitlens:vsls && gitlens:vsls != guest",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.addAuthor",
					"when": "viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.addAuthor.multi",
					"when": "viewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.copyAsMarkdown",
					"when": "viewItem =~ /gitlens:contributor\\b/",
					"group": "7_gitlens_cutcopypaste@2"
				},
				{
					"command": "gitlens.views.addAuthors",
					"when": "viewItem =~ /gitlens:contributors\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.setContributorsStatisticsOff",
					"when": "viewItem == gitlens:contributors && config.gitlens.views.showContributorsStatistics",
					"group": "inline@99"
				},
				{
					"command": "gitlens.views.setContributorsStatisticsOn",
					"when": "viewItem == gitlens:contributors && !config.gitlens.views.showContributorsStatistics",
					"group": "inline@99"
				},
				{
					"command": "gitlens.views.addAuthors",
					"when": "viewItem =~ /gitlens:contributors\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "viewItem == gitlens:date-marker && config.gitlens.views.showRelativeDateMarkers && !listMultiSelection",
					"group": "1_gitlens@0"
				},
				{
					"command": "gitlens.views.draft.openOnWeb",
					"when": "viewItem =~ /gitlens:draft\\b/ && gitlens:plus",
					"group": "inline@99"
				},
				{
					"command": "gitlens.views.draft.open",
					"when": "viewItem =~ /gitlens:draft\\b/ && gitlens:plus",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.draft.openOnWeb",
					"when": "viewItem =~ /gitlens:draft\\b/ && gitlens:plus",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.drafts.delete",
					"when": "viewItem =~ /gitlens:draft\\b(?=.*?\\b\\+mine\\b)/ && gitlens:plus",
					"group": "6_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.push",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?=.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@-1"
				},
				{
					"command": "gitlens.views.pushToCommit",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+unpublished\\b)(?!.*?\\b\\+HEAD\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@-1"
				},
				{
					"command": "gitlens.views.openFileRevision",
					"when": "viewItem =~ /gitlens:file(:results|\\b(?=.*?\\b\\+(committed|stashed)\\b))/",
					"group": "inline@1",
					"alt": "gitlens.views.openFile"
				},
				{
					"command": "gitlens.views.openChanges",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+conflicted\\b)/ && view =~ /gitlens\\.views\\.(?!fileHistory|lineHistory)\\b/",
					"group": "inline@96"
				},
				{
					"command": "gitlens.views.openChangesWithWorking",
					"when": "viewItem =~ /gitlens:file\\b(?!.*?\\b\\+(conflicted|unstaged)\\b)/",
					"group": "inline@96"
				},
				{
					"command": "gitlens.views.openFile",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+conflicted\\b)/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory)\\b/",
					"group": "inline@96"
				},
				{
					"command": "gitlens.views.stageFile",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+unstaged\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@97"
				},
				{
					"command": "gitlens.views.unstageFile",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+staged\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@97"
				},
				{
					"command": "gitlens.copyShaToClipboard",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory)\\b/",
					"group": "inline@98",
					"alt": "gitlens.copyMessageToClipboard"
				},
				{
					"command": "gitlens.openFileOnRemote",
					"when": "viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && gitlens:repos:withRemotes",
					"group": "inline@99",
					"alt": "gitlens.copyRemoteFileUrlWithoutRange"
				},
				{
					"command": "gitlens.views.applyChanges",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+stashed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.stageFile",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+unstaged\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.unstageFile",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+staged\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.stashSaveFiles",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+(un)?staged\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.mergeChangesWithWorking",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+stashed\\b)/ && !listMultiSelection",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.restore",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+stashed\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@3"
				},
				{
					"command": "gitlens.views.openChanges",
					"when": "viewItem =~ /gitlens:file\\b/ && !listMultiSelection",
					"group": "2_gitlens_quickopen@1"
				},
				{
					"submenu": "gitlens/commit/file/changes",
					"when": "viewItem =~ /gitlens:file\\b/ && !listMultiSelection",
					"group": "2_gitlens_quickopen@2"
				},
				{
					"command": "gitlens.showInDetailsView",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(fileHistory|lineHistory\\b)/ && !listMultiSelection",
					"group": "2_gitlens_quickopen@3"
				},
				{
					"command": "gitlens.views.openFile",
					"when": "viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/ && !listMultiSelection",
					"group": "2_gitlens_quickopen_file@3"
				},
				{
					"command": "gitlens.views.openFileRevision",
					"when": "viewItem =~ /gitlens:file\\b((?=.*?\\b\\+(committed|stashed)\\b)|:results)/ && !listMultiSelection",
					"group": "2_gitlens_quickopen_file@4"
				},
				{
					"command": "gitlens.openFileOnRemote",
					"when": "viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results)/ && !listMultiSelection && gitlens:repos:withRemotes",
					"group": "2_gitlens_quickopen_file@5",
					"alt": "gitlens.copyRemoteFileUrlWithoutRange"
				},
				{
					"submenu": "gitlens/commit/file/commit",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && !listMultiSelection",
					"group": "3_gitlens_explore@1"
				},
				{
					"submenu": "gitlens/commit/file/history",
					"when": "viewItem =~ /gitlens:file\\b/ && !listMultiSelection",
					"group": "3_gitlens_explore@2"
				},
				{
					"command": "gitlens.views.compareWithHead",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && !listMultiSelection",
					"group": "4_gitlens_compare@2"
				},
				{
					"command": "gitlens.views.compareWithWorking",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /^gitlens\\.views\\.(fileHistory|lineHistory)/ && !listMultiSelection && !gitlens:hasVirtualFolders",
					"group": "4_gitlens_compare@3"
				},
				{
					"command": "gitlens.views.compareFileWithSelected",
					"when": "viewItem =~ /gitlens:file\\b/ && !listMultiSelection && gitlens:views:canCompare:file",
					"group": "4_gitlens_compare@98"
				},
				{
					"command": "gitlens.views.selectFileForCompare",
					"when": "viewItem =~ /gitlens:file\\b(?!.*?\\b\\+conflicted\\b)/ && !listMultiSelection",
					"group": "4_gitlens_compare@99"
				},
				{
					"command": "gitlens.copyRelativePathToClipboard",
					"when": "viewItem =~ /gitlens:file\\b/ && !listMultiSelection",
					"group": "7_gitlens_cutcopypaste@2"
				},
				{
					"command": "gitlens.copyPatchToClipboard",
					"when": "viewItem =~ /gitlens:file(\\b(?=.*?\\b\\+committed\\b)|:results)/ && !gitlens:hasVirtualFolders && !gitlens:untrusted",
					"group": "7_gitlens_cutcopypaste@3"
				},
				{
					"command": "gitlens.copyShaToClipboard",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(file|line)History/ && !listMultiSelection",
					"group": "7_gitlens_cutcopypaste@97"
				},
				{
					"command": "gitlens.copyMessageToClipboard",
					"when": "viewItem =~ /gitlens:file\\b(?=.*?\\b\\+committed\\b)/ && view =~ /gitlens\\.views\\.(file|line)History/ && !listMultiSelection",
					"group": "7_gitlens_cutcopypaste@98"
				},
				{
					"command": "gitlens.views.applyChanges",
					"when": "viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "8_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.mergeChangesWithWorking",
					"when": "viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results\\b)/ && !listMultiSelection",
					"group": "8_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.restore",
					"when": "viewItem =~ /gitlens:file\\b((?=.*?\\b\\+committed\\b)|:results\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "8_gitlens_actions@3"
				},
				{
					"command": "gitlens.views.stageDirectory",
					"when": "viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.unstageDirectory",
					"when": "viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@2"
				},
				{
					"command": "gitlens.views.stageDirectory",
					"when": "viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.unstageDirectory",
					"when": "viewItem =~ /gitlens:folder\\b(?=.*?\\b\\+working\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"submenu": "gitlens/explorer/folder/history",
					"when": "viewItem =~ /gitlens:folder\\b/ && !listMultiSelection",
					"group": "4_timeline@1"
				},
				{
					"command": "gitlens.views.openFile",
					"when": "viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/",
					"group": "inline@1"
				},
				{
					"command": "gitlens.openFileOnRemote",
					"when": "viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/ && !listMultiSelection && gitlens:repos:withRemotes",
					"group": "5_gitlens_open@2",
					"alt": "gitlens.copyRemoteFileUrlWithoutRange"
				},
				{
					"command": "gitlens.views.openPullRequestChanges",
					"when": "viewItem =~ /gitlens:(pullrequest\\b(?=.*?\\b\\+refs\\b)|launchpad:item\\b(?=.*?\\b\\+pr\\b))/",
					"group": "inline@2"
				},
				{
					"command": "gitlens.openPullRequestOnRemote",
					"when": "viewItem =~ /gitlens:(pullrequest\\b|launchpad:item\\b(?=.*?\\b\\+pr\\b))/",
					"group": "inline@98",
					"alt": "gitlens.copyRemotePullRequestUrl"
				},
				{
					"command": "gitlens.views.openInWorktree",
					"when": "viewItem =~ /gitlens:(pullrequest\\b|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && !listMultiSelection",
					"group": "inline@99"
				},
				{
					"command": "gitlens.views.openInWorktree",
					"when": "viewItem =~ /gitlens:(pullrequest\\b|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && !listMultiSelection",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.openPullRequestChanges",
					"when": "viewItem =~ /gitlens:(pullrequest\\b(?=.*?\\b\\+refs\\b)|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && !listMultiSelection",
					"group": "2_gitlens_quickopen@1"
				},
				{
					"command": "gitlens.openPullRequestOnRemote",
					"when": "viewItem =~ /gitlens:(pullrequest\\b|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && !listMultiSelection",
					"group": "2_gitlens_quickopen@2"
				},
				{
					"command": "gitlens.views.openPullRequestComparison",
					"when": "viewItem =~ /gitlens:(pullrequest\\b(?=.*?\\b\\+refs\\b)|launchpad:item\\b(?=.*?\\b\\+pr\\b))/ && !listMultiSelection",
					"group": "4_gitlens_compare@1"
				},
				{
					"command": "gitlens.plus.login",
					"when": "viewItem == gitlens:message:signin",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.loadAllChildren",
					"when": "viewItem =~ /gitlens:pager\\b/",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.loadAllChildren",
					"when": "viewItem =~ /gitlens:pager\\b/ && !listMultiSelection",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.abortPausedOperation",
					"when": "viewItem =~ /gitlens:paused-operation\\b/ && !listMultiSelection",
					"group": "inline@3"
				},
				{
					"command": "gitlens.views.abortPausedOperation",
					"when": "viewItem =~ /gitlens:paused-operation\\b/ && !listMultiSelection",
					"group": "1_gitlens_actions@3"
				},
				{
					"command": "gitlens.views.continuePausedOperation",
					"when": "viewItem =~ /gitlens:paused-operation:(cherry-pick|merge|rebase)\\b/ && !listMultiSelection",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.skipPausedOperation",
					"when": "viewItem =~ /gitlens:paused-operation:(cherry-pick|rebase|revert)\\b/ && !listMultiSelection",
					"group": "inline@2"
				},
				{
					"command": "gitlens.views.continuePausedOperation",
					"when": "viewItem =~ /gitlens:paused-operation:(cherry-pick|merge|rebase)\\b/ && !listMultiSelection",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.skipPausedOperation",
					"when": "viewItem =~ /gitlens:paused-operation:(cherry-pick|rebase|revert)\\b/ && !listMultiSelection",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.openPausedOperationInRebaseEditor",
					"when": "viewItem =~ /gitlens:paused-operation:rebase\\b/ && !listMultiSelection",
					"group": "inline@4"
				},
				{
					"command": "gitlens.views.openPausedOperationInRebaseEditor",
					"when": "viewItem =~ /gitlens:paused-operation:rebase\\b/ && !listMultiSelection",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.views.openPullRequest",
					"when": "viewItem =~ /gitlens:pullrequest\\b/ && gitlens:action:openPullRequest > 1",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.openPullRequest",
					"when": "viewItem =~ /gitlens:pullrequest\\b/ && !listMultiSelection && gitlens:action:openPullRequest > 1",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.showInCommitGraph",
					"when": "viewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/ && !listMultiSelection",
					"group": "3_gitlens_explore@1"
				},
				{
					"command": "gitlens.views.fetch",
					"when": "viewItem =~ /gitlens:remote\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@97"
				},
				{
					"command": "gitlens.connectRemoteProvider",
					"when": "viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+disconnected\\b)/ && config.gitlens.integrations.enabled",
					"group": "inline@98"
				},
				{
					"command": "gitlens.disconnectRemoteProvider",
					"when": "viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+connected\\b)/ && config.gitlens.integrations.enabled",
					"group": "inline@98"
				},
				{
					"command": "gitlens.openRepoOnRemote",
					"when": "viewItem =~ /gitlens:remote\\b/",
					"group": "inline@99",
					"alt": "gitlens.copyRemoteRepositoryUrl"
				},
				{
					"command": "gitlens.views.fetch",
					"when": "viewItem =~ /gitlens:remote\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.pruneRemote",
					"when": "viewItem =~ /gitlens:remote\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.openRepoOnRemote",
					"when": "viewItem =~ /gitlens:remote\\b/ && !listMultiSelection",
					"group": "5_gitlens_open@1"
				},
				{
					"command": "gitlens.openBranchesOnRemote",
					"when": "viewItem =~ /gitlens:remote\\b/ && !listMultiSelection",
					"group": "5_gitlens_open@2"
				},
				{
					"command": "gitlens.views.removeRemote",
					"when": "viewItem =~ /gitlens:remote\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "6_gitlens_terminal@1"
				},
				{
					"command": "gitlens.views.setAsDefault",
					"when": "viewItem =~ /gitlens:remote\\b(?!.*?\\b\\+default\\b)/ && !listMultiSelection",
					"group": "8_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.unsetAsDefault",
					"when": "viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+default\\b)/ && !listMultiSelection",
					"group": "8_gitlens_actions@1"
				},
				{
					"command": "gitlens.connectRemoteProvider",
					"when": "viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+disconnected\\b)/ && config.gitlens.integrations.enabled && !listMultiSelection",
					"group": "8_gitlens_actions@2"
				},
				{
					"command": "gitlens.disconnectRemoteProvider",
					"when": "viewItem =~ /gitlens:remote\\b(?=.*?\\b\\+connected\\b)/ && config.gitlens.integrations.enabled && !listMultiSelection",
					"group": "8_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.addRemote",
					"when": "viewItem =~ /gitlens:remotes\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.repositories.setBranchesLayoutToList",
					"when": "viewItem =~ /gitlens:remotes\\b/ && config.gitlens.views.repositories.branches.layout == tree",
					"group": "inline@50"
				},
				{
					"command": "gitlens.views.repositories.setBranchesLayoutToTree",
					"when": "viewItem =~ /gitlens:remotes\\b/ && config.gitlens.views.repositories.branches.layout == list",
					"group": "inline@50"
				},
				{
					"command": "gitlens.views.addRemote",
					"when": "viewItem =~ /gitlens:remotes\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.push",
					"when": "viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@96",
					"alt": "gitlens.views.pushWithForce"
				},
				{
					"command": "gitlens.views.pull",
					"when": "viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+behind\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@97"
				},
				{
					"command": "gitlens.views.fetch",
					"when": "viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@98"
				},
				{
					"command": "gitlens.views.star",
					"when": "viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+starred\\b)/",
					"group": "inline@99"
				},
				{
					"command": "gitlens.views.unstar",
					"when": "viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+starred\\b)/",
					"group": "inline@99"
				},
				{
					"command": "gitlens.showGraph",
					"when": "viewItem =~ /gitlens:repo-folder\\b/ && gitlens:plus:enabled",
					"group": "inline@100"
				},
				{
					"command": "gitlens.views.commits.setCommitsFilterOff",
					"when": "(view == gitlens.views.commits || (view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits)) && viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+filtered\\b)/ && gitlens:views:commits:filtered",
					"group": "inline@101"
				},
				{
					"command": "gitlens.views.fetch",
					"when": "viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.pull",
					"when": "viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.push",
					"when": "viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.pushWithForce",
					"when": "viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.stashSave",
					"when": "viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_1@1"
				},
				{
					"command": "gitlens.stashApply",
					"when": "viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_1@2"
				},
				{
					"command": "gitlens.views.openInTerminal",
					"when": "viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders",
					"group": "2_gitlens_quickopen@1"
				},
				{
					"command": "gitlens.views.openInIntegratedTerminal",
					"when": "viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders",
					"group": "2_gitlens_quickopen@2"
				},
				{
					"command": "gitlens.openRepoOnRemote",
					"when": "viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:repos:withRemotes",
					"group": "2_gitlens_quickopen@3"
				},
				{
					"command": "gitlens.showGraph",
					"when": "viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection && gitlens:plus:enabled",
					"group": "3_gitlens_explore@1"
				},
				{
					"command": "gitlens.showCommitSearch",
					"when": "viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection",
					"group": "3_gitlens_explore@2"
				},
				{
					"command": "gitlens.views.star",
					"when": "viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+starred\\b)/ && !listMultiSelection",
					"group": "8_gitlens_actions_@1"
				},
				{
					"command": "gitlens.views.star.multi",
					"when": "viewItem =~ /gitlens:repo-folder\\b(?!.*?\\b\\+starred\\b)/ && listMultiSelection",
					"group": "8_gitlens_actions_@1"
				},
				{
					"command": "gitlens.views.unstar",
					"when": "viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+starred\\b)/ && !listMultiSelection",
					"group": "8_gitlens_actions_@1"
				},
				{
					"command": "gitlens.views.unstar.multi",
					"when": "viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+starred\\b)/ && listMultiSelection",
					"group": "8_gitlens_actions_@1"
				},
				{
					"command": "gitlens.views.closeRepository",
					"when": "viewItem =~ /gitlens:repo-folder\\b/ && !listMultiSelection",
					"group": "8_gitlens_actions_@2"
				},
				{
					"command": "gitlens.views.commits.setCommitsFilterOff",
					"when": "!listMultiSelection && (view == gitlens.views.commits || (view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits)) && viewItem =~ /gitlens:repo-folder\\b(?=.*?\\b\\+filtered\\b)/ && gitlens:views:commits:filtered",
					"group": "8_gitlens_filter_@1"
				},
				{
					"command": "gitlens.views.commits.setCommitsFilterAuthors",
					"when": "!listMultiSelection && (view == gitlens.views.commits || (view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits)) && viewItem =~ /gitlens:repo-folder\\b/",
					"group": "8_gitlens_filter_@2"
				},
				{
					"command": "gitlens.views.workspaces.convert",
					"when": "viewItem =~ /gitlens:repositories\\b(?=.*?\\b\\+workspaces\\b)/ && gitlens:plus",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.workspaces.convert",
					"when": "viewItem =~ /gitlens:repositories\\b(?=.*?\\b\\+workspaces\\b)/ && gitlens:plus",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.workspaces.addReposFromLinked",
					"when": "viewItem =~ /gitlens:repositories\\b(?=.*?\\b\\+linked\\b)(?=.*?\\b\\+current\\b)/ && !listMultiSelection",
					"group": "1_gitlens_actions@3"
				},
				{
					"command": "gitlens.views.workspaces.changeAutoAddSetting",
					"when": "viewItem =~ /(gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?=.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)|gitlens:repositories\\b(?=.*?\\b\\+linked\\b))/ && !listMultiSelection",
					"group": "2_gitlens_quickopen@6"
				},
				{
					"command": "gitlens.views.push",
					"when": "viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@96",
					"alt": "gitlens.views.pushWithForce"
				},
				{
					"command": "gitlens.views.pull",
					"when": "viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@97"
				},
				{
					"command": "gitlens.views.fetch",
					"when": "viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@98"
				},
				{
					"command": "gitlens.views.star",
					"when": "viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+(starred|workspace)\\b)/",
					"group": "inline@99"
				},
				{
					"command": "gitlens.views.unstar",
					"when": "viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/",
					"group": "inline@99"
				},
				{
					"command": "gitlens.views.workspaces.repo.openInNewWindow",
					"when": "viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/",
					"group": "inline@100",
					"alt": "gitlens.views.workspaces.repo.open"
				},
				{
					"command": "gitlens.views.workspaces.repo.open",
					"when": "viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/ && !listMultiSelection",
					"group": "0_1gitlens_actions@1"
				},
				{
					"command": "gitlens.views.workspaces.repo.openInNewWindow",
					"when": "viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/ && !listMultiSelection",
					"group": "0_1gitlens_actions@2"
				},
				{
					"command": "gitlens.views.workspaces.repo.addToWindow",
					"when": "viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/ && !listMultiSelection",
					"group": "0_1gitlens_actions@3"
				},
				{
					"command": "gitlens.views.revealRepositoryInExplorer",
					"when": "viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)/ && !listMultiSelection",
					"group": "0_2gitlens_actions@1"
				},
				{
					"command": "gitlens.views.workspaces.repo.locate",
					"when": "viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)(?!.*?\\b\\+local\\b)/ && !listMultiSelection",
					"group": "0_2gitlens_actions@2"
				},
				{
					"command": "gitlens.views.workspaces.repo.remove",
					"when": "viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+workspace\\b)(?!.*?\\b\\+local\\b)/ && !listMultiSelection",
					"group": "0_3gitlens_actions@1"
				},
				{
					"command": "gitlens.views.fetch",
					"when": "viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.pull",
					"when": "viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.push",
					"when": "viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.pushWithForce",
					"when": "viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.stashSave",
					"when": "viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+workspace\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_1@1"
				},
				{
					"command": "gitlens.stashApply",
					"when": "viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+workspace\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_1@2"
				},
				{
					"command": "gitlens.views.openInTerminal",
					"when": "viewItem =~ /gitlens:repository\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders",
					"group": "2_gitlens_quickopen@1"
				},
				{
					"command": "gitlens.views.openInIntegratedTerminal",
					"when": "viewItem =~ /gitlens:repository\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders",
					"group": "2_gitlens_quickopen@2"
				},
				{
					"command": "gitlens.views.revealRepositoryInExplorer",
					"when": "viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+workspace\\b)/ && !listMultiSelection",
					"group": "2_gitlens_quickopen@3"
				},
				{
					"command": "gitlens.openRepoOnRemote",
					"when": "viewItem =~ /gitlens:repository\\b/ && !listMultiSelection && gitlens:repos:withRemotes",
					"group": "2_gitlens_quickopen@4"
				},
				{
					"command": "gitlens.showCommitSearch",
					"when": "viewItem =~ /gitlens:repository\\b/ && !listMultiSelection",
					"group": "3_gitlens_explore@1"
				},
				{
					"command": "gitlens.views.star",
					"when": "viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+(starred|workspace)\\b)/ && !listMultiSelection",
					"group": "8_gitlens_actions_@1"
				},
				{
					"command": "gitlens.views.star.multi",
					"when": "viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+(starred|workspace)\\b)/ && listMultiSelection",
					"group": "8_gitlens_actions_@1"
				},
				{
					"command": "gitlens.views.unstar",
					"when": "viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/ && !listMultiSelection",
					"group": "8_gitlens_actions_@1"
				},
				{
					"command": "gitlens.views.unstar.multi",
					"when": "viewItem =~ /gitlens:repository\\b(?=.*?\\b\\+starred\\b)/ && listMultiSelection",
					"group": "8_gitlens_actions_@1"
				},
				{
					"command": "gitlens.views.closeRepository",
					"when": "viewItem =~ /gitlens:repository\\b(?!.*?\\b\\+closed\\b)/ && !listMultiSelection",
					"group": "8_gitlens_actions_@2"
				},
				{
					"submenu": "gitlens/comparison/results/files/filter/inline",
					"when": "viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?!.*?\\b\\+filtered\\b)/",
					"group": "inline@99"
				},
				{
					"submenu": "gitlens/comparison/results/files/filtered/inline",
					"when": "viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?=.*?\\b\\+filtered\\b)/",
					"group": "inline@99"
				},
				{
					"command": "gitlens.views.clearReviewed",
					"when": "viewItem =~ /gitlens:results:files\\b/ && !listMultiSelection",
					"group": "1_gitlens@1"
				},
				{
					"submenu": "gitlens/comparison/results/files/filter",
					"when": "viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?!.*?\\b\\+filtered\\b)/ && !listMultiSelection",
					"group": "1_gitlens@2"
				},
				{
					"submenu": "gitlens/comparison/results/files/filtered",
					"when": "viewItem =~ /gitlens:results:files\\b(?=.*?\\b\\+filterable\\b)(?=.*?\\b\\+filtered\\b)/ && !listMultiSelection",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.views.editNode",
					"when": "viewItem =~ /gitlens:search:results(?!:)\\b/",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.refreshNode",
					"when": "viewItem =~ /gitlens:search:results(?!:)\\b/",
					"group": "inline@97"
				},
				{
					"command": "gitlens.views.editNode",
					"when": "viewItem =~ /gitlens:search:results(?!:)\\b/ && !listMultiSelection",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.stash.apply",
					"when": "viewItem == gitlens:stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.stash.rename",
					"when": "viewItem == gitlens:stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@98"
				},
				{
					"command": "gitlens.views.stash.delete",
					"when": "viewItem == gitlens:stash && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@99"
				},
				{
					"command": "gitlens.views.stash.apply",
					"when": "viewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.stash.rename",
					"when": "viewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.stash.delete",
					"when": "viewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@3"
				},
				{
					"command": "gitlens.views.stash.delete.multi",
					"when": "viewItem == gitlens:stash && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@3"
				},
				{
					"command": "gitlens.stashSave",
					"when": "viewItem =~ /^gitlens:(stashes|status:files)$/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@98"
				},
				{
					"command": "gitlens.stashApply",
					"when": "viewItem == gitlens:stashes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@99"
				},
				{
					"command": "gitlens.stashSave",
					"when": "viewItem =~ /^gitlens:(stashes|status:files)$/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.stashApply",
					"when": "viewItem == gitlens:stashes && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.fetch",
					"when": "viewItem =~ /gitlens:status(\\-branch)?:upstream:(?!(missing|none))/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@98"
				},
				{
					"command": "gitlens.views.push",
					"when": "viewItem =~ /gitlens:status(\\-branch)?:upstream:ahead/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@99",
					"alt": "gitlens.views.pushWithForce"
				},
				{
					"command": "gitlens.views.pull",
					"when": "viewItem =~ /gitlens:status(\\-branch)?:upstream:behind/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@99"
				},
				{
					"command": "gitlens.views.publishBranch",
					"when": "viewItem =~ /gitlens:status(\\-branch)?:upstream:(missing|none)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@99"
				},
				{
					"command": "gitlens.views.publishRepository",
					"when": "viewItem =~ /gitlens:status(\\-branch)?:upstream:(missing|none)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:repos:withRemotes && !gitlens:untrusted",
					"group": "inline@99"
				},
				{
					"command": "gitlens.views.addRemote",
					"when": "viewItem =~ /gitlens:status(\\-branch)?:upstream:none/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:repos:withRemotes && !gitlens:untrusted",
					"group": "inline@2"
				},
				{
					"command": "gitlens.views.createBranch",
					"when": "viewItem =~ /gitlens:status:upstream/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_secondary_actions@1"
				},
				{
					"command": "gitlens.views.createTag",
					"when": "viewItem =~ /gitlens:status:upstream/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_secondary_actions@2"
				},
				{
					"command": "gitlens.views.openInTerminal",
					"when": "viewItem =~ /gitlens:status:upstream\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders",
					"group": "2_gitlens_quickopen_terminal@1"
				},
				{
					"command": "gitlens.views.openInIntegratedTerminal",
					"when": "viewItem =~ /gitlens:status:upstream\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders",
					"group": "2_gitlens_quickopen_terminal@2"
				},
				{
					"command": "gitlens.views.fetch",
					"when": "viewItem =~ /gitlens:status:upstream:(?!(missing|none))/ && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@3"
				},
				{
					"command": "gitlens.views.createPullRequest",
					"when": "viewItem =~ /gitlens:status:upstream:(?!(missing|none))/ && !listMultiSelection && gitlens:action:createPullRequest && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_secondary_actions@3"
				},
				{
					"command": "gitlens.views.openBranchOnRemote",
					"when": "viewItem =~ /gitlens:status:upstream:(?!(missing|none))/ && !listMultiSelection && gitlens:repos:withRemotes",
					"group": "2_gitlens_quickopen_remote@1"
				},
				{
					"command": "gitlens.copyRemoteBranchUrl",
					"when": "viewItem =~ /gitlens:status:upstream:(?!(missing|none))/ && !listMultiSelection && gitlens:repos:withRemotes",
					"group": "7_gitlens_cutcopypaste@1"
				},
				{
					"command": "gitlens.views.push",
					"when": "viewItem == gitlens:status:upstream:ahead && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.pushWithForce",
					"when": "viewItem == gitlens:status:upstream:ahead && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.pull",
					"when": "viewItem == gitlens:status:upstream:behind && !listMultiSelection && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.createPullRequest",
					"when": "viewItem =~ /gitlens:status:upstream:same/ && gitlens:action:createPullRequest && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.openBranchOnRemote",
					"when": "viewItem =~ /gitlens:status:upstream:same/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@97",
					"alt": "gitlens.copyRemoteBranchUrl"
				},
				{
					"command": "gitlens.views.switchToTag",
					"when": "viewItem =~ /gitlens:tag\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@10"
				},
				{
					"command": "gitlens.views.switchToTag",
					"when": "viewItem =~ /gitlens:tag\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.deleteTag",
					"when": "viewItem == gitlens:tag && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.deleteTag.multi",
					"when": "viewItem == gitlens:tag && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.createBranch",
					"when": "viewItem =~ /gitlens:tag\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_3@3"
				},
				{
					"command": "gitlens.views.createTag",
					"when": "viewItem =~ /gitlens:tags\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.createTag",
					"when": "viewItem =~ /gitlens:tags\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.workspaces.addRepos",
					"when": "viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)/",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.workspaces.locateAllRepos",
					"when": "viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)(?!.*?\\b\\+empty\\b)/",
					"group": "inline@2"
				},
				{
					"command": "gitlens.views.workspaces.createLocal",
					"when": "viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?!.*?\\b\\+hasPath\\b)(?!.*?\\b\\+empty\\b)/",
					"group": "inline@3"
				},
				{
					"command": "gitlens.views.workspaces.openLocalNewWindow",
					"when": "viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)/",
					"group": "inline@3",
					"alt": "gitlens.views.workspaces.openLocal"
				},
				{
					"command": "gitlens.views.workspaces.addRepos",
					"when": "viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)/ && !listMultiSelection",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.workspaces.locateAllRepos",
					"when": "viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)(?!.*?\\b\\+empty\\b)/ && !listMultiSelection",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.views.workspaces.createLocal",
					"when": "viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+empty\\b)/ && !listMultiSelection",
					"group": "2_gitlens_quickopen@3"
				},
				{
					"command": "gitlens.views.workspaces.openLocal",
					"when": "viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)/ && !listMultiSelection",
					"group": "2_gitlens_quickopen@4"
				},
				{
					"command": "gitlens.views.workspaces.openLocalNewWindow",
					"when": "viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+(cloud|local)\\b)(?!.*?\\b\\+current\\b)(?=.*?\\b\\+hasPath\\b)/ && !listMultiSelection",
					"group": "2_gitlens_quickopen@5"
				},
				{
					"command": "gitlens.views.workspaces.delete",
					"when": "viewItem =~ /gitlens:workspace\\b(?=.*?\\b\\+cloud\\b)/ && !listMultiSelection",
					"group": "6_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.workspaces.repo.locate",
					"when": "viewItem =~ /gitlens:workspaceMissingRepository\\b/",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.workspaces.repo.locate",
					"when": "viewItem =~ /gitlens:workspaceMissingRepository\\b/ && !listMultiSelection",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.workspaces.repo.remove",
					"when": "viewItem =~ /gitlens:workspaceMissingRepository\\b/ && !listMultiSelection",
					"group": "6_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.openWorktree",
					"when": "viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+active\\b)/",
					"group": "inline@1",
					"alt": "gitlens.views.openWorktreeInNewWindow"
				},
				{
					"command": "gitlens.views.openWorktree",
					"when": "viewItem =~ /gitlens:worktree\\b(?=.*?\\b\\+active\\b)/ && workspaceFolderCount != 1",
					"group": "inline@1",
					"alt": "gitlens.views.openWorktreeInNewWindow"
				},
				{
					"command": "gitlens.views.openWorktree",
					"when": "viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+active\\b)/ && !listMultiSelection",
					"group": "2_gitlens_quickopen@1"
				},
				{
					"command": "gitlens.views.openWorktree",
					"when": "viewItem =~ /gitlens:worktree\\b(?=.*?\\b\\+active\\b)/ && !listMultiSelection && workspaceFolderCount != 1",
					"group": "2_gitlens_quickopen@1"
				},
				{
					"command": "gitlens.views.openWorktreeInNewWindow",
					"when": "viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+active\\b)/ && !listMultiSelection",
					"group": "2_gitlens_quickopen@2"
				},
				{
					"command": "gitlens.views.openWorktreeInNewWindow",
					"when": "viewItem =~ /gitlens:worktree\\b(?=.*?\\b\\+active\\b)/ && !listMultiSelection && workspaceFolderCount != 1",
					"group": "2_gitlens_quickopen@2"
				},
				{
					"command": "gitlens.views.openWorktreeInNewWindow.multi",
					"when": "viewItem =~ /gitlens:worktree\\b/ && listMultiSelection",
					"group": "2_gitlens_quickopen@2"
				},
				{
					"command": "gitlens.views.revealWorktreeInExplorer",
					"when": "viewItem =~ /gitlens:worktree\\b/ && !listMultiSelection",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.deleteWorktree",
					"when": "viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+(active|default)\\b)/ && !listMultiSelection && !gitlens:readonly",
					"group": "6_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.deleteWorktree.multi",
					"when": "viewItem =~ /gitlens:worktree\\b(?!.*?\\b\\+(active|default)\\b)/ && listMultiSelection && !gitlens:readonly",
					"group": "6_gitlens_actions@1"
				},
				{
					"command": "gitlens.views.createWorktree",
					"when": "viewItem =~ /gitlens:worktrees\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "inline@1"
				},
				{
					"command": "gitlens.views.createWorktree",
					"when": "viewItem =~ /gitlens:worktrees\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				}
			],
			"view/title": [
				{
					"command": "gitlens.views.switchToAnotherBranch",
					"when": "view == gitlens.views.branches && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "navigation@10"
				},
				{
					"command": "gitlens.views.title.createBranch",
					"when": "view == gitlens.views.branches && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "navigation@11"
				},
				{
					"command": "gitlens.views.branches.setLayoutToList",
					"when": "view == gitlens.views.branches && config.gitlens.views.branches.branches.layout == tree",
					"group": "navigation@50"
				},
				{
					"command": "gitlens.views.branches.setLayoutToTree",
					"when": "view == gitlens.views.branches && config.gitlens.views.branches.branches.layout == list",
					"group": "navigation@50"
				},
				{
					"command": "gitlens.views.branches.refresh",
					"when": "view == gitlens.views.branches",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.views.branches.regroup",
					"when": "view == gitlens.views.branches",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.branches.setFilesLayoutToAuto",
					"when": "view == gitlens.views.branches && config.gitlens.views.branches.files.layout == tree",
					"group": "3_gitlens@0"
				},
				{
					"command": "gitlens.views.branches.setFilesLayoutToList",
					"when": "view == gitlens.views.branches && config.gitlens.views.branches.files.layout == auto",
					"group": "3_gitlens@0"
				},
				{
					"command": "gitlens.views.branches.setFilesLayoutToTree",
					"when": "view == gitlens.views.branches && config.gitlens.views.branches.files.layout == list",
					"group": "3_gitlens@0"
				},
				{
					"command": "gitlens.views.branches.setShowAvatarsOff",
					"when": "view == gitlens.views.branches && config.gitlens.views.branches.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.branches.setShowAvatarsOn",
					"when": "view == gitlens.views.branches && !config.gitlens.views.branches.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.branches.setShowBranchComparisonOff",
					"when": "view == gitlens.views.branches && config.gitlens.views.branches.showBranchComparison",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.branches.setShowBranchComparisonOn",
					"when": "view == gitlens.views.branches && !config.gitlens.views.branches.showBranchComparison",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.branches.setShowBranchPullRequestOff",
					"when": "view == gitlens.views.branches && config.gitlens.views.branches.pullRequests.enabled && config.gitlens.views.branches.pullRequests.showForBranches",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.branches.setShowBranchPullRequestOn",
					"when": "view == gitlens.views.branches && !config.gitlens.views.branches.pullRequests.enabled && !config.gitlens.views.branches.pullRequests.showForBranches",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "view == gitlens.views.branches && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "view == gitlens.views.branches && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.branches.setShowRemoteBranchesOff",
					"when": "view == gitlens.views.branches && config.gitlens.views.branches.showRemoteBranches && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@5"
				},
				{
					"command": "gitlens.views.branches.setShowRemoteBranchesOn",
					"when": "view == gitlens.views.branches && !config.gitlens.views.branches.showRemoteBranches && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@5"
				},
				{
					"command": "gitlens.views.branches.setShowStashesOff",
					"when": "view == gitlens.views.branches && config.gitlens.views.branches.showStashes && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@6"
				},
				{
					"command": "gitlens.views.branches.setShowStashesOn",
					"when": "view == gitlens.views.branches && !config.gitlens.views.branches.showStashes && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@6"
				},
				{
					"command": "gitlens.views.branches.regroup",
					"when": "view == gitlens.views.branches",
					"group": "9_gitlens@0"
				},
				{
					"command": "gitlens.showSettingsPage!branches-view",
					"when": "view == gitlens.views.branches",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.commitDetails.refresh",
					"when": "view == gitlens.views.commitDetails",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.pushRepositories",
					"when": "view == gitlens.views.commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "navigation@1"
				},
				{
					"command": "gitlens.pullRepositories",
					"when": "view == gitlens.views.commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "navigation@2"
				},
				{
					"command": "gitlens.fetchRepositories",
					"when": "view == gitlens.views.commits && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "navigation@3"
				},
				{
					"command": "gitlens.views.switchToAnotherBranch",
					"when": "view == gitlens.views.commits && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "navigation@10"
				},
				{
					"command": "gitlens.showGraph",
					"when": "view == gitlens.views.commits && gitlens:plus:enabled",
					"group": "navigation@11"
				},
				{
					"command": "gitlens.views.commits.setCommitsFilterOff",
					"when": "view == gitlens.views.commits && gitlens:views:commits:filtered",
					"group": "navigation@50"
				},
				{
					"command": "gitlens.views.commits.refresh",
					"when": "view == gitlens.views.commits",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.views.commits.regroup",
					"when": "view == gitlens.views.commits",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.commits.setCommitsFilterOff",
					"when": "view == gitlens.views.commits && gitlens:views:commits:filtered",
					"group": "2_gitlens@0"
				},
				{
					"command": "gitlens.views.commits.setCommitsFilterAuthors",
					"when": "view == gitlens.views.commits",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.views.commits.setFilesLayoutToAuto",
					"when": "view == gitlens.views.commits && config.gitlens.views.commits.files.layout == tree",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.commits.setFilesLayoutToList",
					"when": "view == gitlens.views.commits && config.gitlens.views.commits.files.layout == auto",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.commits.setFilesLayoutToTree",
					"when": "view == gitlens.views.commits && config.gitlens.views.commits.files.layout == list",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.commits.setShowAvatarsOff",
					"when": "view == gitlens.views.commits && config.gitlens.views.commits.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.commits.setShowAvatarsOn",
					"when": "view == gitlens.views.commits && !config.gitlens.views.commits.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.commits.setShowBranchComparisonOff",
					"when": "view == gitlens.views.commits && config.gitlens.views.commits.showBranchComparison",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.commits.setShowBranchComparisonOn",
					"when": "view == gitlens.views.commits && !config.gitlens.views.commits.showBranchComparison",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.commits.setShowBranchPullRequestOff",
					"when": "view == gitlens.views.commits && config.gitlens.views.commits.pullRequests.enabled && config.gitlens.views.commits.pullRequests.showForBranches",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.commits.setShowBranchPullRequestOn",
					"when": "view == gitlens.views.commits && !config.gitlens.views.commits.pullRequests.enabled && !config.gitlens.views.commits.pullRequests.showForBranches",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "view == gitlens.views.commits && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "view == gitlens.views.commits && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.commits.setShowMergeCommitsOff",
					"when": "view == gitlens.views.commits && !gitlens:views:commits:hideMergeCommits",
					"group": "5_gitlens@5"
				},
				{
					"command": "gitlens.views.commits.setShowMergeCommitsOn",
					"when": "view == gitlens.views.commits && gitlens:views:commits:hideMergeCommits",
					"group": "5_gitlens@5"
				},
				{
					"command": "gitlens.views.commits.setShowStashesOff",
					"when": "view == gitlens.views.commits && config.gitlens.views.commits.showStashes && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@6"
				},
				{
					"command": "gitlens.views.commits.setShowStashesOn",
					"when": "view == gitlens.views.commits && !config.gitlens.views.commits.showStashes && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@6"
				},
				{
					"command": "gitlens.showGraph",
					"when": "view == gitlens.views.commits && gitlens:plus:enabled",
					"group": "8_gitlens_toggles@0"
				},
				{
					"command": "gitlens.showRepositoriesView",
					"when": "view == gitlens.views.commits && !gitlens:hasVirtualFolders",
					"group": "8_gitlens_toggles@1"
				},
				{
					"command": "gitlens.views.commits.regroup",
					"when": "view == gitlens.views.commits",
					"group": "9_gitlens@0"
				},
				{
					"command": "gitlens.showSettingsPage!commits-view",
					"when": "view == gitlens.views.commits",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.addAuthors",
					"when": "view == gitlens.views.contributors && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "navigation@10"
				},
				{
					"command": "gitlens.views.contributors.refresh",
					"when": "view == gitlens.views.contributors",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.views.contributors.regroup",
					"when": "view == gitlens.views.contributors",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.contributors.setShowAllBranchesOff",
					"when": "view == gitlens.views.contributors && config.gitlens.views.contributors.showAllBranches",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.contributors.setShowAllBranchesOn",
					"when": "view == gitlens.views.contributors && !config.gitlens.views.contributors.showAllBranches",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.contributors.setFilesLayoutToAuto",
					"when": "view == gitlens.views.contributors && config.gitlens.views.contributors.files.layout == tree",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.contributors.setFilesLayoutToList",
					"when": "view == gitlens.views.contributors && config.gitlens.views.contributors.files.layout == auto",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.contributors.setFilesLayoutToTree",
					"when": "view == gitlens.views.contributors && config.gitlens.views.contributors.files.layout == list",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.contributors.setShowAvatarsOff",
					"when": "view == gitlens.views.contributors && config.gitlens.views.contributors.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.contributors.setShowAvatarsOn",
					"when": "view == gitlens.views.contributors && !config.gitlens.views.contributors.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "view == gitlens.views.contributors && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "view == gitlens.views.contributors && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.contributors.setShowMergeCommitsOff",
					"when": "view == gitlens.views.contributors && !gitlens:views:contributors:hideMergeCommits",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.contributors.setShowMergeCommitsOn",
					"when": "view == gitlens.views.contributors && gitlens:views:contributors:hideMergeCommits",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.contributors.setShowStatisticsOff",
					"when": "view == gitlens.views.contributors && config.gitlens.views.contributors.showStatistics",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.contributors.setShowStatisticsOn",
					"when": "view == gitlens.views.contributors && !config.gitlens.views.contributors.showStatistics",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.contributors.regroup",
					"when": "view == gitlens.views.contributors",
					"group": "9_gitlens@0"
				},
				{
					"command": "gitlens.showSettingsPage!contributors-view",
					"when": "view == gitlens.views.contributors",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.drafts.create",
					"when": "view == gitlens.views.drafts && gitlens:plus",
					"group": "navigation@1"
				},
				{
					"command": "gitlens.views.drafts.refresh",
					"when": "view == gitlens.views.drafts",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.drafts.setShowAvatarsOff",
					"when": "view == gitlens.views.drafts && config.gitlens.views.drafts.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.drafts.setShowAvatarsOn",
					"when": "view == gitlens.views.drafts && !config.gitlens.views.drafts.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.drafts.info",
					"when": "view == gitlens.views.drafts",
					"group": "8_info@1"
				},
				{
					"command": "gitlens.views.fileHistory.setEditorFollowingOff",
					"when": "view == gitlens.views.fileHistory && gitlens:views:fileHistory:canPin && gitlens:views:fileHistory:editorFollowing",
					"group": "navigation@10"
				},
				{
					"command": "gitlens.views.fileHistory.setEditorFollowingOn",
					"when": "view == gitlens.views.fileHistory && !gitlens:views:fileHistory:editorFollowing",
					"group": "navigation@10"
				},
				{
					"command": "gitlens.views.fileHistory.setCursorFollowingOff",
					"when": "view == gitlens.views.fileHistory && gitlens:views:fileHistory:cursorFollowing && !gitlens:hasVirtualFolders",
					"group": "navigation@11"
				},
				{
					"command": "gitlens.views.fileHistory.setCursorFollowingOn",
					"when": "view == gitlens.views.fileHistory && !gitlens:hasVirtualFolders && !gitlens:views:fileHistory:cursorFollowing",
					"group": "navigation@11"
				},
				{
					"command": "gitlens.views.fileHistory.refresh",
					"when": "view == gitlens.views.fileHistory",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.fileHistory.changeBase",
					"when": "view == gitlens.views.fileHistory",
					"group": "1_gitlens@0"
				},
				{
					"command": "gitlens.views.fileHistory.setRenameFollowingOff",
					"when": "view == gitlens.views.fileHistory && config.gitlens.advanced.fileHistoryFollowsRenames && !gitlens:views:fileHistory:cursorFollowing",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.fileHistory.setRenameFollowingOn",
					"when": "view == gitlens.views.fileHistory && !config.gitlens.advanced.fileHistoryFollowsRenames && !gitlens:views:fileHistory:cursorFollowing",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.fileHistory.setShowMergeCommitsOff",
					"when": "view == gitlens.views.fileHistory && config.gitlens.advanced.fileHistoryShowMergeCommits && !gitlens:views:fileHistory:cursorFollowing",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.fileHistory.setShowMergeCommitsOn",
					"when": "view == gitlens.views.fileHistory && !config.gitlens.advanced.fileHistoryShowMergeCommits && !gitlens:views:fileHistory:cursorFollowing",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.fileHistory.setShowAllBranchesOff",
					"when": "view == gitlens.views.fileHistory && config.gitlens.advanced.fileHistoryShowAllBranches && !gitlens:views:fileHistory:cursorFollowing",
					"group": "3_gitlens@3"
				},
				{
					"command": "gitlens.views.fileHistory.setShowAllBranchesOn",
					"when": "view == gitlens.views.fileHistory && !config.gitlens.advanced.fileHistoryShowAllBranches && !gitlens:views:fileHistory:cursorFollowing",
					"group": "3_gitlens@3"
				},
				{
					"command": "gitlens.views.fileHistory.setShowAvatarsOff",
					"when": "view == gitlens.views.fileHistory && config.gitlens.views.fileHistory.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.fileHistory.setShowAvatarsOn",
					"when": "view == gitlens.views.fileHistory && !config.gitlens.views.fileHistory.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "view == gitlens.views.fileHistory && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "view == gitlens.views.fileHistory && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.showLineHistoryView",
					"when": "view == gitlens.views.fileHistory && !gitlens:hasVirtualFolders",
					"group": "8_gitlens_toggles@0"
				},
				{
					"command": "gitlens.showSettingsPage!file-history-view",
					"when": "view == gitlens.views.fileHistory",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.graph.openInTab",
					"when": "view == gitlens.views.graph",
					"group": "navigation@-100"
				},
				{
					"command": "gitlens.views.graph.refresh",
					"when": "view == gitlens.views.graph",
					"group": "navigation@-99"
				},
				{
					"submenu": "gitlens/graph/configuration",
					"when": "view == gitlens.views.graph",
					"group": "navigation@-98"
				},
				{
					"command": "gitlens.views.graphDetails.refresh",
					"when": "view == gitlens.views.graphDetails",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.home.whatsNew",
					"when": "view == gitlens.views.home",
					"group": "navigation@1"
				},
				{
					"command": "gitlens.views.home.previewFeedback",
					"when": "view == gitlens.views.home",
					"group": "navigation@96"
				},
				{
					"command": "gitlens.views.home.disablePreview",
					"when": "view == gitlens.views.home && config.gitlens.home.preview.enabled",
					"group": "navigation@97"
				},
				{
					"command": "gitlens.views.home.enablePreview",
					"when": "view == gitlens.views.home && !config.gitlens.home.preview.enabled",
					"group": "navigation@97"
				},
				{
					"command": "gitlens.views.home.info",
					"when": "view == gitlens.views.home",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.views.home.refresh",
					"when": "view == gitlens.views.home",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.home.help",
					"when": "view == gitlens.views.home",
					"group": "1_gitlens@97"
				},
				{
					"command": "gitlens.views.home.issues",
					"when": "view == gitlens.views.home",
					"group": "2_gitlens@98"
				},
				{
					"command": "gitlens.views.home.discussions",
					"when": "view == gitlens.views.home",
					"group": "2_gitlens@99"
				},
				{
					"command": "gitlens.views.launchpad.setFilesLayoutToAuto",
					"when": "view == gitlens.views.launchpad && config.gitlens.views.launchpad.files.layout == tree",
					"group": "navigation@50"
				},
				{
					"command": "gitlens.views.launchpad.setFilesLayoutToList",
					"when": "view == gitlens.views.launchpad && config.gitlens.views.launchpad.files.layout == auto",
					"group": "navigation@50"
				},
				{
					"command": "gitlens.views.launchpad.setFilesLayoutToTree",
					"when": "view == gitlens.views.launchpad && config.gitlens.views.launchpad.files.layout == list",
					"group": "navigation@50"
				},
				{
					"command": "gitlens.views.launchpad.refresh",
					"when": "view == gitlens.views.launchpad",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.views.launchpad.regroup",
					"when": "view == gitlens.views.launchpad",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.launchpad.setShowAvatarsOff",
					"when": "view == gitlens.views.launchpad && config.gitlens.views.launchpad.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.launchpad.setShowAvatarsOn",
					"when": "view == gitlens.views.launchpad && !config.gitlens.views.launchpad.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.launchpad.info",
					"when": "view == gitlens.views.launchpad",
					"group": "8_info@1"
				},
				{
					"command": "gitlens.views.launchpad.regroup",
					"when": "view == gitlens.views.launchpad",
					"group": "9_gitlens@0"
				},
				{
					"command": "gitlens.views.lineHistory.setEditorFollowingOff",
					"when": "view == gitlens.views.lineHistory && gitlens:views:lineHistory:editorFollowing",
					"group": "navigation@10"
				},
				{
					"command": "gitlens.views.lineHistory.setEditorFollowingOn",
					"when": "view == gitlens.views.lineHistory && !gitlens:views:lineHistory:editorFollowing",
					"group": "navigation@10"
				},
				{
					"command": "gitlens.views.lineHistory.refresh",
					"when": "view == gitlens.views.lineHistory",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.lineHistory.changeBase",
					"when": "view == gitlens.views.lineHistory",
					"group": "1_gitlens@0"
				},
				{
					"command": "gitlens.views.lineHistory.setShowAvatarsOff",
					"when": "view == gitlens.views.lineHistory && config.gitlens.views.lineHistory.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.lineHistory.setShowAvatarsOn",
					"when": "view == gitlens.views.lineHistory && !config.gitlens.views.lineHistory.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "view == gitlens.views.lineHistory && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "view == gitlens.views.lineHistory && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.showSettingsPage!line-history-view",
					"when": "view == gitlens.views.lineHistory",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.patchDetails.refresh",
					"when": "view == gitlens.views.patchDetails",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.views.patchDetails.close",
					"when": "view == gitlens.views.patchDetails",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.pullRequest.setFilesLayoutToAuto",
					"when": "view == gitlens.views.pullRequest && config.gitlens.views.pullRequest.files.layout == tree",
					"group": "navigation@50"
				},
				{
					"command": "gitlens.views.pullRequest.setFilesLayoutToList",
					"when": "view == gitlens.views.pullRequest && config.gitlens.views.pullRequest.files.layout == auto",
					"group": "navigation@50"
				},
				{
					"command": "gitlens.views.pullRequest.setFilesLayoutToTree",
					"when": "view == gitlens.views.pullRequest && config.gitlens.views.pullRequest.files.layout == list",
					"group": "navigation@50"
				},
				{
					"command": "gitlens.views.pullRequest.refresh",
					"when": "view == gitlens.views.pullRequest",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.views.pullRequest.close",
					"when": "view == gitlens.views.pullRequest",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.pullRequest.setShowAvatarsOff",
					"when": "view == gitlens.views.pullRequest && config.gitlens.views.pullRequest.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.pullRequest.setShowAvatarsOn",
					"when": "view == gitlens.views.pullRequest && !config.gitlens.views.pullRequest.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.addRemote",
					"when": "view == gitlens.views.remotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "navigation@1"
				},
				{
					"command": "gitlens.views.remotes.setLayoutToList",
					"when": "view == gitlens.views.remotes && config.gitlens.views.remotes.branches.layout == tree",
					"group": "navigation@50"
				},
				{
					"command": "gitlens.views.remotes.setLayoutToTree",
					"when": "view == gitlens.views.remotes && config.gitlens.views.remotes.branches.layout == list",
					"group": "navigation@50"
				},
				{
					"command": "gitlens.views.remotes.refresh",
					"when": "view == gitlens.views.remotes",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.views.remotes.regroup",
					"when": "view == gitlens.views.remotes",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.remotes.setFilesLayoutToAuto",
					"when": "view == gitlens.views.remotes && config.gitlens.views.remotes.files.layout == tree",
					"group": "3_gitlens@0"
				},
				{
					"command": "gitlens.views.remotes.setFilesLayoutToList",
					"when": "view == gitlens.views.remotes && config.gitlens.views.remotes.files.layout == auto",
					"group": "3_gitlens@0"
				},
				{
					"command": "gitlens.views.remotes.setFilesLayoutToTree",
					"when": "view == gitlens.views.remotes && config.gitlens.views.remotes.files.layout == list",
					"group": "3_gitlens@0"
				},
				{
					"command": "gitlens.views.remotes.setShowAvatarsOff",
					"when": "view == gitlens.views.remotes && config.gitlens.views.remotes.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.remotes.setShowAvatarsOn",
					"when": "view == gitlens.views.remotes && !config.gitlens.views.remotes.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.remotes.setShowBranchPullRequestOff",
					"when": "view == gitlens.views.remotes && config.gitlens.views.remotes.pullRequests.enabled && config.gitlens.views.remotes.pullRequests.showForBranches",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.remotes.setShowBranchPullRequestOn",
					"when": "view == gitlens.views.remotes && !config.gitlens.views.remotes.pullRequests.enabled && !config.gitlens.views.remotes.pullRequests.showForBranches",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "view == gitlens.views.remotes && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "view == gitlens.views.remotes && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.remotes.regroup",
					"when": "view == gitlens.views.remotes",
					"group": "9_gitlens@0"
				},
				{
					"command": "gitlens.showSettingsPage!remotes-view",
					"when": "view == gitlens.views.remotes",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.pushRepositories",
					"when": "view == gitlens.views.repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "navigation@1"
				},
				{
					"command": "gitlens.pullRepositories",
					"when": "view == gitlens.views.repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "navigation@2"
				},
				{
					"command": "gitlens.fetchRepositories",
					"when": "view == gitlens.views.repositories && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "navigation@3"
				},
				{
					"command": "gitlens.views.repositories.refresh",
					"when": "view == gitlens.views.repositories",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.views.repositories.regroup",
					"when": "view == gitlens.views.repositories",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.repositories.setAutoRefreshToOff",
					"when": "view == gitlens.views.repositories && config.gitlens.views.repositories.autoRefresh && gitlens:views:repositories:autoRefresh",
					"group": "2_gitlens@0"
				},
				{
					"command": "gitlens.views.repositories.setAutoRefreshToOn",
					"when": "view == gitlens.views.repositories && config.gitlens.views.repositories.autoRefresh && !gitlens:views:repositories:autoRefresh",
					"group": "2_gitlens@0"
				},
				{
					"command": "gitlens.views.repositories.setFilesLayoutToAuto",
					"when": "view == gitlens.views.repositories && config.gitlens.views.repositories.files.layout == tree",
					"group": "3_gitlens@0"
				},
				{
					"command": "gitlens.views.repositories.setFilesLayoutToList",
					"when": "view == gitlens.views.repositories && config.gitlens.views.repositories.files.layout == auto",
					"group": "3_gitlens@0"
				},
				{
					"command": "gitlens.views.repositories.setFilesLayoutToTree",
					"when": "view == gitlens.views.repositories && config.gitlens.views.repositories.files.layout == list",
					"group": "3_gitlens@0"
				},
				{
					"command": "gitlens.views.repositories.setShowAvatarsOff",
					"when": "view == gitlens.views.repositories && config.gitlens.views.repositories.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.repositories.setShowAvatarsOn",
					"when": "view == gitlens.views.repositories && !config.gitlens.views.repositories.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "view == gitlens.views.repositories && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "view == gitlens.views.repositories && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.repositories.regroup",
					"when": "view == gitlens.views.repositories",
					"group": "9_gitlens@0"
				},
				{
					"command": "gitlens.showSettingsPage!repositories-view",
					"when": "view == gitlens.views.repositories",
					"group": "9_gitlens@1"
				},
				{
					"submenu": "gitlens/view/repositories/sections",
					"when": "(view == gitlens.views.repositories) || (view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories)",
					"group": "4_gitlens@1"
				},
				{
					"command": "gitlens.views.scm.grouped.commits",
					"when": "view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.commits && !config.gitlens.views.scm.grouped.hiddenViews.commits && (gitlens:views:scm:grouped:view != commits || gitlens:views:scm:grouped:welcome)",
					"group": "navigation@1",
					"alt": "gitlens.views.scm.grouped.commits.detach"
				},
				{
					"submenu": "gitlens/views/grouped/commits",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.scm.grouped.views.commits && !gitlens:views:scm:grouped:welcome",
					"group": "navigation@1"
				},
				{
					"command": "gitlens.views.scm.grouped.branches",
					"when": "view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.branches && !config.gitlens.views.scm.grouped.hiddenViews.branches && (gitlens:views:scm:grouped:view != branches || gitlens:views:scm:grouped:welcome)",
					"group": "navigation@2",
					"alt": "gitlens.views.scm.grouped.branches.detach"
				},
				{
					"submenu": "gitlens/views/grouped/branches",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.scm.grouped.views.branches && !gitlens:views:scm:grouped:welcome",
					"group": "navigation@2"
				},
				{
					"command": "gitlens.views.scm.grouped.remotes",
					"when": "view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.remotes && !config.gitlens.views.scm.grouped.hiddenViews.remotes && (gitlens:views:scm:grouped:view != remotes || gitlens:views:scm:grouped:welcome)",
					"group": "navigation@3",
					"alt": "gitlens.views.scm.grouped.remotes.detach"
				},
				{
					"submenu": "gitlens/views/grouped/remotes",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.scm.grouped.views.remotes && !gitlens:views:scm:grouped:welcome",
					"group": "navigation@3"
				},
				{
					"command": "gitlens.views.scm.grouped.stashes",
					"when": "!gitlens:hasVirtualFolders && view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.stashes && !config.gitlens.views.scm.grouped.hiddenViews.stashes && (gitlens:views:scm:grouped:view != stashes || gitlens:views:scm:grouped:welcome)",
					"group": "navigation@4",
					"alt": "gitlens.views.scm.grouped.stashes.detach"
				},
				{
					"submenu": "gitlens/views/grouped/stashes",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == stashes && config.gitlens.views.scm.grouped.views.stashes && !gitlens:hasVirtualFolders && !gitlens:views:scm:grouped:welcome",
					"group": "navigation@4"
				},
				{
					"command": "gitlens.views.scm.grouped.tags",
					"when": "view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.tags && !config.gitlens.views.scm.grouped.hiddenViews.tags && (gitlens:views:scm:grouped:view != tags || gitlens:views:scm:grouped:welcome)",
					"group": "navigation@5",
					"alt": "gitlens.views.scm.grouped.tags.detach"
				},
				{
					"submenu": "gitlens/views/grouped/tags",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.scm.grouped.views.tags && !gitlens:views:scm:grouped:welcome",
					"group": "navigation@5"
				},
				{
					"command": "gitlens.views.scm.grouped.worktrees",
					"when": "!gitlens:hasVirtualFolders && gitlens:plus:enabled && view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.worktrees && !config.gitlens.views.scm.grouped.hiddenViews.worktrees && (gitlens:views:scm:grouped:view != worktrees || gitlens:views:scm:grouped:welcome)",
					"group": "navigation@6",
					"alt": "gitlens.views.scm.grouped.worktrees.detach"
				},
				{
					"submenu": "gitlens/views/grouped/worktrees",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.scm.grouped.views.worktrees && gitlens:plus:enabled && !gitlens:hasVirtualFolders && !gitlens:views:scm:grouped:welcome",
					"group": "navigation@6"
				},
				{
					"command": "gitlens.views.scm.grouped.contributors",
					"when": "view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.contributors && !config.gitlens.views.scm.grouped.hiddenViews.contributors && (gitlens:views:scm:grouped:view != contributors || gitlens:views:scm:grouped:welcome)",
					"group": "navigation@7",
					"alt": "gitlens.views.scm.grouped.contributors.detach"
				},
				{
					"submenu": "gitlens/views/grouped/contributors",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.scm.grouped.views.contributors && !gitlens:views:scm:grouped:welcome",
					"group": "navigation@7"
				},
				{
					"command": "gitlens.views.scm.grouped.repositories",
					"when": "view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.repositories && !config.gitlens.views.scm.grouped.hiddenViews.repositories && (gitlens:views:scm:grouped:view != repositories || gitlens:views:scm:grouped:welcome)",
					"group": "navigation@8",
					"alt": "gitlens.views.scm.grouped.repositories.detach"
				},
				{
					"submenu": "gitlens/views/grouped/repositories",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.scm.grouped.views.repositories && !gitlens:views:scm:grouped:welcome",
					"group": "navigation@8"
				},
				{
					"command": "gitlens.views.scm.grouped.searchAndCompare",
					"when": "view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.searchAndCompare && !config.gitlens.views.scm.grouped.hiddenViews.searchAndCompare && (gitlens:views:scm:grouped:view != searchAndCompare || gitlens:views:scm:grouped:welcome)",
					"group": "navigation@9",
					"alt": "gitlens.views.scm.grouped.searchAndCompare.detach"
				},
				{
					"submenu": "gitlens/views/grouped/searchAndCompare",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.scm.grouped.views.searchAndCompare && !gitlens:views:scm:grouped:welcome",
					"group": "navigation@9"
				},
				{
					"command": "gitlens.views.scm.grouped.launchpad",
					"when": "view == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.launchpad && !config.gitlens.views.scm.grouped.hiddenViews.launchpad && (gitlens:views:scm:grouped:view != launchpad || gitlens:views:scm:grouped:welcome)",
					"group": "navigation@10",
					"alt": "gitlens.views.scm.grouped.launchpad.detach"
				},
				{
					"submenu": "gitlens/views/grouped/launchpad",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.scm.grouped.views.launchpad && !gitlens:views:scm:grouped:welcome",
					"group": "navigation@10"
				},
				{
					"command": "gitlens.views.scm.grouped.refresh",
					"when": "view == gitlens.views.scm.grouped",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.views.scm.grouped.branches.detach",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.scm.grouped.views.branches",
					"group": "1_gitlens@-1"
				},
				{
					"command": "gitlens.views.scm.grouped.commits.detach",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.scm.grouped.views.commits",
					"group": "1_gitlens@-1"
				},
				{
					"command": "gitlens.views.scm.grouped.contributors.detach",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.scm.grouped.views.contributors",
					"group": "1_gitlens@-1"
				},
				{
					"command": "gitlens.views.scm.grouped.launchpad.detach",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.scm.grouped.views.launchpad",
					"group": "1_gitlens@-1"
				},
				{
					"command": "gitlens.views.scm.grouped.remotes.detach",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.scm.grouped.views.remotes",
					"group": "1_gitlens@-1"
				},
				{
					"command": "gitlens.views.scm.grouped.repositories.detach",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.scm.grouped.views.repositories",
					"group": "1_gitlens@-1"
				},
				{
					"command": "gitlens.views.scm.grouped.searchAndCompare.detach",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.scm.grouped.views.searchAndCompare",
					"group": "1_gitlens@-1"
				},
				{
					"command": "gitlens.views.scm.grouped.stashes.detach",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == stashes && config.gitlens.views.scm.grouped.views.stashes",
					"group": "1_gitlens@-1"
				},
				{
					"command": "gitlens.views.scm.grouped.tags.detach",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.scm.grouped.views.tags",
					"group": "1_gitlens@-1"
				},
				{
					"command": "gitlens.views.scm.grouped.worktrees.detach",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.scm.grouped.views.worktrees",
					"group": "1_gitlens@-1"
				},
				{
					"submenu": "gitlens/views/grouped/detachOrRegroup",
					"when": "view == gitlens.views.scm.grouped && !gitlens:views:scm:grouped:welcome",
					"group": "1_gitlens@1"
				},
				{
					"submenu": "gitlens/views/grouped/visibility",
					"when": "view == gitlens.views.scm.grouped && !gitlens:views:scm:grouped:welcome",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.views.branches.viewOptionsTitle",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches",
					"group": "1_gitlens_1@1"
				},
				{
					"command": "gitlens.views.commits.viewOptionsTitle",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits",
					"group": "1_gitlens_1@1"
				},
				{
					"command": "gitlens.views.contributors.viewOptionsTitle",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors",
					"group": "1_gitlens_1@1"
				},
				{
					"command": "gitlens.views.launchpad.viewOptionsTitle",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad",
					"group": "1_gitlens_1@1"
				},
				{
					"command": "gitlens.views.remotes.viewOptionsTitle",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes",
					"group": "1_gitlens_1@1"
				},
				{
					"command": "gitlens.views.repositories.viewOptionsTitle",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories",
					"group": "1_gitlens_1@1"
				},
				{
					"command": "gitlens.views.searchAndCompare.viewOptionsTitle",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare",
					"group": "1_gitlens_1@1"
				},
				{
					"command": "gitlens.views.stashes.viewOptionsTitle",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == stashes",
					"group": "1_gitlens_1@1"
				},
				{
					"command": "gitlens.views.tags.viewOptionsTitle",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags",
					"group": "1_gitlens_1@1"
				},
				{
					"command": "gitlens.views.worktrees.viewOptionsTitle",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees",
					"group": "1_gitlens_1@1"
				},
				{
					"command": "gitlens.views.repositories.setAutoRefreshToOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.repositories.autoRefresh && gitlens:views:repositories:autoRefresh",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.views.repositories.setAutoRefreshToOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.repositories.autoRefresh && !gitlens:views:repositories:autoRefresh",
					"group": "2_gitlens@1"
				},
				{
					"command": "gitlens.views.branches.setLayoutToList",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.branches.layout == tree",
					"group": "3_gitlens@0"
				},
				{
					"command": "gitlens.views.branches.setLayoutToTree",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.branches.layout == list",
					"group": "3_gitlens@0"
				},
				{
					"command": "gitlens.views.worktrees.setLayoutToList",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.branches.layout == tree",
					"group": "3_gitlens@0"
				},
				{
					"command": "gitlens.views.worktrees.setLayoutToTree",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.branches.layout == list",
					"group": "3_gitlens@0"
				},
				{
					"command": "gitlens.views.branches.setFilesLayoutToAuto",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.files.layout == tree",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.branches.setFilesLayoutToList",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.files.layout == auto",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.branches.setFilesLayoutToTree",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.files.layout == list",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.contributors.setShowAllBranchesOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.contributors.showAllBranches",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.contributors.setShowAllBranchesOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && !config.gitlens.views.contributors.showAllBranches",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.launchpad.setFilesLayoutToAuto",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.launchpad.files.layout == tree",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.launchpad.setFilesLayoutToList",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.launchpad.files.layout == auto",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.launchpad.setFilesLayoutToTree",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.launchpad.files.layout == list",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.remotes.setFilesLayoutToAuto",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.files.layout == tree",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.remotes.setFilesLayoutToList",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.files.layout == auto",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.remotes.setFilesLayoutToTree",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.files.layout == list",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.repositories.setFilesLayoutToAuto",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.repositories.files.layout == tree",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.repositories.setFilesLayoutToList",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.repositories.files.layout == auto",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.repositories.setFilesLayoutToTree",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.repositories.files.layout == list",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.searchAndCompare.setFilesLayoutToAuto",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == tree",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.searchAndCompare.setFilesLayoutToList",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == auto",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.searchAndCompare.setFilesLayoutToTree",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == list",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.stashes.setFilesLayoutToAuto",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == stashes && config.gitlens.views.stashes.files.layout == tree",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.stashes.setFilesLayoutToList",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == stashes && config.gitlens.views.stashes.files.layout == auto",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.stashes.setFilesLayoutToTree",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == stashes && config.gitlens.views.stashes.files.layout == list",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.tags.setLayoutToList",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.tags.branches.layout == tree",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.tags.setLayoutToTree",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.tags.branches.layout == list",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.worktrees.setFilesLayoutToAuto",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.files.layout == tree",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.worktrees.setFilesLayoutToList",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.files.layout == auto",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.worktrees.setFilesLayoutToTree",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.files.layout == list",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.commits.setFilesLayoutToAuto",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.files.layout == tree",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.commits.setFilesLayoutToList",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.files.layout == auto",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.commits.setFilesLayoutToTree",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.files.layout == list",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.contributors.setFilesLayoutToAuto",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.contributors.files.layout == tree",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.contributors.setFilesLayoutToList",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.contributors.files.layout == auto",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.contributors.setFilesLayoutToTree",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.contributors.files.layout == list",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.remotes.setLayoutToList",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.branches.layout == tree",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.remotes.setLayoutToTree",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.branches.layout == list",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.tags.setFilesLayoutToAuto",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.tags.files.layout == tree",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.tags.setFilesLayoutToList",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.tags.files.layout == auto",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.tags.setFilesLayoutToTree",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.tags.files.layout == list",
					"group": "3_gitlens@2"
				},
				{
					"command": "gitlens.views.branches.setShowAvatarsOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.branches.setShowAvatarsOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && !config.gitlens.views.branches.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.commits.setShowAvatarsOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.commits.setShowAvatarsOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && !config.gitlens.views.commits.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.contributors.setShowAvatarsOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.contributors.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.contributors.setShowAvatarsOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && !config.gitlens.views.contributors.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.launchpad.setShowAvatarsOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && config.gitlens.views.launchpad.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.launchpad.setShowAvatarsOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == launchpad && !config.gitlens.views.launchpad.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.remotes.setShowAvatarsOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.remotes.setShowAvatarsOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && !config.gitlens.views.remotes.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.repositories.setShowAvatarsOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.repositories.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.repositories.setShowAvatarsOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && !config.gitlens.views.repositories.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.searchAndCompare.setShowAvatarsOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && config.gitlens.views.searchAndCompare.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.searchAndCompare.setShowAvatarsOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare && !config.gitlens.views.searchAndCompare.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.tags.setShowAvatarsOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.tags.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.tags.setShowAvatarsOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && !config.gitlens.views.tags.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.worktrees.setShowAvatarsOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.worktrees.setShowAvatarsOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && !config.gitlens.views.worktrees.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.branches.setShowBranchComparisonOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.showBranchComparison",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.branches.setShowBranchComparisonOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && !config.gitlens.views.branches.showBranchComparison",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.commits.setShowBranchComparisonOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.showBranchComparison",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.commits.setShowBranchComparisonOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && !config.gitlens.views.commits.showBranchComparison",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.remotes.setShowBranchPullRequestOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.remotes.pullRequests.enabled && config.gitlens.views.remotes.pullRequests.showForBranches",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.remotes.setShowBranchPullRequestOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && !config.gitlens.views.remotes.pullRequests.enabled && !config.gitlens.views.remotes.pullRequests.showForBranches",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.worktrees.setShowBranchComparisonOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.showBranchComparison",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.worktrees.setShowBranchComparisonOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && !config.gitlens.views.worktrees.showBranchComparison",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.branches.setShowBranchPullRequestOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.pullRequests.enabled && config.gitlens.views.branches.pullRequests.showForBranches",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.branches.setShowBranchPullRequestOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && !config.gitlens.views.branches.pullRequests.enabled && !config.gitlens.views.branches.pullRequests.showForBranches",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.commits.setShowBranchPullRequestOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.pullRequests.enabled && config.gitlens.views.commits.pullRequests.showForBranches",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.commits.setShowBranchPullRequestOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && !config.gitlens.views.commits.pullRequests.enabled && !config.gitlens.views.commits.pullRequests.showForBranches",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.contributors.setShowMergeCommitsOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && !gitlens:views:contributors:hideMergeCommits",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.contributors.setShowMergeCommitsOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && gitlens:views:contributors:hideMergeCommits",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.worktrees.setShowBranchPullRequestOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.pullRequests.enabled && config.gitlens.views.worktrees.pullRequests.showForBranches",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.worktrees.setShowBranchPullRequestOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && !config.gitlens.views.worktrees.pullRequests.enabled && !config.gitlens.views.worktrees.pullRequests.showForBranches",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.contributors.setShowStatisticsOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && config.gitlens.views.contributors.showStatistics",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.contributors.setShowStatisticsOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors && !config.gitlens.views.contributors.showStatistics",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.branches.setShowRemoteBranchesOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.showRemoteBranches && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@5"
				},
				{
					"command": "gitlens.views.branches.setShowRemoteBranchesOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && !config.gitlens.views.branches.showRemoteBranches && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@5"
				},
				{
					"command": "gitlens.views.commits.setShowMergeCommitsOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && !gitlens:views:commits:hideMergeCommits",
					"group": "5_gitlens@5"
				},
				{
					"command": "gitlens.views.commits.setShowMergeCommitsOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && gitlens:views:commits:hideMergeCommits",
					"group": "5_gitlens@5"
				},
				{
					"command": "gitlens.views.worktrees.setShowStashesOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && config.gitlens.views.worktrees.showStashes && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@5"
				},
				{
					"command": "gitlens.views.worktrees.setShowStashesOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees && !config.gitlens.views.worktrees.showStashes && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@5"
				},
				{
					"command": "gitlens.views.branches.setShowStashesOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && config.gitlens.views.branches.showStashes && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@6"
				},
				{
					"command": "gitlens.views.branches.setShowStashesOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches && !config.gitlens.views.branches.showStashes && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@6"
				},
				{
					"command": "gitlens.views.commits.setShowStashesOff",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && config.gitlens.views.commits.showStashes && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@6"
				},
				{
					"command": "gitlens.views.commits.setShowStashesOn",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits && !config.gitlens.views.commits.showStashes && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@6"
				},
				{
					"command": "gitlens.showSettingsPage!branches-view",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == branches",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.showSettingsPage!commits-view",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == commits",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.showSettingsPage!contributors-view",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == contributors",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.showSettingsPage!remotes-view",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == remotes",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.showSettingsPage!repositories-view",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == repositories",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.showSettingsPage!search-compare-view",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == searchAndCompare",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.showSettingsPage!stashes-view",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == stashes",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.showSettingsPage!tags-view",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == tags",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.showSettingsPage!worktrees-view",
					"when": "view == gitlens.views.scm.grouped && gitlens:views:scm:grouped:view == worktrees",
					"group": "9_gitlens@1"
				},
				{
					"submenu": "gitlens/view/searchAndCompare/new",
					"when": "view == gitlens.views.searchAndCompare",
					"group": "navigation@10"
				},
				{
					"command": "gitlens.views.searchAndCompare.clear",
					"when": "view == gitlens.views.searchAndCompare",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.views.searchAndCompare.refresh",
					"when": "view == gitlens.views.searchAndCompare",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.views.searchAndCompare.regroup",
					"when": "view == gitlens.views.searchAndCompare",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.searchAndCompare.setFilesLayoutToAuto",
					"when": "view == gitlens.views.searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == tree",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.searchAndCompare.setFilesLayoutToList",
					"when": "view == gitlens.views.searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == auto",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.searchAndCompare.setFilesLayoutToTree",
					"when": "view == gitlens.views.searchAndCompare && config.gitlens.views.searchAndCompare.files.layout == list",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.searchAndCompare.setShowAvatarsOff",
					"when": "view == gitlens.views.searchAndCompare && config.gitlens.views.searchAndCompare.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.searchAndCompare.setShowAvatarsOn",
					"when": "view == gitlens.views.searchAndCompare && !config.gitlens.views.searchAndCompare.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.searchAndCompare.regroup",
					"when": "view == gitlens.views.searchAndCompare",
					"group": "9_gitlens@0"
				},
				{
					"command": "gitlens.showSettingsPage!search-compare-view",
					"when": "view == gitlens.views.searchAndCompare",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.stashSave",
					"when": "view == gitlens.views.stashes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "navigation@10"
				},
				{
					"command": "gitlens.stashApply",
					"when": "view == gitlens.views.stashes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "navigation@11"
				},
				{
					"command": "gitlens.views.stashes.refresh",
					"when": "view == gitlens.views.stashes",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.views.stashes.regroup",
					"when": "view == gitlens.views.stashes",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.stashes.setFilesLayoutToAuto",
					"when": "view == gitlens.views.stashes && config.gitlens.views.stashes.files.layout == tree",
					"group": "3_gitlens@0"
				},
				{
					"command": "gitlens.views.stashes.setFilesLayoutToList",
					"when": "view == gitlens.views.stashes && config.gitlens.views.stashes.files.layout == auto",
					"group": "3_gitlens@0"
				},
				{
					"command": "gitlens.views.stashes.setFilesLayoutToTree",
					"when": "view == gitlens.views.stashes && config.gitlens.views.stashes.files.layout == list",
					"group": "3_gitlens@0"
				},
				{
					"command": "gitlens.views.stashes.regroup",
					"when": "view == gitlens.views.stashes",
					"group": "9_gitlens@0"
				},
				{
					"command": "gitlens.showSettingsPage!stashes-view",
					"when": "view == gitlens.views.stashes",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.title.createTag",
					"when": "view == gitlens.views.tags && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "navigation@10"
				},
				{
					"command": "gitlens.views.tags.setLayoutToList",
					"when": "view == gitlens.views.tags && config.gitlens.views.tags.branches.layout == tree",
					"group": "navigation@50"
				},
				{
					"command": "gitlens.views.tags.setLayoutToTree",
					"when": "view == gitlens.views.tags && config.gitlens.views.tags.branches.layout == list",
					"group": "navigation@50"
				},
				{
					"command": "gitlens.views.tags.refresh",
					"when": "view == gitlens.views.tags",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.views.tags.regroup",
					"when": "view == gitlens.views.tags",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.tags.setFilesLayoutToAuto",
					"when": "view == gitlens.views.tags && config.gitlens.views.tags.files.layout == tree",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.tags.setFilesLayoutToList",
					"when": "view == gitlens.views.tags && config.gitlens.views.tags.files.layout == auto",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.tags.setFilesLayoutToTree",
					"when": "view == gitlens.views.tags && config.gitlens.views.tags.files.layout == list",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.tags.setShowAvatarsOff",
					"when": "view == gitlens.views.tags && config.gitlens.views.tags.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.tags.setShowAvatarsOn",
					"when": "view == gitlens.views.tags && !config.gitlens.views.tags.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "view == gitlens.views.tags && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "view == gitlens.views.tags && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.tags.regroup",
					"when": "view == gitlens.views.tags",
					"group": "9_gitlens@0"
				},
				{
					"command": "gitlens.showSettingsPage!tags-view",
					"when": "view == gitlens.views.tags",
					"group": "9_gitlens@1"
				},
				{
					"command": "gitlens.views.timeline.refresh",
					"when": "view == gitlens.views.timeline",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.workspaces.create",
					"when": "view == gitlens.views.workspaces && gitlens:plus",
					"group": "navigation@1"
				},
				{
					"command": "gitlens.views.workspaces.refresh",
					"when": "view == gitlens.views.workspaces",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.workspaces.info",
					"when": "view == gitlens.views.workspaces",
					"group": "8_info@1"
				},
				{
					"command": "gitlens.views.title.createWorktree",
					"when": "view == gitlens.views.worktrees",
					"group": "navigation@10"
				},
				{
					"command": "gitlens.views.worktrees.setLayoutToList",
					"when": "view == gitlens.views.worktrees && config.gitlens.views.worktrees.branches.layout == tree",
					"group": "navigation@50"
				},
				{
					"command": "gitlens.views.worktrees.setLayoutToTree",
					"when": "view == gitlens.views.worktrees && config.gitlens.views.worktrees.branches.layout == list",
					"group": "navigation@50"
				},
				{
					"command": "gitlens.views.worktrees.refresh",
					"when": "view == gitlens.views.worktrees",
					"group": "navigation@98"
				},
				{
					"command": "gitlens.views.worktrees.regroup",
					"when": "view == gitlens.views.worktrees",
					"group": "navigation@99"
				},
				{
					"command": "gitlens.views.worktrees.setFilesLayoutToAuto",
					"when": "view == gitlens.views.worktrees && config.gitlens.views.worktrees.files.layout == tree",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.worktrees.setFilesLayoutToList",
					"when": "view == gitlens.views.worktrees && config.gitlens.views.worktrees.files.layout == auto",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.worktrees.setFilesLayoutToTree",
					"when": "view == gitlens.views.worktrees && config.gitlens.views.worktrees.files.layout == list",
					"group": "3_gitlens@1"
				},
				{
					"command": "gitlens.views.worktrees.setShowAvatarsOff",
					"when": "view == gitlens.views.worktrees && config.gitlens.views.worktrees.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.worktrees.setShowAvatarsOn",
					"when": "view == gitlens.views.worktrees && !config.gitlens.views.worktrees.avatars",
					"group": "5_gitlens@1"
				},
				{
					"command": "gitlens.views.worktrees.setShowBranchComparisonOff",
					"when": "view == gitlens.views.worktrees && config.gitlens.views.worktrees.showBranchComparison",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.worktrees.setShowBranchComparisonOn",
					"when": "view == gitlens.views.worktrees && !config.gitlens.views.worktrees.showBranchComparison",
					"group": "5_gitlens@2"
				},
				{
					"command": "gitlens.views.worktrees.setShowBranchPullRequestOff",
					"when": "view == gitlens.views.worktrees && config.gitlens.views.worktrees.pullRequests.enabled && config.gitlens.views.worktrees.pullRequests.showForBranches",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.worktrees.setShowBranchPullRequestOn",
					"when": "view == gitlens.views.worktrees && !config.gitlens.views.worktrees.pullRequests.enabled && !config.gitlens.views.worktrees.pullRequests.showForBranches",
					"group": "5_gitlens@3"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOff",
					"when": "view == gitlens.views.worktrees && config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.setShowRelativeDateMarkersOn",
					"when": "view == gitlens.views.worktrees && !config.gitlens.views.showRelativeDateMarkers",
					"group": "5_gitlens@4"
				},
				{
					"command": "gitlens.views.worktrees.setShowStashesOff",
					"when": "view == gitlens.views.worktrees && config.gitlens.views.worktrees.showStashes && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@5"
				},
				{
					"command": "gitlens.views.worktrees.setShowStashesOn",
					"when": "view == gitlens.views.worktrees && !config.gitlens.views.worktrees.showStashes && !gitlens:hasVirtualFolders",
					"group": "5_gitlens@5"
				},
				{
					"command": "gitlens.views.worktrees.regroup",
					"when": "view == gitlens.views.worktrees",
					"group": "9_gitlens@0"
				},
				{
					"command": "gitlens.showSettingsPage!worktrees-view",
					"when": "view == gitlens.views.worktrees",
					"group": "9_gitlens@1"
				}
			],
			"webview/context": [
				{
					"command": "gitlens.graph.openWorktree",
					"when": "webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+worktree\\b)/ && !gitlens:hasVirtualFolders",
					"group": "1_gitlens_action@1"
				},
				{
					"command": "gitlens.graph.switchToAnotherBranch",
					"when": "webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(current|checkedout)\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_action@1"
				},
				{
					"command": "gitlens.graph.switchToBranch",
					"when": "webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|checkedout|worktree)\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_action@1"
				},
				{
					"command": "gitlens.graph.openWorktreeInNewWindow",
					"when": "webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+worktree\\b)/ && !gitlens:hasVirtualFolders",
					"group": "1_gitlens_action@2"
				},
				{
					"command": "gitlens.graph.openInWorktree",
					"when": "webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|checkedout|worktree)\\b)/ && !gitlens:hasVirtualFolders",
					"group": "1_gitlens_action@3"
				},
				{
					"command": "gitlens.graph.publishBranch",
					"when": "webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+remote\\b)(?!.*?\\b\\+tracking\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.graph.pull",
					"when": "webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(behind|tracking)\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.graph.push",
					"when": "webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+ahead\\b)(?!.*?\\b\\+behind\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.graph.fetch",
					"when": "webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(remote|tracking)\\b)(?!.*?\\b\\+closed\\b)/ && gitlens:repos:withRemotes && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@3"
				},
				{
					"command": "gitlens.graph.mergeBranchInto",
					"when": "webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_1@1"
				},
				{
					"command": "gitlens.graph.rebaseOntoBranch",
					"when": "webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_1@2"
				},
				{
					"command": "gitlens.graph.rebaseOntoUpstream",
					"when": "webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+current\\b)(?=.*?\\b\\+tracking\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_1@2"
				},
				{
					"command": "gitlens.graph.resetToTip",
					"when": "webviewItem =~ /gitlens:branch\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_1@3"
				},
				{
					"command": "gitlens.graph.associateIssueWithBranch",
					"when": "webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+remote\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_2@1"
				},
				{
					"command": "gitlens.graph.renameBranch",
					"when": "webviewItem =~ /gitlens:branch\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_2@2"
				},
				{
					"command": "gitlens.graph.deleteBranch",
					"when": "webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|checkedout)\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_2@3"
				},
				{
					"command": "gitlens.graph.createBranch",
					"when": "webviewItem =~ /gitlens:branch\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_3@1"
				},
				{
					"command": "gitlens.graph.createTag",
					"when": "webviewItem =~ /gitlens:branch\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_3@2"
				},
				{
					"command": "gitlens.graph.createWorktree",
					"when": "webviewItem =~ /gitlens:branch\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_3@3"
				},
				{
					"command": "gitlens.graph.createPullRequest",
					"when": "webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/ && gitlens:action:createPullRequest && gitlens:repos:withRemotes",
					"group": "1_gitlens_actions_3@4"
				},
				{
					"command": "gitlens.graph.ai.generateChangelogFrom",
					"when": "webviewItem =~ /gitlens:(branch|tag)\\b/ && gitlens:gk:organization:ai:enabled && !gitlens:untrusted",
					"group": "1_gitlens_actions_3@100"
				},
				{
					"command": "gitlens.graph.openBranchOnRemote",
					"when": "webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+(tracking|remote)\\b)/ && gitlens:repos:withRemotes",
					"group": "2_gitlens_quickopen@1"
				},
				{
					"command": "gitlens.graph.openChangedFileDiffsWithMergeBase",
					"when": "webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/",
					"group": "3_gitlens_explore@11"
				},
				{
					"command": "gitlens.graph.compareWithUpstream",
					"when": "webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+tracking\\b)/ && !gitlens:hasVirtualFolders",
					"group": "4_gitlens_compare@1"
				},
				{
					"command": "gitlens.graph.compareBranchWithHead",
					"when": "webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !listMultiSelection",
					"group": "4_gitlens_compare@2"
				},
				{
					"command": "gitlens.graph.compareWithMergeBase",
					"when": "webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/",
					"group": "4_gitlens_compare@3"
				},
				{
					"command": "gitlens.graph.compareWithWorking",
					"when": "webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders",
					"group": "4_gitlens_compare@4"
				},
				{
					"command": "gitlens.graph.compareAncestryWithWorking",
					"when": "webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders",
					"group": "4_gitlens_compare@5"
				},
				{
					"submenu": "gitlens/share",
					"when": "webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/",
					"group": "7_gitlens_a_share@1"
				},
				{
					"command": "gitlens.graph.copy",
					"when": "webviewItem =~ /gitlens:(branch|commit|contributor|launchpad:item|pullrequest|stash|tag)\\b/",
					"group": "7_gitlens_cutcopypaste@1"
				},
				{
					"command": "gitlens.graph.copySha",
					"when": "webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection",
					"group": "7_gitlens_cutcopypaste@2"
				},
				{
					"command": "gitlens.graph.copyMessage",
					"when": "webviewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && !listMultiSelection",
					"group": "7_gitlens_cutcopypaste@3"
				},
				{
					"command": "gitlens.graph.hideRemote",
					"when": "webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+remote\\b)(?!.*?\\b\\+current\\b)/",
					"group": "8_gitlens_actions@10"
				},
				{
					"command": "gitlens.graph.hideLocalBranch",
					"when": "webviewItem =~ /gitlens:branch\\b(?!.*?\\b\\+(current|remote)\\b)/",
					"group": "8_gitlens_actions@11"
				},
				{
					"command": "gitlens.graph.hideRemoteBranch",
					"when": "webviewItem =~ /gitlens:branch\\b(?=.*?\\b\\+remote\\b)(?!.*?\\b\\+current\\b)/",
					"group": "8_gitlens_actions@11"
				},
				{
					"command": "gitlens.graph.cherryPick",
					"when": "webviewItem =~ /gitlens:commit\\b(?!.*?\\b\\+(current|rebase)\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.graph.undoCommit",
					"when": "webviewItem =~ /gitlens:commit\\b(?=.*?\\b\\+HEAD\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.graph.revert",
					"when": "webviewItem =~ /gitlens:commit\\b(?=.*?\\b\\+current\\b)/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@3"
				},
				{
					"command": "gitlens.graph.resetToCommit",
					"when": "webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@4"
				},
				{
					"command": "gitlens.graph.resetCommit",
					"when": "webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@5"
				},
				{
					"command": "gitlens.graph.rebaseOntoCommit",
					"when": "webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@6"
				},
				{
					"command": "gitlens.graph.switchToCommit",
					"when": "webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@7"
				},
				{
					"command": "gitlens.graph.createBranch",
					"when": "webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_1@1"
				},
				{
					"command": "gitlens.graph.createPatch",
					"when": "!listMultiSelection && false && !gitlens:untrusted && !gitlens:hasVirtualFolders && webviewItem =~ /gitlens:(commit|stash)\\b/",
					"group": "1_gitlens_actions_1@2"
				},
				{
					"command": "gitlens.graph.createCloudPatch",
					"when": "webviewItem =~ /gitlens:(commit|stash)\\b/ && config.gitlens.cloudPatches.enabled && !listMultiSelection && gitlens:gk:organization:drafts:enabled && !gitlens:hasVirtualFolders && !gitlens:untrusted",
					"group": "1_gitlens_actions_1@3"
				},
				{
					"command": "gitlens.graph.createTag",
					"when": "webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_1@4"
				},
				{
					"submenu": "gitlens/graph/commit/changes",
					"when": "webviewItem =~ /gitlens:(commit|stash|wip)\\b/ && !listMultiSelection",
					"group": "2_gitlens_quickopen@1"
				},
				{
					"command": "gitlens.graph.showInDetailsView",
					"when": "webviewItem =~ /gitlens:(commit|stash|wip)\\b/ && !listMultiSelection",
					"group": "3_gitlens_explore@0"
				},
				{
					"command": "gitlens.graph.openCommitOnRemote",
					"when": "webviewItem =~ /gitlens:commit\\b/ && !listMultiSelection && gitlens:repos:withRemotes",
					"group": "3_gitlens_explore@2"
				},
				{
					"command": "gitlens.graph.compareWithHead",
					"when": "webviewItem =~ /gitlens:(commit|stash|tag)\\b/ && !listMultiSelection",
					"group": "4_gitlens_compare@2"
				},
				{
					"command": "gitlens.copyPatchToClipboard",
					"when": "webviewItem =~ /gitlens:(commit|stash)\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:untrusted",
					"group": "7_cutcopypaste@97"
				},
				{
					"command": "gitlens.graph.addAuthor",
					"when": "webviewItem =~ /gitlens:contributor\\b(?!.*?\\b\\+current\\b)/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"submenu": "gitlens/graph/markers",
					"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/",
					"group": "0_markers@0"
				},
				{
					"command": "gitlens.graph.columnAuthorOff",
					"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:author:visible\\b/",
					"group": "1_columns@1"
				},
				{
					"command": "gitlens.graph.columnAuthorOn",
					"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:author:hidden\\b/",
					"group": "1_columns@1"
				},
				{
					"command": "gitlens.graph.columnRefOff",
					"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:ref:visible\\b/",
					"group": "1_columns@2"
				},
				{
					"command": "gitlens.graph.columnRefOn",
					"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:ref:hidden\\b/",
					"group": "1_columns@2"
				},
				{
					"command": "gitlens.graph.columnChangesOff",
					"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:changes:visible\\b/",
					"group": "1_columns@3"
				},
				{
					"command": "gitlens.graph.columnChangesOn",
					"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:changes:hidden\\b/",
					"group": "1_columns@3"
				},
				{
					"command": "gitlens.graph.columnMessageOff",
					"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:message:visible\\b/",
					"group": "1_columns@4"
				},
				{
					"command": "gitlens.graph.columnMessageOn",
					"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:message:hidden\\b/",
					"group": "1_columns@4"
				},
				{
					"command": "gitlens.graph.columnDateTimeOff",
					"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:datetime:visible\\b/",
					"group": "1_columns@5"
				},
				{
					"command": "gitlens.graph.columnDateTimeOn",
					"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:datetime:hidden\\b/",
					"group": "1_columns@5"
				},
				{
					"command": "gitlens.graph.columnGraphOff",
					"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:visible\\b/",
					"group": "1_columns@6"
				},
				{
					"command": "gitlens.graph.columnGraphOn",
					"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:hidden\\b/",
					"group": "1_columns@6"
				},
				{
					"command": "gitlens.graph.columnShaOff",
					"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:sha:visible\\b/",
					"group": "1_columns@7"
				},
				{
					"command": "gitlens.graph.columnShaOn",
					"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:sha:hidden\\b/",
					"group": "1_columns@7"
				},
				{
					"command": "gitlens.graph.columnGraphCompact",
					"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:visible(?![^,]*\\+compact\\b)/",
					"group": "2_columns@1"
				},
				{
					"command": "gitlens.graph.columnGraphDefault",
					"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/ && webviewItemValue =~ /\\bcolumn:graph:visible[^,]*\\+compact\\b/",
					"group": "2_columns@1"
				},
				{
					"command": "gitlens.graph.resetColumnsDefault",
					"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/",
					"group": "3_columns@1"
				},
				{
					"command": "gitlens.graph.resetColumnsCompact",
					"when": "webviewItem =~ /gitlens:graph:(columns|settings)\\b/",
					"group": "3_columns@2"
				},
				{
					"command": "gitlens.graph.openPullRequestChanges",
					"when": "webviewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.graph.openPullRequest",
					"when": "webviewItem =~ /gitlens:pullrequest\\b/ && gitlens:action:openPullRequest > 1",
					"group": "1_gitlens_actions@98"
				},
				{
					"command": "gitlens.graph.openPullRequestOnRemote",
					"when": "webviewItem =~ /gitlens:pullrequest\\b/",
					"group": "1_gitlens_actions@99"
				},
				{
					"command": "gitlens.graph.openPullRequestComparison",
					"when": "webviewItem =~ /gitlens:pullrequest\\b(?=.*?\\b\\+refs\\b)/",
					"group": "4_gitlens_compare@1"
				},
				{
					"command": "gitlens.graph.stash.apply",
					"when": "webviewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.graph.stash.rename",
					"when": "webviewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.graph.stash.delete",
					"when": "webviewItem == gitlens:stash && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@3"
				},
				{
					"command": "gitlens.graph.switchToTag",
					"when": "webviewItem =~ /gitlens:tag\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.graph.resetToTag",
					"when": "webviewItem =~ /gitlens:tag\\b/ && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.graph.deleteTag",
					"when": "webviewItem == gitlens:tag && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@3"
				},
				{
					"command": "gitlens.graph.createBranch",
					"when": "webviewItem =~ /gitlens:tag\\b/ && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions_3@4"
				},
				{
					"command": "gitlens.graph.hideTag",
					"when": "webviewItem =~ /gitlens:tag\\b/",
					"group": "8_gitlens_actions@10"
				},
				{
					"command": "gitlens.graph.push",
					"when": "webviewItem =~ /gitlens:upstreamStatus\\b/",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.graph.pull",
					"when": "webviewItem =~ /gitlens:upstreamStatus\\b/",
					"group": "1_gitlens_actions@2"
				},
				{
					"command": "gitlens.graph.fetch",
					"when": "webviewItem =~ /gitlens:upstreamStatus\\b/",
					"group": "1_gitlens_actions@3"
				},
				{
					"command": "gitlens.graph.commitViaSCM",
					"when": "webviewItem == gitlens:wip && !listMultiSelection",
					"group": "1_gitlens@1"
				},
				{
					"command": "gitlens.graph.ai.generateCommitMessage",
					"when": "webviewItem == gitlens:wip && config.gitlens.ai.generateCommitMessage.enabled && !listMultiSelection && gitlens:gk:organization:ai:enabled && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens@2"
				},
				{
					"command": "gitlens.graph.stash.save",
					"when": "webviewItem == gitlens:wip && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@3"
				},
				{
					"command": "gitlens.graph.copyWorkingChangesToWorktree",
					"when": "webviewItem == gitlens:wip && !listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@4"
				},
				{
					"command": "gitlens.graph.hideRefGroup",
					"when": "webviewItemGroup =~ /gitlens:refGroup\\b(?!.*?\\b\\+current\\b)/",
					"group": "8_gitlens_actions@12"
				},
				{
					"command": "gitlens.graph.cherryPick.multi",
					"when": "webviewItems =~ /gitlens:commit\\b(?!.*?\\b\\+(current|rebase)\\b)/ && listMultiSelection && !gitlens:hasVirtualFolders && !gitlens:readonly && !gitlens:untrusted",
					"group": "1_gitlens_actions@1"
				},
				{
					"command": "gitlens.graph.openCommitOnRemote.multi",
					"when": "webviewItems =~ /gitlens:commit\\b/ && listMultiSelection && gitlens:repos:withRemotes",
					"group": "3_gitlens_explore@2"
				},
				{
					"command": "gitlens.graph.compareSelectedCommits.multi",
					"when": "webviewItems =~ /gitlens:commit\\b/ && listDoubleSelection",
					"group": "4_gitlens_compare@2"
				}
			]
		},
		"submenus": [
			{
				"id": "gitlens/commit/browse",
				"label": "浏览"
			},
			{
				"id": "gitlens/commit/changes",
				"label": "打开变更"
			},
			{
				"id": "gitlens/commit/copy",
				"label": "复制为"
			},
			{
				"id": "gitlens/commit/file/changes",
				"label": "使用以下方式打开变更"
			},
			{
				"id": "gitlens/commit/file/commit",
				"label": "提交"
			},
			{
				"id": "gitlens/commit/file/history",
				"label": "文件历史"
			},
			{
				"id": "gitlens/comparison/results/files/filter",
				"label": "筛选文件",
				"icon": "$(filter)"
			},
			{
				"id": "gitlens/comparison/results/files/filter/inline",
				"label": "筛选文件",
				"icon": "$(filter)"
			},
			{
				"id": "gitlens/comparison/results/files/filtered",
				"label": "筛选文件",
				"icon": "$(filter-filled)"
			},
			{
				"id": "gitlens/comparison/results/files/filtered/inline",
				"label": "筛选文件",
				"icon": "$(filter-filled)"
			},
			{
				"id": "gitlens/editor/annotations",
				"label": "文件注解",
				"icon": "$(gitlens-gitlens)"
			},
			{
				"id": "gitlens/editor/changes",
				"label": "打开变更"
			},
			{
				"id": "gitlens/editor/context/changes",
				"label": "打开变更"
			},
			{
				"id": "gitlens/editor/context/openOn",
				"label": "在远程（Web）打开"
			},
			{
				"id": "gitlens/editor/history",
				"label": "文件历史"
			},
			{
				"id": "gitlens/editor/lineNumber/context/changes",
				"label": "打开变更"
			},
			{
				"id": "gitlens/editor/lineNumber/context/openOn",
				"label": "在远程（Web）打开"
			},
			{
				"id": "gitlens/editor/lineNumber/context/share",
				"label": "分享"
			},
			{
				"id": "gitlens/editor/openOn",
				"label": "在远程（Web）打开"
			},
			{
				"id": "gitlens/explorer/changes",
				"label": "打开变更"
			},
			{
				"id": "gitlens/explorer/file/history",
				"label": "文件历史"
			},
			{
				"id": "gitlens/explorer/folder/history",
				"label": "文件夹历史"
			},
			{
				"id": "gitlens/explorer/openOn",
				"label": "在远程（Web）打开"
			},
			{
				"id": "gitlens/graph/commit/changes",
				"label": "打开变更"
			},
			{
				"id": "gitlens/graph/configuration",
				"label": "提交图设置",
				"icon": "$(gear)"
			},
			{
				"id": "gitlens/graph/markers",
				"label": "滚动标记"
			},
			{
				"id": "gitlens/scm/resourceFolder/changes",
				"label": "使用以下方式打开变更"
			},
			{
				"id": "gitlens/scm/resourceFolder/history",
				"label": "文件夹历史"
			},
			{
				"id": "gitlens/scm/resourceGroup/changes",
				"label": "打开变更"
			},
			{
				"id": "gitlens/scm/resourceState/changes",
				"label": "使用以下方式打开变更"
			},
			{
				"id": "gitlens/scm/resourceState/history",
				"label": "文件历史"
			},
			{
				"id": "gitlens/scm/resourceState/openOn",
				"label": "在远程（Web）打开"
			},
			{
				"id": "gitlens/share",
				"label": "分享"
			},
			{
				"id": "gitlens/view/repositories/sections",
				"label": "分区"
			},
			{
				"id": "gitlens/view/searchAndCompare/new",
				"label": "新建搜索或比较",
				"icon": "$(add)"
			},
			{
				"id": "gitlens/views/grouped/branches",
				"label": "分支",
				"icon": "$(gitlens-branches-view-filled)"
			},
			{
				"id": "gitlens/views/grouped/commits",
				"label": "提交",
				"icon": "$(gitlens-commits-view-filled)"
			},
			{
				"id": "gitlens/views/grouped/contributors",
				"label": "贡献者",
				"icon": "$(gitlens-contributors-view-filled)"
			},
			{
				"id": "gitlens/views/grouped/detachOrRegroup",
				"label": "分离 / 重新分组视图"
			},
			{
				"id": "gitlens/views/grouped/launchpad",
				"label": "启动板",
				"icon": "$(gitlens-launchpad-view-filled)"
			},
			{
				"id": "gitlens/views/grouped/more",
				"label": "视图选项",
				"icon": "$(ellipsis)"
			},
			{
				"id": "gitlens/views/grouped/remotes",
				"label": "远程",
				"icon": "$(gitlens-remotes-view-filled)"
			},
			{
				"id": "gitlens/views/grouped/repositories",
				"label": "仓库",
				"icon": "$(gitlens-repositories-view-filled)"
			},
			{
				"id": "gitlens/views/grouped/searchAndCompare",
				"label": "搜索与比较",
				"icon": "$(gitlens-search-view-filled)"
			},
			{
				"id": "gitlens/views/grouped/stashes",
				"label": "贮藏",
				"icon": "$(gitlens-stashes-view-filled)"
			},
			{
				"id": "gitlens/views/grouped/tags",
				"label": "标签",
				"icon": "$(gitlens-tags-view-filled)"
			},
			{
				"id": "gitlens/views/grouped/visibility",
				"label": "显示 / 隐藏视图"
			},
			{
				"id": "gitlens/views/grouped/worktrees",
				"label": "工作区树",
				"icon": "$(gitlens-worktrees-view-filled)"
			}
		],
		"keybindings": [
			{
				"command": "gitlens.key.alt+,",
				"key": "alt+,",
				"when": "gitlens:key:,"
			},
			{
				"command": "gitlens.key.alt+.",
				"key": "alt+.",
				"when": "gitlens:key:."
			},
			{
				"command": "gitlens.key.alt+enter",
				"key": "alt+enter",
				"when": "gitlens:key:alt+enter"
			},
			{
				"command": "gitlens.key.alt+left",
				"key": "alt+left",
				"when": "gitlens:key:alt+left"
			},
			{
				"command": "gitlens.key.alt+right",
				"key": "alt+right",
				"when": "gitlens:key:alt+right"
			},
			{
				"command": "gitlens.key.ctrl+enter",
				"key": "ctrl+enter",
				"when": "gitlens:key:ctrl+enter"
			},
			{
				"command": "gitlens.key.ctrl+left",
				"key": "ctrl+left",
				"when": "gitlens:key:ctrl+left",
				"mac": "cmd+left"
			},
			{
				"command": "gitlens.key.ctrl+right",
				"key": "ctrl+right",
				"when": "gitlens:key:ctrl+right",
				"mac": "cmd+right"
			},
			{
				"command": "workbench.view.scm",
				"key": "ctrl+shift+g g",
				"when": "config.gitlens.keymap == chorded && !gitlens:disabled",
				"mac": "ctrl+shift+g"
			},
			{
				"command": "gitlens.key.escape",
				"key": "escape",
				"when": "gitlens:key:escape && editorTextFocus && !findWidgetVisible && !quickFixWidgetVisible && !renameInputVisible && !suggestWidgetVisible && !referenceSearchVisible && !codeActionMenuVisible && !parameterHintsVisible && !isInEmbeddedEditor"
			},
			{
				"command": "gitlens.key.left",
				"key": "left",
				"when": "gitlens:key:left"
			},
			{
				"command": "gitlens.key.right",
				"key": "right",
				"when": "gitlens:key:right"
			},
			{
				"command": "gitlens.diffLineWithPrevious",
				"key": "ctrl+shift+g shift+,",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && resource in gitlens:tabs:tracked",
				"mac": "cmd+alt+g shift+,"
			},
			{
				"command": "gitlens.diffLineWithPrevious",
				"key": "shift+alt+,",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && resource in gitlens:tabs:tracked"
			},
			{
				"command": "gitlens.diffWithNext",
				"key": "alt+.",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && !isInDiffEditor"
			},
			{
				"command": "gitlens.diffWithNext",
				"key": "ctrl+shift+g .",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && !isInDiffEditor",
				"mac": "cmd+alt+g ."
			},
			{
				"command": "gitlens.diffWithNextInDiffLeft",
				"key": "alt+.",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor && !isInDiffRightEditor"
			},
			{
				"command": "gitlens.diffWithNextInDiffLeft",
				"key": "ctrl+shift+g .",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffEditor && !isInDiffRightEditor",
				"mac": "cmd+alt+g ."
			},
			{
				"command": "gitlens.diffWithNextInDiffRight",
				"key": "alt+.",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffRightEditor"
			},
			{
				"command": "gitlens.diffWithNextInDiffRight",
				"key": "ctrl+shift+g .",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/ && isInDiffRightEditor",
				"mac": "cmd+alt+g ."
			},
			{
				"command": "gitlens.diffWithPrevious",
				"key": "alt+,",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && resource in gitlens:tabs:tracked && !isInDiffEditor"
			},
			{
				"command": "gitlens.diffWithPrevious",
				"key": "ctrl+shift+g ,",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && resource in gitlens:tabs:tracked && !isInDiffEditor",
				"mac": "cmd+alt+g ,"
			},
			{
				"command": "gitlens.diffWithPreviousInDiffLeft",
				"key": "alt+,",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && resource in gitlens:tabs:tracked && isInDiffEditor && !isInDiffRightEditor"
			},
			{
				"command": "gitlens.diffWithPreviousInDiffLeft",
				"key": "ctrl+shift+g ,",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && resource in gitlens:tabs:tracked && isInDiffEditor && !isInDiffRightEditor",
				"mac": "cmd+alt+g ,"
			},
			{
				"command": "gitlens.diffWithPreviousInDiffRight",
				"key": "alt+,",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && resource in gitlens:tabs:tracked && isInDiffRightEditor"
			},
			{
				"command": "gitlens.diffWithPreviousInDiffRight",
				"key": "ctrl+shift+g ,",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && resource in gitlens:tabs:tracked && isInDiffRightEditor",
				"mac": "cmd+alt+g ,"
			},
			{
				"command": "gitlens.diffWithWorking",
				"key": "ctrl+shift+g shift+.",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/",
				"mac": "cmd+alt+g shift+."
			},
			{
				"command": "gitlens.diffWithWorking",
				"key": "shift+alt+.",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && resourceScheme =~ /^(gitlens|git|pr)$/"
			},
			{
				"command": "gitlens.gitCommands",
				"key": "alt+/",
				"when": "config.gitlens.keymap == alternate && !gitlens:disabled"
			},
			{
				"command": "gitlens.gitCommands",
				"key": "ctrl+shift+g /",
				"when": "config.gitlens.keymap == chorded && !gitlens:disabled",
				"mac": "cmd+alt+g /"
			},
			{
				"command": "gitlens.showQuickCommitFileDetails",
				"key": "alt+c",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && !gitlens:disabled"
			},
			{
				"command": "gitlens.showQuickCommitFileDetails",
				"key": "ctrl+shift+g c",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && !gitlens:disabled",
				"mac": "cmd+alt+g c"
			},
			{
				"command": "gitlens.showQuickFileHistory",
				"key": "alt+h",
				"when": "config.gitlens.keymap == alternate && !gitlens:disabled"
			},
			{
				"command": "gitlens.showQuickFileHistory",
				"key": "ctrl+shift+g h",
				"when": "config.gitlens.keymap == chorded && !gitlens:disabled",
				"mac": "cmd+alt+g h"
			},
			{
				"command": "gitlens.showQuickRepoHistory",
				"key": "ctrl+shift+g shift+h",
				"when": "config.gitlens.keymap == chorded && !gitlens:disabled",
				"mac": "cmd+alt+g shift+h"
			},
			{
				"command": "gitlens.showQuickRepoHistory",
				"key": "shift+alt+h",
				"when": "config.gitlens.keymap == alternate && !gitlens:disabled"
			},
			{
				"command": "gitlens.showQuickRepoStatus",
				"key": "alt+s",
				"when": "config.gitlens.keymap == alternate && !gitlens:disabled"
			},
			{
				"command": "gitlens.showQuickRepoStatus",
				"key": "ctrl+shift+g s",
				"when": "config.gitlens.keymap == chorded && !gitlens:disabled",
				"mac": "cmd+alt+g s"
			},
			{
				"command": "gitlens.toggleCodeLens",
				"key": "ctrl+shift+g shift+b",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens",
				"mac": "cmd+alt+g shift+b"
			},
			{
				"command": "gitlens.toggleCodeLens",
				"key": "shift+alt+b",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens"
			},
			{
				"command": "gitlens.toggleFileBlame",
				"key": "alt+b",
				"when": "config.gitlens.keymap == alternate && editorTextFocus && resource in gitlens:tabs:blameable"
			},
			{
				"command": "gitlens.toggleFileBlame",
				"key": "ctrl+shift+g b",
				"when": "config.gitlens.keymap == chorded && editorTextFocus && resource in gitlens:tabs:blameable",
				"mac": "cmd+alt+g b"
			},
			{
				"command": "gitlens.views.branches.copy",
				"key": "ctrl+c",
				"when": "focusedView == gitlens.views.branches",
				"mac": "cmd+c"
			},
			{
				"command": "gitlens.views.commits.copy",
				"key": "ctrl+c",
				"when": "focusedView == gitlens.views.commits",
				"mac": "cmd+c"
			},
			{
				"command": "gitlens.views.contributors.copy",
				"key": "ctrl+c",
				"when": "focusedView == gitlens.views.contributors",
				"mac": "cmd+c"
			},
			{
				"command": "gitlens.views.drafts.copy",
				"key": "ctrl+c",
				"when": "focusedView == gitlens.views.drafts",
				"mac": "cmd+c"
			},
			{
				"command": "gitlens.views.fileHistory.copy",
				"key": "ctrl+c",
				"when": "focusedView == gitlens.views.fileHistory",
				"mac": "cmd+c"
			},
			{
				"command": "gitlens.views.lineHistory.copy",
				"key": "ctrl+c",
				"when": "focusedView == gitlens.views.lineHistory",
				"mac": "cmd+c"
			},
			{
				"command": "gitlens.views.pullRequest.copy",
				"key": "ctrl+c",
				"when": "focusedView == gitlens.views.pullRequest",
				"mac": "cmd+c"
			},
			{
				"command": "gitlens.views.remotes.copy",
				"key": "ctrl+c",
				"when": "focusedView == gitlens.views.remotes",
				"mac": "cmd+c"
			},
			{
				"command": "gitlens.views.repositories.copy",
				"key": "ctrl+c",
				"when": "focusedView == gitlens.views.repositories",
				"mac": "cmd+c"
			},
			{
				"command": "gitlens.views.scm.grouped.branches",
				"key": "2",
				"when": "focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.branches"
			},
			{
				"command": "gitlens.views.scm.grouped.commits",
				"key": "1",
				"when": "focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.commits"
			},
			{
				"command": "gitlens.views.scm.grouped.contributors",
				"key": "7",
				"when": "focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.contributors"
			},
			{
				"command": "gitlens.views.scm.grouped.launchpad",
				"key": "0",
				"when": "focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.launchpad"
			},
			{
				"command": "gitlens.views.scm.grouped.remotes",
				"key": "3",
				"when": "focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.remotes"
			},
			{
				"command": "gitlens.views.scm.grouped.repositories",
				"key": "8",
				"when": "focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.repositories"
			},
			{
				"command": "gitlens.views.scm.grouped.searchAndCompare",
				"key": "9",
				"when": "focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.searchAndCompare"
			},
			{
				"command": "gitlens.views.scm.grouped.stashes",
				"key": "4",
				"when": "focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.stashes"
			},
			{
				"command": "gitlens.views.scm.grouped.tags",
				"key": "5",
				"when": "focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.tags"
			},
			{
				"command": "gitlens.views.scm.grouped.worktrees",
				"key": "6",
				"when": "focusedView == gitlens.views.scm.grouped && config.gitlens.views.scm.grouped.views.worktrees"
			},
			{
				"command": "gitlens.views.searchAndCompare.copy",
				"key": "ctrl+c",
				"when": "focusedView == gitlens.views.searchAndCompare",
				"mac": "cmd+c"
			},
			{
				"command": "gitlens.views.stashes.copy",
				"key": "ctrl+c",
				"when": "focusedView == gitlens.views.stashes",
				"mac": "cmd+c"
			},
			{
				"command": "gitlens.views.tags.copy",
				"key": "ctrl+c",
				"when": "focusedView == gitlens.views.tags",
				"mac": "cmd+c"
			},
			{
				"command": "gitlens.views.workspaces.copy",
				"key": "ctrl+c",
				"when": "focusedView == gitlens.views.workspaces",
				"mac": "cmd+c"
			},
			{
				"command": "gitlens.views.worktrees.copy",
				"key": "ctrl+c",
				"when": "focusedView == gitlens.views.worktrees",
				"mac": "cmd+c"
			}
		],
		"customEditors": [
			{
				"viewType": "gitlens.rebase",
				"displayName": "GitLens 交互式变基编辑器",
				"selector": [
					{
						"filenamePattern": "git-rebase-todo"
					}
				]
			}
		],
		"resourceLabelFormatters": [
			{
				"scheme": "gitlens",
				"authority": "*",
				"formatting": {
					"label": "${path} (${query.ref})",
					"normalizeDriveLetter": true,
					"tildify": true,
					"workspaceSuffix": "GitLens"
				}
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "gitlens",
					"title": "GitLens",
					"icon": "$(gitlens-gitlens)"
				},
				{
					"id": "gitlensInspect",
					"title": "GitLens 检查",
					"icon": "$(gitlens-gitlens-inspect)"
				},
				{
					"id": "gitlensPatch",
					"title": "GitLens 补丁",
					"icon": "$(gitlens-cloud-patch)"
				}
			],
			"panel": [
				{
					"id": "gitlensPanel",
					"title": "GitLens",
					"icon": "$(gitlens-graph)"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "gitlens.views.drafts",
				"contents": "Cloud Patches 预览 — 私密且安全地与特定队友和其他开发者共享代码，可随时随地访问。提升协作效率，无需为你的仓库增加噪音。"
			},
			{
				"view": "gitlens.views.drafts",
				"contents": "[创建 Cloud Patch](command:gitlens.views.drafts.create)",
				"when": "gitlens:plus"
			},
			{
				"view": "gitlens.views.drafts",
				"contents": "[试用 GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22cloud-patches%22%7D)\n\n免费试用 14 天 GitLens Pro — 无需信用卡。或[登录](command:gitlens.plus.login?%7B%22source%22%3A%22cloud-patches%22%7D)。",
				"when": "!gitlens:plus"
			},
			{
				"view": "gitlens.views.drafts",
				"contents": "将来可能需要账户并可能需要 [GitLens Pro](https://help.gitkraken.com/gitlens/gitlens-community-vs-gitlens-pro/)。",
				"when": "gitlens:plus:state != 6"
			},
			{
				"view": "gitlens.views.launchpad",
				"contents": "[Launchpad](command:gitlens.views.launchpad.info \"了解 Launchpad\") — 将你的拉取请求分组，帮助你专注并保持团队畅通无阻。"
			},
			{
				"view": "gitlens.views.launchpad",
				"contents": "[连接集成...](command:gitlens.showLaunchpad?%7B%22source%22%3A%22launchpad-view%22%7D)\n\n允许 Launchpad 将你的拉取请求分组并保持团队畅通无阻。",
				"when": "!gitlens:launchpad:connected"
			},
			{
				"view": "gitlens.views.launchpad",
				"contents": "[重新发送验证邮件](command:gitlens.plus.resendVerification?%7B%22source%22%3A%22launchpad-view%22%7D)\n\n你必须验证邮箱后才能继续，或[重新检查状态](command:gitlens.plus.validate?%7B%22source%22%3A%22launchpad-view%22%7D)。",
				"when": "gitlens:launchpad:connected && gitlens:plus:state == -1"
			},
			{
				"view": "gitlens.views.launchpad",
				"contents": "[继续](command:gitlens.plus.startPreviewTrial?%7B%22source%22%3A%22launchpad-view%22%7D)\n\n继续可获得 3 天本地 Pro 功能预览。 [开始 14 天 Pro 试用](command:gitlens.plus.signUp?%7B%22source%22%3A%22launchpad-view%22%7D) 或 [登录](command:gitlens.plus.login?%7B%22source%22%3A%22launchpad-view%22%7D) 以获得完整 Pro 功能。",
				"when": "false && gitlens:launchpad:connected && gitlens:plus:state == 0"
			},
			{
				"view": "gitlens.views.launchpad",
				"contents": "[试用 GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22launchpad-view%22%7D)\n\n免费试用 14 天 GitLens Pro — 无需信用卡。或[登录](command:gitlens.plus.login?%7B%22source%22%3A%22launchpad-view%22%7D)。",
				"when": "gitlens:launchpad:connected && (gitlens:plus:state == 0 || gitlens:plus:state == 2)"
			},
			{
				"view": "gitlens.views.launchpad",
				"contents": "[升级到 Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22launchpad-view%22%7D)",
				"when": "gitlens:launchpad:connected && gitlens:plus:state == 4"
			},
			{
				"view": "gitlens.views.launchpad",
				"contents": "GitLens Pro 限时促销。",
				"when": "gitlens:launchpad:connected && gitlens:plus:state == 4 && gitlens:promo && gitlens:promo != pro50"
			},
			{
				"view": "gitlens.views.launchpad",
				"contents": "GitLens Pro 立减 50%。",
				"when": "gitlens:launchpad:connected && gitlens:plus:state == 4 && gitlens:promo == pro50"
			},
			{
				"view": "gitlens.views.launchpad",
				"contents": "你的 Pro 试用已结束。请升级以获得 Launchpad 和其他 Pro 功能的完整访问权限。",
				"when": "gitlens:launchpad:connected && gitlens:plus:state == 4"
			},
			{
				"view": "gitlens.views.launchpad",
				"contents": "[继续](command:gitlens.plus.reactivateProTrial?%7B%22source%22%3A%22launchpad-view%22%7D)\n\n重新激活 Pro 试用，免费体验 Launchpad 及所有新 Pro 功能 14 天！",
				"when": "gitlens:launchpad:connected && gitlens:plus:state == 5"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "GitLens 将许多相关视图（如提交、分支、贮藏等）分组，便于管理。\n\n[继续](command:gitlens.views.scm.grouped.welcome.dismiss)\n\n使用上方标签导航，或将你想单独显示的视图分离。你可以随时通过视图标题栏的“x”重新分组。",
				"when": "gitlens:views:scm:grouped:welcome && gitlens:install:new"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "在 GitLens 16 中，我们将许多相关视图（如提交、分支、贮藏等）分组，便于管理。\n\n[继续](command:gitlens.views.scm.grouped.welcome.dismiss)\n\n更喜欢分开？[恢复视图到之前位置](command:gitlens.views.scm.grouped.welcome.restore)\n\n使用上方标签导航，或将你想单独显示的视图分离。你可以随时通过视图标题栏的“x”重新分组。",
				"when": "gitlens:views:scm:grouped:welcome && !gitlens:install:new"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "[Launchpad](command:gitlens.views.launchpad.info \"了解 Launchpad\") — 将你的拉取请求分组，帮助你专注并保持团队畅通无阻。",
				"when": "gitlens:views:scm:grouped:view == launchpad"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "[连接集成...](command:gitlens.showLaunchpad?%7B%22source%22%3A%22launchpad-view%22%7D)\n\n允许 Launchpad 将你的拉取请求分组并保持团队畅通无阻。",
				"when": "gitlens:views:scm:grouped:view == launchpad && !gitlens:launchpad:connected"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "[重新发送验证邮件](command:gitlens.plus.resendVerification?%7B%22source%22%3A%22launchpad-view%22%7D)\n\n你必须验证邮箱后才能继续，或[重新检查状态](command:gitlens.plus.validate?%7B%22source%22%3A%22launchpad-view%22%7D)。",
				"when": "gitlens:views:scm:grouped:view == launchpad && gitlens:launchpad:connected && gitlens:plus:state == -1"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "[继续](command:gitlens.plus.startPreviewTrial?%7B%22source%22%3A%22launchpad-view%22%7D)\n\n继续可获得 3 天本地 Pro 功能预览。 [开始 14 天 Pro 试用](command:gitlens.plus.signUp?%7B%22source%22%3A%22launchpad-view%22%7D) 或 [登录](command:gitlens.plus.login?%7B%22source%22%3A%22launchpad-view%22%7D) 以获得完整 Pro 功能。",
				"when": "gitlens:views:scm:grouped:view == launchpad && false && gitlens:launchpad:connected && gitlens:plus:state == 0"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "[试用 GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22launchpad-view%22%7D)\n\n免费试用 14 天 GitLens Pro — 无需信用卡。或[登录](command:gitlens.plus.login?%7B%22source%22%3A%22launchpad-view%22%7D)。",
				"when": "gitlens:views:scm:grouped:view == launchpad && gitlens:launchpad:connected && (gitlens:plus:state == 0 || gitlens:plus:state == 2)"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "[升级到 Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22launchpad-view%22%7D)",
				"when": "gitlens:views:scm:grouped:view == launchpad && gitlens:launchpad:connected && gitlens:plus:state == 4"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "GitLens Pro 限时促销。",
				"when": "gitlens:views:scm:grouped:view == launchpad && gitlens:launchpad:connected && gitlens:plus:state == 4 && gitlens:promo && gitlens:promo != pro50"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "GitLens Pro 立减 50%。",
				"when": "gitlens:views:scm:grouped:view == launchpad && gitlens:launchpad:connected && gitlens:plus:state == 4 && gitlens:promo == pro50"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "你的 Pro 试用已结束。请升级以获得 Launchpad 和其他 Pro 功能的完整访问权限。",
				"when": "gitlens:views:scm:grouped:view == launchpad && gitlens:launchpad:connected && gitlens:plus:state == 4"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "[继续](command:gitlens.plus.reactivateProTrial?%7B%22source%22%3A%22launchpad-view%22%7D)\n\n重新激活 Pro 试用，免费体验 Launchpad 及所有新 Pro 功能 14 天！",
				"when": "gitlens:views:scm:grouped:view == launchpad && gitlens:launchpad:connected && gitlens:plus:state == 5"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "可按[消息](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)、[作者](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)、[SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)、[文件](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22file%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D) 或[变更](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22change%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D) 搜索提交\n\n[搜索提交...](command:gitlens.views.searchAndCompare.searchCommits)",
				"when": "gitlens:views:scm:grouped:view == searchAndCompare && !gitlens:hasVirtualFolders"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "可按[消息](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)、[作者](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D) 或[SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D) 搜索提交\n\n[搜索提交...](command:gitlens.views.searchAndCompare.searchCommits)",
				"when": "gitlens:views:scm:grouped:view == searchAndCompare && gitlens:hasVirtualFolders"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "比较 <分支、标签或引用> 与另一个 <分支、标签或引用>\n\n[比较引用...](command:gitlens.views.searchAndCompare.selectForCompare)",
				"when": "gitlens:views:scm:grouped:view == searchAndCompare && !gitlens:hasVirtualFolders"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "[Worktrees](https://help.gitkraken.com/gitlens/side-bar/#worktrees-view-pro) 专业版 — 允许你同时在多个分支上工作，减少上下文切换。",
				"when": "gitlens:views:scm:grouped:view == worktrees && !gitlens:hasVirtualFolders"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "[创建 Worktree...](command:gitlens.views.createWorktree)",
				"when": "gitlens:views:scm:grouped:view == worktrees && !gitlens:plus:required"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "[重新发送验证邮件](command:gitlens.plus.resendVerification?%7B%22source%22%3A%22worktrees%22%7D)\n\n你必须验证邮箱后才能继续，或[重新检查状态](command:gitlens.plus.validate?%7B%22source%22%3A%22worktrees%22%7D)。",
				"when": "gitlens:views:scm:grouped:view == worktrees && gitlens:plus:state == -1"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "[继续](command:gitlens.plus.startPreviewTrial?%7B%22source%22%3A%22worktrees%22%7D)\n\n继续可获得 3 天本地 Pro 功能预览。 [开始 14 天 Pro 试用](command:gitlens.plus.signUp?%7B%22source%22%3A%22worktrees%22%7D) 或 [登录](command:gitlens.plus.login?%7B%22source%22%3A%22worktrees%22%7D) 以获得完整 Pro 功能。",
				"when": "false && gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 0"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "[试用 GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22worktrees%22%7D)\n\n免费试用 14 天 GitLens Pro — 无需信用卡。或[登录](command:gitlens.plus.login?%7B%22source%22%3A%22worktrees%22%7D)。",
				"when": "gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && (gitlens:plus:state == 0 || gitlens:plus:state == 2)"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "[升级到 Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22worktrees%22%7D)",
				"when": "gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 4"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "GitLens Pro 限时促销。",
				"when": "gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 4 && gitlens:promo && gitlens:promo != pro50"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "GitLens Pro 立减 50%。",
				"when": "gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 4 && gitlens:promo == pro50"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "你的 Pro 试用已结束。请升级以获得 Worktrees 和其他 Pro 功能的完整访问权限。",
				"when": "gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 4"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "[继续](command:gitlens.plus.reactivateProTrial?%7B%22source%22%3A%22worktrees%22%7D)\n\n重新激活 Pro 试用，免费体验 Worktrees 及所有新 Pro 功能 14 天！",
				"when": "gitlens:views:scm:grouped:view == worktrees && gitlens:plus:required && gitlens:plus:state == 5"
			},
			{
				"view": "gitlens.views.scm.grouped",
				"contents": "在私有仓库使用需 [GitLens Pro](https://help.gitkraken.com/gitlens/gitlens-community-vs-gitlens-pro/)。",
				"when": "gitlens:views:scm:grouped:view == worktrees && gitlens:plus:state != 6"
			},
			{
				"view": "gitlens.views.searchAndCompare",
				"contents": "可按[消息](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)、[作者](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)、[SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)、[文件](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22file%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D) 或[变更](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22change%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D) 搜索提交\n\n[搜索提交...](command:gitlens.views.searchAndCompare.searchCommits)",
				"when": "!gitlens:hasVirtualFolders"
			},
			{
				"view": "gitlens.views.searchAndCompare",
				"contents": "可按[消息](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22message%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D)、[作者](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22author%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D) 或[SHA](command:gitlens.views.searchAndCompare.searchCommits?%7B%22search%22%3A%7B%22query%22%3A%22commit%3A%22%7D%2C%22prefillOnly%22%3Atrue%7D) 搜索提交\n\n[搜索提交...](command:gitlens.views.searchAndCompare.searchCommits)",
				"when": "gitlens:hasVirtualFolders"
			},
			{
				"view": "gitlens.views.searchAndCompare",
				"contents": "比较 <分支、标签或引用> 与另一个 <分支、标签或引用>\n\n[比较引用...](command:gitlens.views.searchAndCompare.selectForCompare)",
				"when": "!gitlens:hasVirtualFolders"
			},
			{
				"view": "gitlens.views.workspaces",
				"contents": "Workspaces 预览 — 分组和管理多个仓库，随时随地访问，简化你的工作流。\n\n可为自己创建工作区，或（即将支持）与团队共享，加快上手速度并提升协作。"
			},
			{
				"view": "gitlens.views.workspaces",
				"contents": "[创建 Cloud Workspace](command:gitlens.views.workspaces.create)",
				"when": "gitlens:plus"
			},
			{
				"view": "gitlens.views.workspaces",
				"contents": "[试用 GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22workspaces%22%7D)\n\n免费试用 14 天 GitLens Pro — 无需信用卡。或[登录](command:gitlens.plus.login?%7B%22source%22%3A%22workspaces%22%7D)。",
				"when": "!gitlens:plus"
			},
			{
				"view": "gitlens.views.workspaces",
				"contents": "将来可能需要账户并可能需要 [GitLens Pro](https://help.gitkraken.com/gitlens/gitlens-community-vs-gitlens-pro/)。",
				"when": "gitlens:plus:state != 6"
			},
			{
				"view": "gitlens.views.worktrees",
				"contents": "[Worktrees](https://help.gitkraken.com/gitlens/side-bar/#worktrees-view-pro) 专业版 — 允许你同时在多个分支上工作，减少上下文切换。"
			},
			{
				"view": "gitlens.views.worktrees",
				"contents": "[创建 Worktree...](command:gitlens.views.createWorktree)",
				"when": "!gitlens:plus:required"
			},
			{
				"view": "gitlens.views.worktrees",
				"contents": "[重新发送验证邮件](command:gitlens.plus.resendVerification?%7B%22source%22%3A%22worktrees%22%7D)\n\n你必须验证邮箱后才能继续，或[重新检查状态](command:gitlens.plus.validate?%7B%22source%22%3A%22worktrees%22%7D)。",
				"when": "gitlens:plus:state == -1"
			},
			{
				"view": "gitlens.views.worktrees",
				"contents": "[继续](command:gitlens.plus.startPreviewTrial?%7B%22source%22%3A%22worktrees%22%7D)\n\n继续可获得 3 天本地 Pro 功能预览。 [开始 14 天 Pro 试用](command:gitlens.plus.signUp?%7B%22source%22%3A%22worktrees%22%7D) 或 [登录](command:gitlens.plus.login?%7B%22source%22%3A%22worktrees%22%7D) 以获得完整 Pro 功能。",
				"when": "false && gitlens:plus:required && gitlens:plus:state == 0"
			},
			{
				"view": "gitlens.views.worktrees",
				"contents": "[试用 GitLens Pro](command:gitlens.plus.signUp?%7B%22source%22%3A%22worktrees%22%7D)\n\n免费试用 14 天 GitLens Pro — 无需信用卡。或[登录](command:gitlens.plus.login?%7B%22source%22%3A%22worktrees%22%7D)。",
				"when": "gitlens:plus:required && (gitlens:plus:state == 0 || gitlens:plus:state == 2)"
			},
			{
				"view": "gitlens.views.worktrees",
				"contents": "[升级到 Pro](command:gitlens.plus.upgrade?%7B%22source%22%3A%22worktrees%22%7D)",
				"when": "gitlens:plus:required && gitlens:plus:state == 4"
			},
			{
				"view": "gitlens.views.worktrees",
				"contents": "GitLens Pro 限时促销。",
				"when": "gitlens:plus:required && gitlens:plus:state == 4 && gitlens:promo && gitlens:promo != pro50"
			},
			{
				"view": "gitlens.views.worktrees",
				"contents": "GitLens Pro 立减 50%。",
				"when": "gitlens:plus:required && gitlens:plus:state == 4 && gitlens:promo == pro50"
			},
			{
				"view": "gitlens.views.worktrees",
				"contents": "你的 Pro 试用已结束。请升级以获得 Worktrees 和其他 Pro 功能的完整访问权限。",
				"when": "gitlens:plus:required && gitlens:plus:state == 4"
			},
			{
				"view": "gitlens.views.worktrees",
				"contents": "[继续](command:gitlens.plus.reactivateProTrial?%7B%22source%22%3A%22worktrees%22%7D)\n\n重新激活 Pro 试用，免费体验 Worktrees 及所有新 Pro 功能 14 天！",
				"when": "gitlens:plus:required && gitlens:plus:state == 5"
			},
			{
				"view": "gitlens.views.worktrees",
				"contents": "在私有仓库使用需 [GitLens Pro](https://help.gitkraken.com/gitlens/gitlens-community-vs-gitlens-pro/)。",
				"when": "gitlens:plus:state != 6"
			}
		],
		"views": {
			"scm": [
				{
					"id": "gitlens.views.repositories",
					"name": "仓库",
					"when": "!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.repositories || gitlens:views:scm:grouped:views:repositories)",
					"contextualTitle": "GitLens",
					"icon": "$(gitlens-repositories-view)",
					"visibility": "hidden"
				},
				{
					"id": "gitlens.views.commits",
					"name": "提交",
					"when": "!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.commits || gitlens:views:scm:grouped:views:commits)",
					"contextualTitle": "GitLens",
					"icon": "$(gitlens-commits-view)",
					"visibility": "visible"
				},
				{
					"id": "gitlens.views.branches",
					"name": "分支",
					"when": "!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.branches || gitlens:views:scm:grouped:views:branches)",
					"contextualTitle": "GitLens",
					"icon": "$(gitlens-branches-view)",
					"visibility": "collapsed"
				},
				{
					"id": "gitlens.views.remotes",
					"name": "远程",
					"when": "!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.remotes || gitlens:views:scm:grouped:views:remotes)",
					"contextualTitle": "GitLens",
					"icon": "$(gitlens-remotes-view)",
					"visibility": "collapsed"
				},
				{
					"id": "gitlens.views.stashes",
					"name": "贮藏",
					"when": "!gitlens:disabled && !gitlens:hasVirtualFolders && !(config.gitlens.views.scm.grouped.views.stashes || gitlens:views:scm:grouped:views:stashes)",
					"contextualTitle": "GitLens",
					"icon": "$(gitlens-stashes-view)",
					"visibility": "collapsed"
				},
				{
					"id": "gitlens.views.tags",
					"name": "标签",
					"when": "!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.tags || gitlens:views:scm:grouped:views:tags)",
					"contextualTitle": "GitLens",
					"icon": "$(gitlens-tags-view)",
					"visibility": "collapsed"
				},
				{
					"id": "gitlens.views.worktrees",
					"name": "工作区树",
					"when": "!gitlens:disabled && !gitlens:hasVirtualFolders && gitlens:plus:enabled && !(config.gitlens.views.scm.grouped.views.worktrees || gitlens:views:scm:grouped:views:worktrees)",
					"contextualTitle": "GitLens",
					"icon": "$(gitlens-worktrees-view)",
					"visibility": "collapsed"
				},
				{
					"id": "gitlens.views.contributors",
					"name": "贡献者",
					"when": "!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.contributors || gitlens:views:scm:grouped:views:contributors)",
					"contextualTitle": "GitLens",
					"icon": "$(gitlens-contributors-view)",
					"visibility": "collapsed"
				},
				{
					"id": "gitlens.views.scm.grouped",
					"name": "GitLens",
					"when": "!gitlens:disabled && ((config.gitlens.views.scm.grouped.views.branches || gitlens:views:scm:grouped:views:branches) || (config.gitlens.views.scm.grouped.views.commits || gitlens:views:scm:grouped:views:commits) || (config.gitlens.views.scm.grouped.views.contributors || gitlens:views:scm:grouped:views:contributors) || (config.gitlens.views.scm.grouped.views.launchpad || gitlens:views:scm:grouped:views:launchpad) || (config.gitlens.views.scm.grouped.views.remotes || gitlens:views:scm:grouped:views:remotes) || (config.gitlens.views.scm.grouped.views.repositories || gitlens:views:scm:grouped:views:repositories) || (config.gitlens.views.scm.grouped.views.searchAndCompare || gitlens:views:scm:grouped:views:searchAndCompare) || (config.gitlens.views.scm.grouped.views.stashes || gitlens:views:scm:grouped:views:stashes) || (config.gitlens.views.scm.grouped.views.tags || gitlens:views:scm:grouped:views:tags) || (config.gitlens.views.scm.grouped.views.worktrees || gitlens:views:scm:grouped:views:worktrees))",
					"contextualTitle": "GitLens",
					"icon": "$(gitlens-gitlens)",
					"visibility": "visible"
				}
			],
			"gitlensInspect": [
				{
					"type": "webview",
					"id": "gitlens.views.commitDetails",
					"name": "检查",
					"when": "!gitlens:disabled",
					"contextualTitle": "GitLens",
					"icon": "$(gitlens-commit-view)",
					"initialSize": 6,
					"visibility": "visible"
				},
				{
					"id": "gitlens.views.pullRequest",
					"name": "拉取请求",
					"when": "!gitlens:disabled && gitlens:views:pullRequest:visible",
					"contextualTitle": "GitLens",
					"icon": "$(git-pull-request)",
					"initialSize": 1,
					"visibility": "visible"
				},
				{
					"id": "gitlens.views.lineHistory",
					"name": "行历史",
					"when": "!gitlens:disabled && !gitlens:hasVirtualFolders",
					"contextualTitle": "GitLens",
					"icon": "$(gitlens-history-view)",
					"initialSize": 1,
					"visibility": "collapsed"
				},
				{
					"id": "gitlens.views.fileHistory",
					"name": "文件历史",
					"when": "!gitlens:disabled",
					"contextualTitle": "GitLens",
					"icon": "$(gitlens-history-view)",
					"initialSize": 2,
					"visibility": "visible"
				},
				{
					"type": "webview",
					"id": "gitlens.views.timeline",
					"name": "可视化文件历史",
					"when": "!gitlens:disabled && gitlens:plus:enabled",
					"contextualTitle": "GitLens",
					"icon": "$(graph-scatter)",
					"initialSize": 1,
					"visibility": "visible"
				},
				{
					"id": "gitlens.views.searchAndCompare",
					"name": "搜索与比较",
					"when": "!gitlens:disabled && !(config.gitlens.views.scm.grouped.views.searchAndCompare || gitlens:views:scm:grouped:views:searchAndCompare)",
					"contextualTitle": "GitLens",
					"icon": "$(gitlens-search-view)",
					"initialSize": 2,
					"visibility": "visible"
				}
			],
			"gitlens": [
				{
					"type": "webview",
					"id": "gitlens.views.home",
					"name": "主页",
					"contextualTitle": "GitLens",
					"icon": "$(gitlens-gitlens)",
					"initialSize": 6,
					"visibility": "visible"
				},
				{
					"id": "gitlens.views.launchpad",
					"name": "启动板",
					"when": "!(config.gitlens.views.scm.grouped.views.launchpad || gitlens:views:scm:grouped:views:launchpad)",
					"contextualTitle": "GitLens",
					"icon": "$(gitlens-launchpad-view)",
					"initialSize": 2,
					"visibility": "collapsed"
				},
				{
					"id": "gitlens.views.drafts",
					"name": "云补丁",
					"when": "!gitlens:untrusted && !gitlens:hasVirtualFolders && gitlens:gk:organization:drafts:enabled && config.gitlens.cloudPatches.enabled",
					"contextualTitle": "GitLens",
					"icon": "$(gitlens-cloud-patch)",
					"initialSize": 2,
					"visibility": "collapsed"
				},
				{
					"id": "gitlens.views.workspaces",
					"name": "云工作区",
					"when": "!gitlens:untrusted && !gitlens:hasVirtualFolders",
					"contextualTitle": "GitLens",
					"icon": "$(gitlens-workspaces-view)",
					"initialSize": 2,
					"visibility": "collapsed"
				}
			],
			"gitlensPanel": [
				{
					"type": "webview",
					"id": "gitlens.views.graph",
					"name": "图表",
					"when": "!gitlens:disabled && gitlens:plus:enabled",
					"contextualTitle": "GitLens",
					"icon": "$(gitlens-graph)",
					"initialSize": 4,
					"visibility": "visible"
				},
				{
					"type": "webview",
					"id": "gitlens.views.graphDetails",
					"name": "图表详情",
					"when": "!gitlens:disabled && gitlens:plus:enabled",
					"contextualTitle": "GitLens",
					"icon": "$(gitlens-commit-view)",
					"initialSize": 1,
					"visibility": "visible"
				}
			],
			"gitlensPatch": [
				{
					"type": "webview",
					"id": "gitlens.views.patchDetails",
					"name": "补丁",
					"when": "!gitlens:untrusted && config.gitlens.cloudPatches.enabled && gitlens:views:patchDetails:mode",
					"contextualTitle": "GitLens",
					"icon": "$(gitlens-cloud-patch)",
					"initialSize": 24
				}
			]
		},
		"walkthroughs": [
			{
				"id": "welcome",
				"title": "开始使用 GitLens",
				"description": "为 Git 提供强大功能，发掘你仓库中未被利用的知识，更好地理解、编写和审查代码。",
				"steps": [
					{
						"id": "get-started-community",
						"title": "欢迎使用 GitLens",
						"description": "感谢你安装 GitLens —— VS Code 最受欢迎的 Git 扩展！\n\n**社区版 vs. 专业版**\n\n你正在使用 **GitLens 社区版**。\n通过内嵌 blame 注解、悬停、CodeLens 等功能，完全免费地跟踪代码变更并查看作者。\n\n**利用 GitLens Pro 强大工作流**\n\n**GitLens Pro** 版解锁高级功能，加速 PR 审查，借助丰富的代码可视化获得可操作洞察，并简化团队协作提升生产力。\n\n[开始使用 GitLens Pro](command:gitlens.walkthrough.plus.signUp)",
						"media": {
							"markdown": "walkthroughs/welcome/get-started-community.md"
						},
						"completionEvents": [
							"onContext:gitlens:walkthroughState:gettingStarted == true"
						],
						"when": "!gitlens:plus:state || gitlens:plus:state <= 2"
					},
					{
						"id": "welcome-in-trial",
						"title": "欢迎体验 GitLens Pro",
						"description": "感谢你开始 **GitLens Pro** 试用。\n\n完成本向导，体验增强的 PR 审查工具、更深入的代码历史可视化和高效协作，助你提升生产力。\n\n[继续向导](command:gitlens.walkthrough.openWalkthrough)\n\n试用结束后，你将回到 **GitLens 社区版** —— 你仍可免费使用内嵌 blame 注解、悬停、CodeLens 等功能。[升级到 GitLens Pro](command:gitlens.walkthrough.plus.upgrade) 以继续完整体验。\n\n[升级到 GitLens Pro](command:gitlens.walkthrough.plus.upgrade)",
						"media": {
							"markdown": "walkthroughs/welcome/welcome-in-trial.md"
						},
						"completionEvents": [
							"onContext:gitlens:walkthroughState:gettingStarted == true"
						],
						"when": "gitlens:plus:state == 3"
					},
					{
						"id": "welcome-in-trial-expired",
						"title": "充分利用 GitLens",
						"description": "感谢你安装 GitLens 并体验 GitLens Pro。\n\n你现在使用的是 **GitLens 社区版**。\n通过内嵌 blame 注解、悬停、CodeLens 等功能，完全免费地跟踪代码变更并查看作者。\n\n了解 [GitLens 社区版与专业版的区别](command:gitlens.walkthrough.openCommunityVsPro)。\n\n**解锁更多强大工具，升级 GitLens Pro**\n\n[升级到 GitLens Pro](command:gitlens.walkthrough.plus.upgrade)\n\n使用 GitLens Pro，你可以加速 PR 审查、深入可视化代码历史，并提升团队协作。它是优化 VS Code 工作流的理想升级。",
						"media": {
							"markdown": "walkthroughs/welcome/welcome-in-trial-expired.md"
						},
						"completionEvents": [
							"onContext:gitlens:walkthroughState:gettingStarted == true"
						],
						"when": "gitlens:plus:state == 4"
					},
					{
						"id": "welcome-in-trial-expired-eligible",
						"title": "充分利用 GitLens ",
						"description": "感谢你安装 GitLens 并体验 GitLens Pro。\n\n你正在使用 **GitLens 社区版**。\n通过内嵌 blame 注解、悬停、CodeLens 等功能，完全免费地跟踪代码变更并查看作者。\n\n**解锁更多强大工具 —— 再次免费试用 GitLens Pro 14 天。**\n\n[重新激活 GitLens Pro 试用](command:gitlens.walkthrough.plus.reactivate)\n\n使用 GitLens Pro，你可以加速 PR 审查、深入可视化代码历史，并提升团队协作。它是优化 VS Code 工作流的理想升级。",
						"media": {
							"markdown": "walkthroughs/welcome/welcome-in-trial-expired-eligible.md"
						},
						"completionEvents": [
							"onContext:gitlens:walkthroughState:gettingStarted == true"
						],
						"when": "gitlens:plus:state == 5"
					},
					{
						"id": "welcome-paid",
						"title": "发现 GitLens Pro 的优势",
						"description": "作为 **GitLens Pro** 用户，你可使用强大工具，加速 PR 审查、深入可视化代码历史，并简化团队协作。\n\n[继续向导](command:gitlens.walkthrough.openWalkthrough)\n\n想充分发挥 **GitLens Pro**，请完成向导并访问帮助中心获取详细指南。\n\n**[在帮助中心了解更多](command:gitlens.walkthrough.openHelpCenter)**",
						"media": {
							"markdown": "walkthroughs/welcome/welcome-paid.md"
						},
						"completionEvents": [
							"onContext:gitlens:walkthroughState:gettingStarted == true"
						],
						"when": "gitlens:plus:state == 6"
					},
					{
						"id": "welcome-home-view",
						"title": "（新）主页视图",
						"description": "紧凑而强大，主页视图帮助你快速开始处理问题、创建 PR 并管理分支 —— 全部集中在一个智能视图中。\n\n通过清晰的操作路径提升工作流可见性：\n\n- 我现在正在做什么？\n- 接下来该做什么？\n- 最近做了哪些工作？\n\n主页视图是开发者减少繁琐上下文切换、专注于 VS Code 工作的理想助手。\n\n\n[打开主页视图](command:gitlens.walkthrough.showHomeView)\n$(gitlens-play-button)  [观看主页视图视频](command:gitlens.walkthrough.openHomeViewVideo)",
						"media": {
							"markdown": "walkthroughs/welcome/home.md"
						},
						"completionEvents": [
							"onContext:gitlens:walkthroughState:homeView == true"
						]
					},
					{
						"id": "visualize-code-history",
						"title": "交互式代码历史",
						"description": "$(gitlens-gitlens)  **Blame 注解与悬停**\n\n通过编辑器内的 blame 注解、悬停和 CodeLens，查看是谁、为何更改了代码。\n\n$(gitlens-graph)  **可视化提交图与搜索**\n\n使用交互式提交图清晰可视化变更并搜索仓库，轻松梳理复杂 Git 历史。\n\n[查看你的提交图](command:gitlens.walkthrough.showGraph)\n\n$(gitlens-gitlens-inspect)  **GitLens 检查**\n\n深入了解文件、文件夹或特定行的修订历史。快速获取变更上下文。[打开 GitLens 检查](command:gitlens.walkthrough.gitlensInspect)\n\n$(gitlens-play-button)  [观看交互式代码历史视频](command:gitlens.walkthrough.openInteractiveCodeHistory)",
						"media": {
							"markdown": "walkthroughs/welcome/visualize-code-history.md"
						},
						"completionEvents": [
							"onContext:gitlens:walkthroughState:visualizeCodeHistory == true"
						]
					},
					{
						"id": "accelerate-pr-reviews",
						"title": "加速 PR 审查",
						"description": "$(gitlens-launchpad-view)  **启动板：你的 PR 中心**\n\n在 VS Code 内轻松按状态管理 GitHub 拉取请求，优先处理任务并发现瓶颈。\n\n[在启动板查看我的 PR](command:gitlens.walkthrough.showLaunchpad)\n\n💡 [连接](command:gitlens.walkthrough.connectIntegrations) 你的 GitHub 或主机服务以使用启动板，加速 PR 审查\n\n$(folder-opened)  **工作区树：多分支高效协作**\n\n可同时在多个分支上工作，处理热修复、新功能或实验，无需打断主工作区。\n\n\n[添加工作区树](command:gitlens.walkthrough.worktree.create)\n$(gitlens-play-button)  [观看如何加速代码审查](command:gitlens.walkthrough.openAcceleratePrReviews)",
						"media": {
							"markdown": "walkthroughs/welcome/accelerate-pr-reviews.md"
						},
						"completionEvents": [
							"onContext:gitlens:walkthroughState:prReviews == true"
						]
					},
					{
						"id": "streamline-collaboration",
						"title": "简化协作",
						"description": "$(gitlens-cloud-patch)  **云补丁：PR 前协作**\n\n无需提交到仓库或影响 CI，即可分享和迭代代码。让团队协作更灵活高效。\n\n[打开云补丁](command:gitlens.walkthrough.showDraftsView)\n\n$(gitlens-code-suggestion)  **代码建议**\n\n审查 GitHub 和 GitLab 拉取请求，并直接通过 GitLens 向队友发送建议变更。\n\n$(gitlens-play-button)  [观看如何提升 GitLens 协作](command:gitlens.walkthrough.openStreamlineCollaboration)",
						"media": {
							"markdown": "walkthroughs/welcome/streamline-collaboration.md"
						},
						"completionEvents": [
							"onContext:gitlens:walkthroughState:streamlineCollaboration == true"
						]
					},
					{
						"id": "improve-workflows-with-integrations",
						"title": "通过集成提升工作流",
						"description": "$(extensions)  **集成**\n\n连接 GitHub、GitLab 和 Jira，将 PR 和问题关联到分支与提交。可在启动板跟踪并操作 PR，快速开始处理问题，并在自动链接中获得增强信息。\n\n[连接集成](command:gitlens.walkthrough.connectIntegrations)\n\n$(link)  **自动链接**\n\nGitLens 会自动检测提交信息中的模式，为 GitHub、GitLab、Gitea、Gerrit、Google Source、Bitbucket、Azure DevOps 及自定义服务器生成 PR 和问题链接。\n\n[配置自动链接](command:gitlens.walkthrough.showAutolinks)，自定义与其他服务的模式匹配。\n\n$(gitlens-play-button)  [观看集成如何提升 GitLens](command:gitlens.walkthrough.openStartIntegrations)",
						"media": {
							"markdown": "walkthroughs/welcome/improve-workflows-with-integrations.md"
						},
						"completionEvents": [
							"onContext:gitlens:walkthroughState:integrations == true"
						]
					}
				]
			}
		]
	},
	"scripts": {
		"analyze:bundle": "webpack --mode production --env analyzeBundle",
		"analyze:bundle:extension": "webpack --mode production --config-name extension:node --env analyzeBundle",
		"analyze:bundle:extension:browser": "webpack --mode production --config-name extension:webworker --env analyzeBundle",
		"analyze:bundle:webviews": "webpack --mode production --config-name webviews:common --config-name webviews --config-name webviews:graph-next --env analyzeBundle",
		"analyze:deps": "webpack --env analyzeDeps",
		"build": "webpack --mode development",
		"build:quick": "webpack --mode development --env skipLint",
		"build:extension": "webpack --mode development --config-name extension:node",
		"build:extension:browser": "webpack --mode development --config-name extension:webworker",
		"build:webviews": "webpack --mode development --config-name webviews:common --config-name webviews --config-name webviews:graph-next",
		"build:icons": "pnpm run icons:svgo && pnpm fantasticon && pnpm run icons:apply && pnpm run icons:export",
		"build:tests": "node ./scripts/esbuild.tests.mjs",
		"// Extracts the contributions from package.json into contributions.json": "//",
		"extract:contributions": "node --experimental-strip-types ./scripts/generateContributions.mts --extract",
		"// Generates contributions in contributions.json into package.json": "//",
		"generate:contributions": "node --experimental-strip-types ./scripts/generateContributions.mts",
		"// Generates command types from contributions.json into src/constants.commands.generated.ts": "//",
		"generate:commandTypes": "node --experimental-strip-types ./scripts/generateCommandTypes.mts",
		"// Generates docs/telemetry-events.md": "//",
		"generate:docs:telemetry": "node ./scripts/generateTelemetryDocs.mjs",
		"generate:emoji": "node ./scripts/generateEmojiShortcodeMap.mjs",
		"// Generates ThirdPartyNotices.txt": "//",
		"generate:licenses": "node ./scripts/generateLicenses.mjs",
		"bundle": "webpack --mode production",
		"bundle:extension": "webpack --mode production --config-name extension:node",
		"clean": "pnpx rimraf --glob dist out .vscode-test .vscode-test-web .eslintcache* tsconfig*.tsbuildinfo",
		"clean:all": "pnpm run clean && pnpm run clean:deps",
		"clean:lint": "pnpx rimraf .eslintcache",
		"clean:deps": "pnpx rimraf node_modules",
		"copy:images": "webpack --config webpack.config.images.mjs",
		"graph:link": "pnpm link @gitkraken/gitkraken-components",
		"graph:link:main": "pushd \"../GitKrakenComponents\" && pnpm link && popd && pnpm graph:link",
		"graph:unlink": "pnpm unlink @gitkraken/gitkraken-components && pnpm install --force",
		"graph:unlink:main": "pnpm graph:unlink && pushd \"../GitKrakenComponents\" && pnpm unlink && popd",
		"icons:apply": "node ./scripts/applyIconsContribution.mjs",
		"icons:export": "node ./scripts/export-codicons.mjs",
		"icons:svgo": "svgo -q -f ./images/icons/ --config svgo.config.js",
		"lint": "pnpm run clean:lint && eslint .",
		"lint:fix": "pnpm run clean:lint && eslint . --fix",
		"lint:webviews": "pnpm run clean:lint && eslint \"src/webviews/apps/**/*.ts?(x)\"",
		"package": "vsce package --no-dependencies",
		"package-pre": "pnpm run patch-pre && pnpm run package --pre-release",
		"patch-pre": "node ./scripts/applyPreReleasePatch.mjs",
		"prep-release": "node ./scripts/prep-release.mjs",
		"pretty": "prettier --config .prettierrc --write .",
		"pretty:check": "prettier --config .prettierrc --check .",
		"pub": "vsce publish --no-dependencies",
		"pub-pre": "vsce publish --no-dependencies --pre-release",
		"rebuild": "pnpm run reset && pnpm run build",
		"reset": "pnpm run clean && pnpm install --force",
		"test": "vscode-test",
		"test:e2e": "playwright test -c tests/e2e/playwright.config.ts",
		"watch": "webpack --watch --mode development",
		"watch:extension": "webpack --watch --mode development --config-name extension",
		"watch:quick": "webpack --watch --mode development --env skipLint",
		"watch:webviews": "webpack --watch --mode development --config-name webviews",
		"watch:tests": "node ./scripts/esbuild.tests.mjs --watch --mode development",
		"web": "vscode-test-web --extensionDevelopmentPath=. --folder-uri=vscode-vfs://github/gitkraken/vscode-gitlens",
		"web:serve": "node -e \"const p = require('path'); const h = require('os').homedir(); require('child_process').execSync('pnpx  serve --cors -l 5000 --ssl-cert '+p.resolve(h, 'certs/localhost.pem')+' --ssl-key '+p.resolve(h, 'certs/localhost-key.pem'), { stdio: 'inherit' })\"",
		"update-dts": "pushd \"src/@types\" && pnpx  @vscode/dts dev && popd",
		"update-dts:main": "pushd \"src/@types\" && pnpx  @vscode/dts main && popd",
		"pretest": "pnpm run build:tests",
		"vscode:prepublish": "pnpm run bundle"
	},
	"dependencies": {
		"@gitkraken/gitkraken-components": "10.7.0",
		"@gitkraken/gitkraken-components-next": "npm:@gitkraken/gitkraken-components@11.0.0-vnext.3",
		"@gitkraken/provider-apis": "0.28.3",
		"@gitkraken/shared-web-components": "0.1.1-rc.15",
		"@gk-nzaytsev/fast-string-truncated-width": "1.1.0",
		"@lit-labs/signals": "0.1.2",
		"@lit/context": "1.1.4",
		"@lit/react": "1.0.7",
		"@lit/task": "1.0.2",
		"@octokit/graphql": "8.2.1",
		"@octokit/request": "9.2.2",
		"@octokit/request-error": "6.1.7",
		"@octokit/types": "13.10.0",
		"@opentelemetry/api": "1.9.0",
		"@opentelemetry/exporter-trace-otlp-http": "0.200.0",
		"@opentelemetry/resources": "2.0.0",
		"@opentelemetry/sdk-trace-base": "2.0.0",
		"@opentelemetry/semantic-conventions": "1.30.0",
		"@r2wc/react-to-web-component": "2.0.4",
		"@shoelace-style/shoelace": "2.20.0",
		"@vscode/codicons": "0.0.36",
		"billboard.js": "3.15.0",
		"https-proxy-agent": "5.0.1",
		"iconv-lite": "0.6.3",
		"lit": "3.2.1",
		"marked": "15.0.7",
		"node-fetch": "2.7.0",
		"os-browserify": "0.3.0",
		"path-browserify": "1.0.1",
		"react": "16.8.4",
		"react-dom": "16.8.4",
		"react-next": "npm:react@19.0.0",
		"react-dom-next": "npm:react-dom@19.0.0",
		"signal-utils": "0.21.1",
		"slug": "10.0.0",
		"sortablejs": "1.15.0"
	},
	"devDependencies": {
		"@eamodio/eslint-lite-webpack-plugin": "0.2.0",
		"@eslint/js": "9.23.0",
		"@playwright/test": "1.51.1",
		"@swc/core": "1.11.13",
		"@twbs/fantasticon": "3.1.0",
		"@types/mocha": "10.0.10",
		"@types/node": "20.14.15",
		"@types/react": "17.0.84",
		"@types/react-next": "npm:@types/react@19.0.12",
		"@types/react-dom": "17.0.26",
		"@types/react-dom-next": "npm:@types/react-dom@19.0.4",
		"@types/sinon": "17.0.4",
		"@types/slug": "5.0.9",
		"@types/sortablejs": "1.15.8",
		"@types/vscode": "1.92.0",
		"@typescript-eslint/parser": "8.28.0",
		"@vscode/test-cli": "0.0.10",
		"@vscode/test-electron": "2.4.1",
		"@vscode/test-web": "0.0.67",
		"@vscode/vsce": "3.3.0",
		"cheerio": "1.0.0-rc.12",
		"circular-dependency-plugin": "5.2.2",
		"clean-webpack-plugin": "4.0.0",
		"copy-webpack-plugin": "13.0.0",
		"csp-html-webpack-plugin": "5.1.0",
		"css-loader": "7.1.2",
		"css-minimizer-webpack-plugin": "7.0.2",
		"cssnano-preset-advanced": "7.0.6",
		"esbuild": "0.25.1",
		"esbuild-loader": "4.3.0",
		"esbuild-node-externals": "1.18.0",
		"esbuild-sass-plugin": "3.3.1",
		"eslint": "9.23.0",
		"eslint-import-resolver-oxc": "0.13.1",
		"eslint-plugin-anti-trojan-source": "1.1.1",
		"eslint-plugin-import-x": "4.9.1",
		"eslint-plugin-lit": "2.0.0",
		"eslint-plugin-wc": "3.0.0",
		"fork-ts-checker-webpack-plugin": "9.0.2",
		"glob": "11.0.1",
		"globals": "16.0.0",
		"html-loader": "5.1.0",
		"html-webpack-plugin": "5.6.3",
		"image-minimizer-webpack-plugin": "4.1.3",
		"license-checker-rseidelsohn": "4.4.2",
		"lz-string": "1.5.0",
		"mini-css-extract-plugin": "2.9.2",
		"ovsx": "0.10.1",
		"playwright": "1.51.1",
		"prettier": "3.1.0",
		"regex-to-strings": "2.1.0",
		"sass": "1.86.0",
		"sass-loader": "16.0.5",
		"schema-utils": "4.3.0",
		"sharp": "0.33.5",
		"sinon": "19.0.4",
		"svgo": "3.3.2",
		"terser-webpack-plugin": "5.3.14",
		"ts-loader": "9.5.2",
		"typescript": "5.8.2",
		"typescript-eslint": "8.28.0",
		"webpack": "5.98.0",
		"webpack-bundle-analyzer": "4.10.2",
		"webpack-cli": "6.0.1",
		"webpack-node-externals": "3.0.0",
		"webpack-require-from": "1.8.6"
	},
	"resolutions": {
		"esbuild": "0.25.1",
		"iconv-lite": "0.6.3",
		"node-fetch": "2.7.0",
		"semver-regex": "4.0.5"
	},
	"packageManager": "pnpm@10.6.5",
	"__metadata": {
		"installedTimestamp": 1746373813538,
		"targetPlatform": "undefined",
		"size": 17348464
	}
}